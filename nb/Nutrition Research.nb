(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    181684,       3429]
NotebookOptionsPosition[    180266,       3375]
NotebookOutlinePosition[    180615,       3390]
CellTagsIndexPosition[    180572,       3387]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Nutrition Research", "Title",
 CellChangeTimes->{3.7213584822030087`*^9}],

Cell[CellGroupData[{

Cell["Food Type Properties", "Chapter",
 CellChangeTimes->{{3.7226607240160384`*^9, 3.722660750800903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{"\"\<FoodType\>\"", ",", "\"\<Properties\>\""}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"absolute alanine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteAlanineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteAlanineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute alcohol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteAlcoholContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteAlcoholContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute alpha carotene content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteAlphaCaroteneContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteAlphaCaroteneContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute alpha linolenic acid cis cis cis content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", 
         "\"AbsoluteAlphaLinolenicAcidCisCisCisContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteAlphaLinolenicAcidCisCisCisContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute alpha-linolenic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteAlphaLinolenicAcidContent\""}],
        "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteAlphaLinolenicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute alpha tocotrienol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteAlphaTocotrienolContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteAlphaTocotrienolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute arachidic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteArachidicAcidContent\""}], 
       "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteArachidicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute arachidonic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteArachidonicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteArachidonicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute arginine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteArginineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteArginineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute arsenic content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteArsenicContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteArsenicContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute ash content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteAshContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteAshContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute aspartic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteAsparticAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteAsparticAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute behenic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteBehenicAcidContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteBehenicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute beta carotene content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteBetaCaroteneContent\""}], 
       "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteBetaCaroteneContent\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute beta cryptoxanthin content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteBetaCryptoxanthinContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteBetaCryptoxanthinContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute betaine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteBetaineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteBetaineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute beta sitosterol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteBetaSitosterolContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteBetaSitosterolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute beta tocopherol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteBetaTocopherolContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteBetaTocopherolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute beta tocotrienol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteBetaTocotrienolContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteBetaTocotrienolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute biotin content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteBiotinContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteBiotinContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute boron content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteBoronContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteBoronContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute butyric acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteButyricAcidContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteButyricAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute caffeine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteCaffeineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteCaffeineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute calcium content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteCalciumContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteCalciumContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute campesterol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteCampesterolContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteCampesterolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute capric acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteCapricAcidContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteCapricAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute caproic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteCaproicAcidContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteCaproicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute caprylic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteCaprylicAcidContent\""}], 
       "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteCaprylicAcidContent\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute carbohydrate calorie content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteCarbohydrateCaloriesContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteCarbohydrateCaloriesContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute chloride content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteChlorideContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteChlorideContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute cholesterol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteCholesterolContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteCholesterolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute choline content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteCholineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteCholineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute chromium content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteChromiumContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteChromiumContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute cis hexadecenoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteCisHexadecenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteCisHexadecenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute cis octadecenoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteCisOctadecenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteCisOctadecenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute clupanodonic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteClupanodonicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteClupanodonicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute docosenoic acid CLA content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteConjugatedLinoleicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteConjugatedLinoleicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute copper content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteCopperContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteCopperContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute cystine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteCystineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteCystineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute delta tocopherol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteDeltaTocopherolContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteDeltaTocopherolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute delta tocotrienol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteDeltaTocotrienolContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteDeltaTocotrienolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute dietary fiber content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteDietaryFiberContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteDietaryFiberContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute ihydrophylloquinone content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteDihydrophylloquinoneContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteDihydrophylloquinoneContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute docosahexaenoic acid (DHA) content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteDocosahexaenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteDocosahexaenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute docosatetraenoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteDocosatetraenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteDocosatetraenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute docosenoic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteDocosenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteDocosenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute eicosadienoic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteEicosadienoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteEicosadienoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute eicosatetraenoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", 
         "\"AbsoluteEicosatetraenoicAcidUnidentifiedIsomersContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteEicosatetraenoicAcidUnidentifiedIsomersContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute eicosatrienoic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteEicosatrienoicAcidContent\""}],
        "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteEicosatrienoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute energy content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteEnergyContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteEnergyContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute erucic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteErucicAcidContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteErucicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute fat calorie content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteFatCaloriesContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteFatCaloriesContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute fluoride content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteFluorideContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteFluorideContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute folic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteFolicAcidContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteFolicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute food folate content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteFoodFolateContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteFoodFolateContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute fructose content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteFructoseContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteFructoseContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute gadoleic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteGadoleicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteGadoleicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute galactose content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteGalactoseContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteGalactoseContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute gamma-linolenic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteGammaLinolenicAcidContent\""}],
        "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteGammaLinolenicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute gamma tocopherol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteGammaTocopherolContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteGammaTocopherolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute gamma tocotrienol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteGammaTocotrienolContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteGammaTocotrienolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute glucose content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteGlucoseContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteGlucoseContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute glutamic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteGlutamicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteGlutamicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute glycine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteGlycineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteGlycineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute heneicosapentaenoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteHeneicosapentaenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteHeneicosapentaenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute heptadecenoic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteHeptadecenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteHeptadecenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute histidine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteHistidineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteHistidineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute hydroxyproline content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteHydroxyprolineContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteHydroxyprolineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute iodine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteIodineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteIodineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute iron content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteIronContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteIronContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute isoleucine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteIsoleucineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteIsoleucineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute lactose content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteLactoseContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteLactoseContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute lauric acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteLauricAcidContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteLauricAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute leucine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteLeucineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteLeucineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute lignoceric acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteLignocericAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteLignocericAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute linoleic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteLinoleicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteLinoleicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute linolenic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteLinolenicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteLinolenicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute lutein plus zeaxanthin content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteLuteinPlusZeaxanthinContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteLuteinPlusZeaxanthinContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute lycopene content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteLycopeneContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteLycopeneContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute lysine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteLysineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteLysineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute magnesium content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteMagnesiumContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteMagnesiumContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute maltose content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteMaltoseContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteMaltoseContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute manganese content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteManganeseContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteManganeseContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute margaric acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteMargaricAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteMargaricAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute menaquinone-4 content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteMenaquinone4Content\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteMenaquinone4Content\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute methionine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteMethionineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteMethionineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute molybdenum content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteMolybdenumContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteMolybdenumContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute myristic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteMyristicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteMyristicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute myristoleic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteMyristoleicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteMyristoleicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute N3 eicosatrienoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteN3EicosatrienoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteN3EicosatrienoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute N6 cis cis octadecadienoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", 
         "\"AbsoluteN6CisCisOctadecadienoicAcidContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteN6CisCisOctadecadienoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute N6 eicosatrienoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteN6EicosatrienoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteN6EicosatrienoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute nervonic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteNervonicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteNervonicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute niacin content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteNiacinContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteNiacinContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute nickel content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteNickelContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteNickelContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute octadecadienoic acid unidentified isomers content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", 
         "\"AbsoluteOctadecadienoicAcidUnidentifiedIsomersContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteOctadecadienoicAcidUnidentifiedIsomersContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute octadecatrienoic acid unidentified isomers content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", 
         "\"AbsoluteOctadecatrienoicAcidUnidentifiedIsomersContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteOctadecatrienoicAcidUnidentifiedIsomersContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute oleic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteOleicAcidContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteOleicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute other carbohydrate content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteOtherCarbohydratesContent\""}],
        "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteOtherCarbohydratesContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute palmitic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsolutePalmiticAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsolutePalmiticAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute palmitoleic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsolutePalmitoleicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsolutePalmitoleicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute pantothenic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsolutePantothenicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsolutePantothenicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute parinaric acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteParinaricAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteParinaricAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute pentadecanoic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsolutePentadecanoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsolutePentadecanoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute pentadecenoic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsolutePentadecenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsolutePentadecenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute phenylalanine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsolutePhenylalanineContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsolutePhenylalanineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute phosphorus content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsolutePhosphorusContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsolutePhosphorusContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute phytosterols content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsolutePhytosterolsContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsolutePhytosterolsContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute potassium content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsolutePotassiumContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsolutePotassiumContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute proline content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteProlineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteProlineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute protein calorie content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteProteinCaloriesContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteProteinCaloriesContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute retinol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteRetinolContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteRetinolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute riboflavin content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteRiboflavinContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteRiboflavinContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute selenium content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteSeleniumContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteSeleniumContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute serine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteSerineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteSerineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute silicon content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteSiliconContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteSiliconContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute sodium content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteSodiumContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteSodiumContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute starch content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteStarchContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteStarchContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute stearic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteStearicAcidContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteStearicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute stigmasterol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteStigmasterolContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteStigmasterolContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute sucrose content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteSucroseContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteSucroseContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute sugar alcohol content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteSugarAlcoholContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteSugarAlcoholContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute theobromine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTheobromineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTheobromineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute thiamin content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteThiaminContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteThiaminContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute threonine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteThreonineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteThreonineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute timnodonic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTimnodonicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTimnodonicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute calorie content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTotalCaloriesContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalCaloriesContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute carbohydrate content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTotalCarbohydratesContent\""}],
        "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalCarbohydratesContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute fat content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTotalFatContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteTotalFatContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute fiber content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTotalFiberContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalFiberContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute total folate content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTotalFolateContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalFolateContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute monounsaturated fat content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTotalMonounsaturatedFatContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalMonounsaturatedFatContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute omega six fatty acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTotalOmegaSixFattyAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalOmegaSixFattyAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute omega three fatty acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTotalOmegaThreeFattyAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalOmegaThreeFattyAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute polyunsaturated fat content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTotalPolyunsaturatedFatContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalPolyunsaturatedFatContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute protein content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTotalProteinContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalProteinContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute saturated fat content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTotalSaturatedFatContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalSaturatedFatContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute sugar content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTotalSugarContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalSugarContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute trans fat content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTotalTransFatContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalTransFatContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute trans monoenoic fat content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTotalTransMonoenoicFatContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalTransMonoenoicFatContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute trans polyenoic fat content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTotalTransPolyenoicFatContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTotalTransPolyenoicFatContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute trans docosenoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTransDocosenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTransDocosenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute trans hexadecenoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTransHexadecenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTransHexadecenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute trans octadecadienoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTransOctadecadienoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTransOctadecadienoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute trans octadecenoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTransOctadecenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTransOctadecenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute trans trans docosenoic acid content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"FoodType\"", ",", "\"AbsoluteTransTransDocosenoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTransTransDocosenoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute tridecanoic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTridecanoicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTridecanoicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute tryptophan content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTryptophanContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteTryptophanContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute tyrosine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteTyrosineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteTyrosineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute vaccenic acid content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVaccenicAcidContent\""}], 
       "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteVaccenicAcidContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute valine content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteValineContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteValineContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute vanadium content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVanadiumContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVanadiumContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute vitamin A (RAE) content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminAContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminAContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute vitamin B12 content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminB12Content\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteVitaminB12Content\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute vitamin B6 content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminB6Content\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminB6Content\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute vitamin C content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminCContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminCContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute vitamin D2 content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminD2Content\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminD2Content\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute vitamin D3 content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminD3Content\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminD3Content\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute vitamin D content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminDContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminDContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute vitamin E (alpha-tocopherol) content\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminEContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminEContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"absolute vitamin K content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminKContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminKContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute water content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteWaterContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteWaterContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"absolute zinc content\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"AbsoluteZincContent\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteZincContent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"approximate pH\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"ApproximatepH\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"ApproximatepH\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"approximate shape\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"ApproximateShape\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"ApproximateShape\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"approximate shape dimensions\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"ApproximateShapeDimensions\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"ApproximateShapeDimensions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"basic food groups\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"BasicFoodGroups\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"BasicFoodGroups\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"categorical properties\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"CategoricalProperties\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"CategoricalProperties\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"categorical property values\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"CategoricalPropertyValues\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \
\\\"CategoricalPropertyValues\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"common inside color\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"CommonInsideColor\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"CommonInsideColor\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"common outside color\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"CommonOutsideColor\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"CommonOutsideColor\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"compass plot\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"CompassPlot\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"CompassPlot\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"complete item\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"CompleteItem\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"CompleteItem\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"default item size mass\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"DefaultItemSizeMass\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"DefaultItemSizeMass\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"default serving size mass\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"DefaultServingSizeMass\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"DefaultServingSizeMass\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"food count\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"FoodCount\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"FoodCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"foods\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"Foods\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"Foods\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"food state\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"FoodState\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"FoodState\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"food type groups\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"FoodTypeGroups\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"FoodTypeGroups\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"Image\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"Image\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"name\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"Name\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"Name\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"nutrition label\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"NutritionLabel\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"NutritionLabel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pH association\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"pHAssociation\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"pHAssociation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"possible inside colors\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"PossibleInsideColors\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"PossibleInsideColors\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"possible outside colors\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"PossibleOutsideColors\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"PossibleOutsideColors\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related Pok\[EAcute]mon\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"RelatedPokemon\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"RelatedPokemon\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related solid\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"RelatedSolid\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"RelatedSolid\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"strict food count\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"StrictFoodCount\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"StrictFoodCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"strict foods\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"StrictFoods\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"StrictFoods\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"transparency\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"Transparency\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"Transparency\\\"]\""},
    "EntityProperty"]}], "}"}]], "Output",
 CellChangeTimes->{3.722660757520381*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dr. Rhonda Patrick\[CloseCurlyQuote]s RDA Picks", "Subsection",
 CellChangeTimes->{{3.722661919376277*^9, 3.7226619463872952`*^9}}],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
     "\"absolute vitamin A (RAE) content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminAContent\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminAContent\\\"]\""},
     "EntityProperty"], 
    TemplateBox[{
     "\"absolute vitamin B6 content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminB6Content\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteVitaminB6Content\\\"]\""},
     "EntityProperty"], 
    TemplateBox[{
     "\"absolute vitamin C content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminCContent\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminCContent\\\"]\""},
     "EntityProperty"]},
   {
    TemplateBox[{
     "\"absolute food folate content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteFoodFolateContent\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteFoodFolateContent\\\"]\""},
     "EntityProperty"], 
    TemplateBox[{"\"absolute calcium content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteCalciumContent\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteCalciumContent\\\"]\""},
     "EntityProperty"], 
    TemplateBox[{
     "\"absolute magnesium content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteMagnesiumContent\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteMagnesiumContent\\\"]\""},
     "EntityProperty"]},
   {
    TemplateBox[{"\"absolute iron content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteIronContent\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteIronContent\\\"]\""},
     "EntityProperty"], 
    TemplateBox[{
     "\"absolute manganese content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteManganeseContent\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteManganeseContent\\\"]\""},
     "EntityProperty"], 
    TemplateBox[{"\"absolute copper content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteCopperContent\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteCopperContent\\\"]\""},
     "EntityProperty"]},
   {
    TemplateBox[{
     "\"absolute alpha-linolenic acid content\"",
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"FoodType\"", ",", "\"AbsoluteAlphaLinolenicAcidContent\""}], 
        "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteAlphaLinolenicAcidContent\\\"]\""},
     "EntityProperty"], 
    TemplateBox[{
     "\"absolute phosphorus content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsolutePhosphorusContent\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsolutePhosphorusContent\\\"]\""},
     "EntityProperty"], 
    TemplateBox[{
     "\"absolute vitamin K content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteVitaminKContent\""}], "]"}],
      "\"EntityProperty[\\\"FoodType\\\", \\\"AbsoluteVitaminKContent\\\"]\""},
     "EntityProperty"]},
   {
    TemplateBox[{
     "\"absolute dietary fiber content\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"FoodType\"", ",", "\"AbsoluteDietaryFiberContent\""}], 
        "]"}],"\"EntityProperty[\\\"FoodType\\\", \
\\\"AbsoluteDietaryFiberContent\\\"]\""},
     "EntityProperty"], "\[Placeholder]", "\[Placeholder]"}
  }]], "Input",
 CellChangeTimes->{{3.7226643368671975`*^9, 3.722664431725077*^9}, {
  3.7226645750089426`*^9, 3.722664665828429*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fruits", "Chapter",
 CellChangeTimes->{{3.722655877439845*^9, 3.722655879783408*^9}}],

Cell[BoxData[GridBox[{
   {
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"apple\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Apple\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Apple\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Apple\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"apple\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Apple"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"banana\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Banana\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Banana\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Banana\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"banana\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Banana"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"blueberry\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Blueberry\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Blueberry\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Blueberry\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"blueberries\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Blueberry"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"cantaloupe\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Cantaloupe\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Cantaloupe\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \\\"Cantaloupe\
\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"cantaloupe\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Cantaloupe"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"coconut\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Coconut\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Coconut\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Coconut\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"coconut\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Coconut"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True]},
   {
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"mango\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Mango\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Mango\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Mango\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"mango\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Mango"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"orange\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Orange\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Orange\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Orange\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"orange\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Orange"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"watermelon\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Watermelon\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Watermelon\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \\\"Watermelon\
\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"watermelon\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Watermelon"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], "\[Placeholder]", "\[Placeholder]"}
  }]], "Input",
 CellChangeTimes->{{3.7226630011872163`*^9, 3.722663082419685*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vegetables", "Chapter",
 CellChangeTimes->{{3.7226574803982625`*^9, 3.7226574847531652`*^9}}],

Cell[BoxData[GridBox[{
   {
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"avocado\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Avocado\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Avocado\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Avocado\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"avacado\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Avocado"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"celery\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Celery\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Celery\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Celery\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"celery\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Celery"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"swiss chard\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"SwissChard\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"SwissChard\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \\\"SwissChard\
\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"chard\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "SwissChard"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"corn\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Corn\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Corn\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Corn\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"corn\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Corn"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"cinnamon\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Cinnamon\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Cinnamon\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \\\"Cinnamon\\\
\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"cinnamon\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Cinnamon"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True]},
   {
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"hemp\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Hemp\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Hemp\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Hemp\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"hemp\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Hemp"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"kale\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Kale\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Kale\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Kale\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"kale\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Kale"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"oatmeal\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Oatmeal\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Oatmeal\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Oatmeal\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"oatmeal\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Oatmeal"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"pea\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Pea\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Pea\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Pea\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"peas\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Pea"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"parsley\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Parsley\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Parsley\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Parsley\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"parsley\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Parsley"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True]},
   {
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"potato\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Potato\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Potato\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Potato\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"potato\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Potato"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"spinach\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Spinach\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Spinach\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Spinach\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"spinach\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Spinach"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"}
  }]], "Input",
 CellChangeTimes->{{3.7226634726851444`*^9, 3.722663581304113*^9}, {
   3.722663777812604*^9, 3.722663829632201*^9}, {3.722663863244622*^9, 
   3.7226638884132185`*^9}, 3.7226640105033646`*^9, {3.7226650226530676`*^9, 
   3.7226650291654177`*^9}, 3.7235172366135983`*^9, 3.7235173602598886`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"spirulina", " ", "=", " ", 
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<Food\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Food\>\"", ",", " ", "\"\<FoodType\>\""}], "]"}], " ", "->",
         " ", 
        RowBox[{"ContainsExactly", "[", 
         RowBox[{"{", 
          RowBox[{"Entity", "[", 
           RowBox[{"\"\<FoodType\>\"", ",", " ", "\"\<Seaweed\>\""}], "]"}], 
          "}"}], "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Food\>\"", ",", " ", "\"\<AddedFoodTypes\>\""}], "]"}], 
        " ", "->", " ", 
        RowBox[{"ContainsExactly", "[", 
         RowBox[{"{", "}"}], "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Food\>\"", ",", " ", "\"\<MoistureLevel\>\""}], "]"}], 
        " ", "->", " ", 
        RowBox[{"Entity", "[", 
         RowBox[{"\"\<FoodMoistureLevel\>\"", ",", " ", "\"\<Dried\>\""}], 
         "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Food\>\"", ",", " ", "\"\<Variety\>\""}], "]"}], " ", "->",
         " ", 
        RowBox[{"Entity", "[", 
         RowBox[{"\"\<FoodVariety\>\"", ",", " ", "\"\<Spirulina\>\""}], 
         "]"}]}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EntityValue", "[", 
  RowBox[{"spirulina", ",", 
   TemplateBox[{"\"nutrition label\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"NutritionLabel\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"NutritionLabel\\\"]\""},
    "EntityProperty"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.723517384292918*^9, 3.723517393657507*^9}, {
  3.7235174747941093`*^9, 3.723517508520607*^9}}],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"IncompatibleTypes\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Food\"\>", ",", "\<\"FoodType\"\>"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.72351751107831*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extracts", "Chapter",
 CellChangeTimes->{{3.7226637566695037`*^9, 3.72266375813948*^9}}],

Cell[BoxData[GridBox[{
   {
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"molasses\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Molasses\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Molasses\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \\\"Molasses\\\
\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"molassas\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Molasses"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"spirulina\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Spirulina\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Spirulina\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Spirulina\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"spirulina\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Spirulina"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"stevia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Stevia\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Stevia\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Stevia\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"stevia\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Stevia"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True]}
  }]], "Input",
 CellChangeTimes->{{3.72266377173855*^9, 3.7226637973220177`*^9}, 
   3.722664293654372*^9, 3.722665004540265*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Grains and Legumes", "Chapter",
 CellChangeTimes->{{3.7226636142490897`*^9, 3.722663628850828*^9}}],

Cell[BoxData[GridBox[{
   {
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"bean\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Bean\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Bean\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"variety\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"Variety\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"Variety\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              TemplateBox[{"\"black\"", 
                RowBox[{"Entity", "[", 
                  RowBox[{"\"FoodVariety\"", ",", "\"Black\""}], "]"}], 
                "\"Entity[\\\"FoodVariety\\\", \\\"Black\\\"]\"", 
                "\"food variety\""}, "Entity"]}, 
             "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Bean\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}], EntityProperty[\\\"Food\\\", \\\"Variety\\\"] -> Entity[\
\\\"FoodVariety\\\", \\\"Black\\\"]}]\"",
        TemplateBox[{"\"(\"", "\"black beans\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Bean"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}], 
       EntityProperty["Food", "Variety"] -> Entity["FoodVariety", "Black"]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"pinto bean\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"PintoBean\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"PintoBean\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"PintoBean\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"pinto beans\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "PintoBean"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"rice\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Rice\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Rice\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"processing type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"ProcessingType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"ProcessingType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              TemplateBox[{"\"wild\"", 
                RowBox[{"Entity", "[", 
                  RowBox[{"\"FoodProcessingType\"", ",", "\"Wild\""}], "]"}], 
                "\"Entity[\\\"FoodProcessingType\\\", \\\"Wild\\\"]\"", 
                "\"processing type\""}, "Entity"]}, 
             "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Rice\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}], EntityProperty[\\\"Food\\\", \\\"ProcessingType\\\"] -> \
Entity[\\\"FoodProcessingType\\\", \\\"Wild\\\"]}]\"",
        TemplateBox[{"\"(\"", "\"wild rice\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Rice"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}], 
       EntityProperty["Food", "ProcessingType"] -> 
       Entity["FoodProcessingType", "Wild"]}],
     SelectWithContents->True]}
  }]], "Input",
 CellChangeTimes->{{3.7226636594452353`*^9, 3.722663672190739*^9}, {
   3.722663927038348*^9, 3.72266394008305*^9}, 3.7226650110006475`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fish", "Chapter",
 CellChangeTimes->{{3.722662692946577*^9, 3.7226626941864023`*^9}}],

Cell[BoxData[GridBox[{
   {
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"salmon\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Salmon\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Salmon\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Salmon\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"salmon\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Salmon"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True], 
    InterpretationBox[
     DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
      TemplateBox[{TemplateBox[{"\"foods\""}, "GeneralizedEntityBase"],TagBox[
         GridBox[{{
            TemplateBox[{
              TemplateBox[{"\"food type\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", 
                  TemplateBox[{"\"tuna\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Tuna\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Tuna\\\"]\"", 
                    "\"food type\""}, "Entity"], "}"}], "]"}]}, 
             "GeneralizedEntityInfoRow"]}, {
            TemplateBox[{
              TemplateBox[{"\"added food types\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
               "EntityProperty"], 
              StyleBox["\":\"", "GeneralizedEntityInfoItem"], 
              RowBox[{"ContainsExactly", "[", 
                RowBox[{"{", "}"}], "]"}]}, "GeneralizedEntityInfoRow"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "GeneralizedEntityInfoGrid", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
        Dynamic[EntityFramework`Formatting`Private`open],
        "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Tuna\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}]}]\"",
        TemplateBox[{"\"(\"", "\"tuna\"", "\")\""}, "RowDefault"]},
       "GeneralizedEntityToggleLabeled"]],
     Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
          Entity["FoodType", "Tuna"]}], 
       EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
     SelectWithContents->True]}
  }]], "Input",
 CellChangeTimes->{{3.7226633773638678`*^9, 3.722663397047999*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"bean\"",RowBox[{"Entity", "[", 
       RowBox[{"\"FoodType\"", ",", "\"Bean\""}], "]"}],
     "\"Entity[\\\"FoodType\\\", \\\"Bean\\\"]\"","\"food type\""},
    "Entity"], ",", 
   TemplateBox[{"\"nutrition label\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"FoodType\"", ",", "\"NutritionLabel\""}], "]"}],
     "\"EntityProperty[\\\"FoodType\\\", \\\"NutritionLabel\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{{3.721360824988308*^9, 3.7213608269906445`*^9}, 
   3.7213609335293045`*^9, 3.7226605552824764`*^9, 3.7226640770018563`*^9, {
   3.722664112431487*^9, 3.7226641201776576`*^9}, {3.722664171225705*^9, 
   3.722664198948199*^9}, 3.722665112480799*^9, {3.722665147614126*^9, 
   3.722665170778576*^9}, {3.7235174444748864`*^9, 3.723517449860478*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3WmPJVedP/ieGWk0D1kaAzYYzTsAT0Njs4xGmhdgbIzZDOqR/vNopGm2
7n8DDW8Br9iuss1LwEsZL2Wbp3gpV2XWvmZlZVZl5cpmu4wXps8JjYTq17/q
G1URGTdufr4S/QF16dwTJ+LevDd+cc75X/+v//e2//t//Lu/+7sf/C//8X9u
+6d//T++//1/+rfb/+fyP/7bP/0/n/uH//Y//cd/Pf0//N3f/Z//8Z/y35v8
/n8nSZIkSZIkSZIkSfJK/m8150iSJEmSJEmSJEmSvCqHrnuTJEmSJEmSJEmS
JIdRfZkkSZIkSZIkSZIkOYnqyyRJkiRJkiRJkiTJSVRfJkmSJEmSJEmSJElO
ovoySZIkSZIkSZIkSXIS1ZdJkiRJkiRJkiRJkpOovkySJEmSJEmSJEmSnET1
ZZLk3/rwQyW/682hj2+n6DySJEmSJEmSJPtwVuvLfd9Xv71mPvjzmq3g2I93
6PNJcvv0eTIbOo8k+7bvz5mxOPR5IEmSJEmS3G7Vl7v1gftLloNjP96hzyf7
1fXDWboext5/40ByLA5d150Whz4P5Cy834c+PpIkSZJkO9WXu/W2mrlgk63g
WI536PPJfnX9cJauh7H33ziQHIs+Z8ido/c7SZIkSfJvVV/eHt/4c8lScCzH
O/T5ZL+6fjhLup5Jcnv0eUvuHL3fSZIkSZJ/q/ry9njP3SUHgp+q2QpO2/GO
/XzttP4Pfb1vt2M/j1+rOR+8s+ZI8MaafcGxXD/T1p9pc+zXc99+p2Yz+Pc1
S8GHHiw5Gry1Zn/whppXgtm//3rN0eCf/1RyLpj1f6jxHOo6OXqk5EIwO1/Z
595jj5ZEv1FzLPjxmovBocZ/7M7q58xQfrFmPXj/fSVLwRPHa4LZekqfqHl1
Yr9ScyDYnJ9jwT1PlSwF//p+yWZw6PG+3N++VLIVfPCXJReCjz5Scip4e818
MPscy8b/vntL5oOfrlkI3lKzGsyOd+jvO2P9ftW8z1aD3605Ezw4XxP8ZM1r
wex7SHY/4Zs1x4M/qDkX3Pt8yVpw6PcfSZIkyfGpvnx1Zvdt2rbz1Zql4LQd
79jP107r/9D3b8Z6v6jvfj7xeMnZ4LSNz07rz7Q5luu5q35m7nq4ZDX4oZq5
4NDnbVKz/mfH2/c4932883Mli8Ghxr8Z15eDN9dcDPY9/mN37J8z0+bQn099
eehgTfD990o2gn2P8wt7S9aD2XN9Q49fX++jofs1LeOQ2TwvthLM6r9DH5/P
W5IkSZLbrfry1fnZmuVg23YO7K8JvvRiyWZwqOMdy/m6vubl4Fj6P/bxH/v9
ir7H4ZHdJa8Gs/k+/16zERz7OOj/9jiWcWjme20Es7+PbfuZzTvO6olNtoLZ
v8/a7+r7wIsvlGwEx3Kd3P2Lkv3BbDy/XLMZ/OeahWBX/Tx+rCa43e/bsTmW
z5mx2MynPxb8XM35YDbfOVsfKft8O3miZC145nRNsKvz28yHPhvsajyz31PZ
vOCujiubX9zMS14P/rxmK3j6VMlG8JnflFwIZvNYuxrPnfZ+b9YTOhzs6nj/
oWYpmP0dzNYB+ELNWjD7fXHkcE1w6PEmSZIkOT7Vl6/O7P5MV/Oan3qy5Fxw
qOMdy/nK5iWNpf9jH/+x3C8aahzG8rk69uth7P3faePQzN9dDPZ9/7ar/mft
d9X/m2oWg2O5TrLn8dr280s1G8Gu+pmts93VOM+qfV8/Y3Ho89CXP6vZDHY1
btk60l31P/ve1VX/v11zMjj0eevLnfY+ytYtb3tc2e/TbD32oY+bJEmSJCdV
fbnb37931CwH27afzYfq+z7PUL/3u+qn+vLO7P9YxiGbZzT0cW/3OOj/9jiW
cfhIzaHgWN532Xy0rvrffI84FBzLdZKtQ9u2n80+llvBsVzns2rf4z8WuxrP
bL2CP/2xZDH4sZqjwWzdgN27Sl4JDjVuWX+6Gs/Dh2qCXfW/7X7HY3cs76Ou
vPL+49d+vNl88z//qeRc8NlnSlaCQ613RJIkSZLqy93+/s3uf957T8lcsO3r
9v0c/lC/97vqp/ryzuz/WMYhW/dg6OPe7nHQ/+1xLOPwyZrXgl31s1nPdTPY
Vf+z9Ve76n+zXvhrwbFcJ9n3orb9XDhTshUcy3U+qxr/q3Pv8yVrwa72BRi7
XY1z9vnZVT+zdYyHvr76ciznvSvnDpScDQ79/pjUB+4vOZS4HMz+zg59HkiS
JElOr+rL2/P7N/sd1/Z1m/3TXg9O2/EOdb76ri/P6vypsfffOBiHWer/ThsH
9eUrO/b6clf9nNX+j13jf3V+q+ZEsNvPvbhv8l01G8Gsn9n6vWM57+rL3TqW
896V2b7Yzf5Xi8Ghfqd3ZbM+/bng0OeBJEmS5PSqvrw9v3+zuuT8XE1w6N+X
s3Z/uKv9rbJ1Po3/sP03DsZhlvq/08bB+thXduzrY3fVz1nt/9g1/ldntt93
V+OWrbPdtp/vvVuyHhzLebc+dreO5bwPZfZ7//qa1eDTe0qWgx+sORvM9ivv
avw/VDMXHHpcSZIkSU6v6svD/v7Nflf23f9p+73f9322L9VsBNv2s6v9tadt
/G+oeSXYVf+tC70959E4NLqex3Uem/uXi8Gu+vkPNUvBrvqftd9V/2+qWQzu
tOtkVvs/do3/1dn3ug3fqdkMtu3nnqdKloJjOe997yt06mRNcOjrqy99vxrW
06dKNoJdjf8ju0teDQ593CRJkiSnV/XlYe97ZOtufbhmPtj3cQ17f/hY4rX3
//FflywEs3Xt/q3mYnCoffH6Hv++n4e/ruZ8cNruI439PBqHRtfzuM5js17p
RvDuX5TsD7bt5601+4M311wMZvOPvlFzMZi137af2d+XruYhjv06mdX+j13j
f3U2nx/Hgl2NW7ZvbPP85mbw2WdKVoJj35cnO96+vyc0f68Wgtl6Gr96rGQr
eGPNZvDrNSvBpt57ItjVeO6071dfqzkc/POfSs4Fs/ns779XshHM1tfKng+5
/76SpWBX4//QgyVHg32PM0mSJMnxqr487H2PzGb9tuVg38c11PF+vOZiMNtP
eahx+NMfSxaDYx//vud3jGV8xtLPvh37OLieZ+M8/rhmNdjUSQ4Ehz5vk5r1
v/n7thrse5zHfp2Mvf9j1/hfndl6ubt3lbwSHOrz6onHS84Gx37em3mZ68Ff
PlByODj0341pGc+d9v1q6P72ZfP8wuvB558rWQ32/X4kSZIkOV7Vl7fn92lb
s3nNfT83Pm3397K6czbvo3muf1+wmQ/3WrB53v9o8GM1K8FZvd6y5+e/WrMU
zJ7nz8Z/LOMzln727djHwfU8G+cxM1t3IptPlH3OZ/OOs+eaPlCzP5i1f3C+
5Fww6/9Q4zn262Ts/R+7xr9bs/mP36w5Hmz7vfejNUeCn6s5H8z6OavnPZtH
/I81F4J31ZwKZr/XsnXRs+cK7ru3ZD746ZqFYPbcQlfjs9O+X508UbIW/Pua
pWDz/z8RzK6HbD3qtt9D7qw5ErytZjHY1b5RJEmSJDmr9WWSJEmSJEmSJEmS
ZLeqL5MkSZIkSZIkSZIkJ1F9mSRJkiRJkiRJkiQ5ierLJEmSJEmSJEmSJMlJ
VF8mSZIkSZIkSZIkSU6i+jJJkiRJkiRJkiRJchLVl0mSJEmSJEmSJEmSk6i+
TJIkSZIkSZIkSZKcRPVlkiRJkiRJkiRJkuQkqi+TJEmSJEmSJEmSJCdRfZkk
SZIkSZIkSZIkOYnqy+TkPvxQye+CQ/eLdD3zcrPz29ah+v/QgyUrwW/UHAs+
srvk1eDcgZrgwpma4IsvlGwE2/a/aW8reFPNYvADNfuDt9ZEv1+zGMxed6jz
SJIkSZIkSXL2VF8mSZLTVl8+fqwmePRIyYXgd2o2gy+9WBK9veZc8Pqa48G2
/X96T8ly8MjhmuALe0vWJzZr5803SpaDQ51HkiRJkiRJkrPn2OvLN9dcDP7y
gZLDwWx+04dr5oNd3af97UslW8H77i05F2zuc88Hs3lMn65ZCJ45XbIZbNv/
rO6w56mSpeBtNXPB5j79y8HmuOeDXc3DytrJXvdbNWvBruovWTsP3F+yHMyu
z+x6/ljN0eDuXSVrwbb9b7IVPLC/ZCGYXbdfqTkQ/IeapeC01b8yx/K51HY8
u5oP29X82bF/rk6bY3l/dWVWd370kZLXgm3b/3rN0eCzz5SsBNu2n7XTzPM+
Ghx6vEmSJEmSJEnOjmOvL2frXj7zm5ILwawu9t67JevBps6wEGzbz/vvK1kK
frPmeDCbr/Tlms3gd2vOBJvxOBts2/+s7tDUwU4G76rZCGbtZ/Owsjpd2/5n
7Xy05kiw7Th0NZ6nTtYEs+shq3Nl8/K6qjvMz5UsBps6/Ilgdj1knjheExxL
/Wssn0tDjed1NeeDzXrAC8GsnbF/rk6bY3l/tTX7nPzzn0rOBU+eqAm2fd1P
1bwefP+9ko1g2/ZPnyrZCGbrbA81/j+tWQ/eWXMkeGPNvmDznNpicFavW5Ik
SZIkSXKaHXt9+d57SuaCH6lZDn6yZiPYdz8PHawJfqJmPdi2/Wy/yGz+Y9v2
r1wPXQ+2bf+zNcvB5r7y6WDb9pv77qeCd9QsB9uOQ1fj2cyT2wi2bf+v75ds
Bpvr/bVg2/azed/vvlOyFmzb/t7nS9aCY6kjjOVzqe/xvKVmNfjxmmPBrM6e
tT/2z9Vpcyzvr7b9z8zWT/h2zXqwbX92PVzycvDnNVvBtu1n7WSvO9R5yer1
2XNKjz1ashlsPkcXg2O/bkmSJEmSJMkxOvb68jt/KVkNZvNA7/5Fyf7gV2sO
BrtaxzKr62X3gdua3V/t6j5z1n5X61dn+2a2nf+VzefK2slet+04dDWebdsZ
6nWz9Zzb1gczs3bGUkcYy+dSV+OZzUPP1gP/Us1GsO3rjv1zddocy/urrVm9
Mvuekz3/0PZ1zV9u/NVjJa8Hf1azGczayf5ez+p1S5IkSZIkSU6zY68vtzWr
h/73mpXgPXeXHAi2fd1m3daDwWy91qHH6XKHun/b1AFOB5s621Iw27e3WQ/1
dHCocRh7fdn85W4d6nOp7Xhmdf+sHtfsr74a7Grcxv65Om3O6vsrM6s7Z+sz
t23f/suN6sskSZIkSZLk7Dn2+nJzf/F0MKtPNftnbgWzOs6HauaCbfvZrNu6
FMz2CW3Wj1wLZv3/Sc1aMBuftv0f6v5ttm9yNq8zs6t9nNWXG598omQx2NX+
yzfUnAiOpY4wls+ltuOZ7Y/89J6S5WDf4zz2z9Vpc9reX9n+19l5zNaLztaf
/0zN2WBX+y8/cH/JcvDI4Zpg9lxEZtbOm2+ULAeHOo+7d5WcCDbryp8LvvRi
yWYw+7szbdctSZIkSZIkuRMce335H2suBLN5bdm6vtk6rv9WczHYtp+/falk
K5jtx5rtK5r1//ChmuDHalaCbfs/1P3bbF7n7TXzE9vVOt7qy43ZPNbHf12y
ELy1Zn8w2//0BzXngk1d4pVg3+PW1rF8LrW9Htrub9uVWX/G/rnat9N2vtr6
rzUXgtfVHA42+2y/Gsz2Q88+r75csxls2//s785NNYvBbF3rzNtqFoNd/b3r
yi/WrAc/WnMkmM0f/17N2WAz73xfcKjjJUmSJEmSJHeCY68vk5w9m3nPa8Hs
+YGh+0uS7MZsPYEf1iwFjx2tCQ59HCRJkiRJkuQsq75MsiufeLzkbPDRR0o2
gqdOlqwHs/WNs/aHPm6SZDuz+e+7Hi55OZjNW2/2T1gLDn18JEmSJEmS5Cyr
vkyyK7P9cJt1W+eC2frYd/+iZCH41/dLNoNDHzdJkiRJkiRJkuROUX2ZJEmS
JEmSJEmSJDmJ6sskSZIkSZIkSZIkyUlUXyZJkiRJkiRJkiRJTqL6MkmSJEmS
JEmSJElyEtWXSZIkSZIkSZIkSZKTqL5MkiRJkiRJkiRJkpxE9WWSJEmSJEmS
JEmS5CSqL5MkSZIkSZIkSZIkJ3Hs9eVLb5VcIEmSJEmSJEmSJMkd41D1WfVl
kiRJkiRJkiRJkhyXQ9Vn1ZdJkiRJkiRJkiRJclwOVZ9VXyZJkiRJkiRJkiTJ
cTlUfVZ9mSRJkiRJkiRJkiTH5VD1WfVlkiRJkiRJkiRJkhyXQ9Vn1ZdJkiRJ
kiRJkiRJclwOVZ9VXyZJkiRJkiRJkiTJcTlUfVZ9mSRJkiRJkiRJkiTH5VD1
WfVlkiRJkiRJkiRJkhyXQ9Vnx15fJkmSJEmSJEmSJEluj+rLJEmSJEmSJEmS
JMlJVF8mSZIkSZIkSZIkSU6i+jJJkiRJkiRJkiRJchLVl0mSJEmSJEmSJEmS
k6i+TJIkSZIkSZIkSZKcRPVlkiRJkiRJkiRJkuQkqi+TJEmSJEmSJEmSJCdR
fZnb6cMPlfxuYofuL/9znUeSJEmSJEmSJMmd6azWl79UsxH8dM1CcO5ATXD3
rpJXgl+pORA8cbwmOPR4TIvqkrOh88hpsO11OG3X59j7v3CmZCt4U81i8AM1
+4O31kS/X7MYzF53qHEgSZIkuf1O2+8jcoxeeqvkQvC2mrmg9x3Jset+ZreO
vb6c1ZGzenF23j9fsxI8c7pkM7j3+ZK14GOPlpwODj1O0+JY6iYkZ8+xf85M
W/+f3lOyHDxyuCb4wt6S9YnN2nnzjZLl4NDnhyRJkrySb71Zcj54R82h4Cdq
Xg0enK8Jfq3mfHDo4+7Laft9NKsa59n2vntL5oO31KwGh+4veSW7mscxq/WL
sfe/K93P7Nax15ez+cjZ++VHNcvBoY9jUvc8VbIUzI5318MlLwfvubvkQPDu
X5QsBF96sWQz2Lb/fX8+//alkq3gZ2uWgx+pORR89JGS14KHDtYE3/hzyVIw
60/f49b338e+z2P2PM/hQyXLiYeCN9bsC95/X8nBYHaddPV80TdrVoMfrzkW
/NVjJa8HP1nzWjBbP+HY0ZKVYNv+j92xf4+atv5/veZo8NlnSlaCbdvP2nno
wZKjwaHGgSRJkvxb375UshK8956SuWDz++9iMJvv8NOa9WAzn2YhOPR49OW0
/T4ix2h233hW59lxtvV34coan0b3M7t17PXlbJ5y9n5p6jAbwaGPY1Kb3x+L
wXf+UrIabLIV/FzN+WA2bp+pORts2/++65JNvXcpmLXf1NXPBr9Tsxls1kE/
G8zaz+rOfY9b9rvyZzWbwWk7j9lzIFn73605E8yOd36uZDGYtZ8919T2uLLn
QrPX/VjNSvBTNVvB554tuRg8eaIm2Lb/Y3fs36Omrf/Ndfd68P33SjaCbds/
fapkI5itSzPUOJAkSZJ/6zdqjgWzdfOG7u+kZr9Hrq95OXh7zXwwq7931Z+2
7Zw6WbIezM5js07hvmDz+seC771bsh7s6nizeSjZ+sbZ+ep7nLPfd9+uORnM
xjmbX9DURVeDbfv5zG9KLgSzdQYe2V3yavDDNfPBoeavTdv8lL6v27G/r5v7
heeC2f2QbB/P7HpuPo/PBbN1Xz9UMxfsqh7X93U+bf3p++/mUO/3seh+ZreO
vb58Q80rwez6z+qtQx/HdpvNq83Gram/zQXbvu721Jfj/OKs/Wx99az97PmE
rP2sP32P27/XbAS7un76Po/ZvPKs/eb3x3owaz97fiBrP/sd0fa4su9p2fOi
2T442ffkrs7vrDr270XT1v/suv15zVawbftZO9nrDjUOJEmS5N+a/e77cs1m
cOj+XqvZ/aXs+ee+75O0bSerb2bzO5q602awqYMtBpvf6yeDXR3vP9csBLP7
20ONc7af4L/UnA9m92+zetZ1NYeDbfuZvX+z6zn73ZrVH5v2FoJt+9mVfd9n
GOq6Hfv7+k9/LFkMZutaPPjLkgvB7PmHrP1s/dKs/Wx9yL6u16sdz2mrt479
7+bYdT+zW8deX57V+cs/rlkNNuvpHg8e2F8TzK7btp+TXV3/fX8+Z+sGZ+23
/dxo5sVuBbP2s3W2p23cpq0/2fefob4n7N5V8kqw7XFl86Czdbzb9jPbh2vs
z8l35di/R01b/z3vR5IkSUbHXl/O1uvO5o1m+0QPdX+pbTvZ74vsufSsnez8
ZtdDV8fbtp9DjXOz/97+YFf3bbq6rv74h5KzwWw/zT/8vmQheHPNxWBX52Xa
zm/b9vu+bsf+vm47P67tPLKu2p+2etlQ98122t/Nset+ZreOvb7cdv/lB+4v
WQ4OfRyXm62HkB1Xs078SjCrn2bPI/VdN+y7/a/WHAxm7c/q/OW+rsvt6k/b
67/teZw2s+91zz9Xshp86smSc8FsfLJ9voY+7u127N+jpq3/9ishSZIko819
5WPBsTz3m61Pm/U/+z3b9r5T236qLw97/6dtO9k43FWzEez7uNr6wt6S9WC2
T1/2e7mpY5wJDnVcQ9WX+z4u7+vZaH8s/dlpfzfHrvuZ3Tr2+nJW78v2Hcg+
/7P6bPa+/kLNWrBZl+J0sO1xZZ9L2efA8WMlF4NZ/9vuIzyW+nLbulu2/3K2
b2/bccu+Z07buE1bf9ruo918HzwdzJ47yt4X2ef/ieM1wbbH1Xw+nQpm+wRl
8+Wzf5+NT/bcRd/XybQ59u9R09b/7Hmt7Lnu7Pd4ZtbOUPtVkSRJkpN47GjJ
SjDbjzWb5/jX90s2gz+tWQ9m8y/a9j+bZ5qt25n9vs7ut0zbffJsHd1mX7jF
YHa82bq7fa+je63X63a9blZXzczmf2X3gbP1t9v28/FflywEv1izHszm9dxS
sxrM3l99n8e+z+9Q7Wd6X89G+2Ppz1j+bmbzdrP7ctt9/rZL9zO7dez15cxs
n4uFMzXBrB6d7e+cfW5k61e37X/2+fO1msPBtvtQd2Xb4+q7/V89VrIVzOrO
Wd0tW2c721diz1MlS8Fs/ZBpG7ex9OejNReCd9YcCWZ/NzO/VXMi+PalkpVg
2/43zyWtBJtxOhbMrsPmun49mLXT1MNXg31fJ33b9+fbUN/Dx9L/5u/nVvCm
msVg9vxwZrbPUfa62339kSRJkm38zdMl54MfqTkUzPZp+vuag8FsH9u2/cza
yfZly/ata9YhOxectvpyUxdaD36j5ljwyvtbxd/j2f3JoY53qNfN5oFm83Sy
+UHZenf/WnMh2Lafzfq1y8FsP7Jsf7c7ag4FL71VciHY93ns+/wO1X6m9/Vs
tD+W/ozl72ZW78vuk0/b+e1K9zO7dVbryyRJkiRJkiRJkiTJblVfJkmSJEmS
JEmSJElOovoySZIkSZIkSZIkSXIS1ZdJkiRJkiRJkiRJkpOovkySJEmSJEmS
JEmSnET1ZZIkSZIkSZIkSZLkJKovkyRJkiRJkiRJkiQnUX2ZJEmSJEmSJEmS
JDmJY68vv/tOyRpJkiRJkiRJkiRJzpxD12Mvd+z15UtvlVwgSZIkSZIkSZIk
yZlz6Hrs5aovkyRJkiRJkiRJkuR0OnQ99nLVl0mSJEmSJEmSJElyOh26Hnu5
6sskSZIkSZIkSZIkOZ0OXY+93LHXl0mSJEmSJEmSJEmS26P6MkmSJEmSJEmS
JElyEtWXSZIkSZIkSZIkSZKTqL5MkiRJkiRJkiRJkpxE9WWSJEmSJEmSJEmS
5CSqL5MkSZIkSZIkSZIkJ1F9mSRJkiRJkiRJkiQ5ierLJEmSJEmSJEmSJHll
X3qxZDP47Zr14ND97Uv1ZZIkSZIkSZIc1kd2l6wHn3yiZDH49ZqVYFf9ye4P
//alkq3g0OM37T78UMnvgkP3a6waT45R1+24zP4u31KzGrypZjH4zl9KVoND
H9+1qr5MkiRJkiRJksN65HBN8M6aC8GmLnEs+OOa1WD2ujfXXAz+4fclC8Gh
x2msqit1Ow7Gk2PUdTsuH3qwZCXYPM91NPihmrngE4+XnA0OfXzXqvoySZIk
SZIkSW6P779XshG8ruZwMGvngftLloNPPVlyLpi1c0PNieALe0vWg0OP31hV
V+pW48kx6rodl5+q2Qpm9eWFMzXBZ58pWQkOfXzXqvoySZIkSZIkSW6PP6vZ
DN5RcyiYtXPoYMlS8B9qos8/V7IaPHO6Jjj0OPXld2u2gh+sORu8tWZ/8Cs1
B4LZ+HdVV/pizXrwrppTwaz/TZ3k9eAna04Fs+ci2va/7/nLX67ZDB7YXxPs
6rh+XrMVbK6jA8EXXyjZCF7r9f1f+YWateB995bMB5v62Faw7etm7WSv+62a
taDrv9t2hnrdbJ+F5vyfC95eMx/Mzu+naxaCzd+3zWDb/n+pZiOY/X3P9mvu
+3z1rfoySZIkSZIkSQ5rUz85EZyfK1kMZvOds/pLVjfJ6jhDj0dfZve9v1lz
PJjVETKPH6sJdlWXyc77v9VcDGbz77I6yGdqzgb/uWYh2Lb/Q9XXsuNqO98/
8+1LJSvBkydqgm3b79tsff5s/fy27WftfLTmSDBrx/XfbTtDve7995UsBbPP
4Ww9jex5kua5oTPBuQMlZ4N9j9usqr5MkiRJkiRJksP62KMlm8Gm3nIhuPf5
krWJzepcf32/ZDOY1bV/UHMu2GQrOPS4Xu7B+ZpgNm5t29+9q2QtOJZ1cbPr
8LaauWDb9oeqrz2yu2Q92FzXc8FsPnLWfjMfeiH4jzUXgtt9Xv8rP1uzHLyx
5nSwbfunT9UEm3UaloNDjcOsXv9d2dXrNuttHAx+omY92Lb9bH2AD9fMB/se
t1lVfZkkSZIkSZIkZ8Ns3lYzj/Zi8J67S84Gs/vDzf34aFNvWQwOPR6X29QV
Xw12VR/P2umqLpOtc359zfFgtn5s1p/MXQ+XvBxs2/9pq689+kjJqWD2XEe2
znMz//JgMJs/27afffudms1gto50tl50UzeOZu1kr5v10/XfbTtDvW6zfsZr
wWyc29r3eWSj+jJJkiRJkiRJjstTJ0vWg9+oORbM2rmz5kiw7brQR4/UBIce
p8vte/5y1k5XdZms/798oOR8MFs/Ntv/NPv301YX66qdH9esBrPr+Zaa1eAH
ahaCbfszbTbzd08Hv1qzFMz2H+9qn3fXf2P2nEy2HkXb9pvnLDaC3a6PHZ/H
yNbBbts+t0f1ZZIkSZIkSZIcl9k+oZ+vWQlm7TT1gWPBn9asB7P9nbN9h4ce
p8v90x9LFoMnjtcE29bZs/1Du6rLNPPLDwQvvVVyIZjNp87Wi76r5lRw2upr
fc/fPHa0Jpg9v9F4MdhVf4Yy2ze5qScfnNiu9nF2/Tc+9GDJ0eDtNeeCTT1/
M5jVc79dczLY7frYS8Hs87PZz2Et2KzPsRX8Sc1asJkffzp4re+Tnar6MkmS
JEmSJElOp9k+ktm842z93qz9p/eULAez/ZpvqIlm8weHHr/LzepN2f652fq6
X6k5EMzmb3ZbV1oJZvMBm/2fXwlm+w5/pGY5OG31tb7ryx+rWQlm+/Bm82G7
6s9QZp8nTd1yfmLbfi5luv4bs33em+v0aDCb75ztR/yjmuVgV/3P3i/Z+Gf7
NWfHdfhQTTB7X1/r+2Snqr5MkiRJkiRJktNpsy/lRrCr9Zwzs3WAm/lk0aHH
iezSB+4vWQ7eVLMYHLq/JLndqi+TJEmSJEmSJMmd5s9qNoPZOs/ZuuhDHwdJ
brfqyyRJkiRJkiRJclbN1vXd9XDJy8E7apaDQx8HSU6L6sskSZIkSZIkSZIk
yUlUXyZJkiRJkiRJkiRJTqL6MkmSJEmSJEmSJElyEtWXSZIkSZIkSZIkSZKT
qL5MkiRJkiRJkiRJkpzEsdeXL71VcoEkSZIkSZIkSZIkd4xD1WfHXl8mSZIk
SZIkSZIkSW6P6sskSZIkSZIkSZIkyUlUXyaZ+fBDJb+b2KH7S5IkSZIkSZIk
yX5VX74629bdps2hx2+7x3/o/o7VnTbOQ78vZ208+x7/ofs7LS6cKdkK3lSz
GPxAzf7grTXR79csBrPXHXo8SJIkSZIkSV69Y7/v/eILJRvBn9SsBbu6z3ny
RMla8JM1G8HtPq9dq748rNP2vhuLxm173GnjvNOOd9o0/lfn03tKloNHDtcE
X9hbsj6xWTtvvlGyHBx6PEiSJEmSJElun0Pd1929q2Qt+MGaA8E7ag4Fn3i8
5Gwwe91P1WwF5w7UBN99p2QtOPR5u1bVl4e17/fdb18q2Qp+tmY5+JGaQ8FH
Hyl5LXjoYE3wjT+XLAWz/nQ1PtP2/Myep0qWgtnr7nq45OXgPXeXHAje/YuS
heBLL5ZsBqft+pw2x368Y7nexv6+nja/XnM0+OwzJSvBtu1n7Tz0YMnR4NDj
QZIkSZIkSXL7HOo+7VNPlpwLNvODTwXfvlSyEvxKzYFg9rrZffgba04Hhz4/
fam+PKx9v++aeu9SMGu/qSOdDX6nZjPYvM/OBrP2s7rztI1bV957T8li8J2/
lKwGm2wFP1dzPpgd72dqzgZndZy7cuzH63rbmTbPx70efP+9ko1g2/ZPnyrZ
CGbrbA81Dj+tWQ/eWXMk2Hy/2xe8rWYx6DokSZIkSZIko0Pd1/1qzVLwWzUn
gh+rWQneXjMfzO6fN/cL54LN66wFhz4/fam+PKzbU1+O84uz9r9UsxHM2s/W
jc/az/ozbeM2bWbzvrPjnZ+rCRrnbo93Vufbut7GZTYP/ec1W8G27WftZK87
1Dg0+5mcCDbX42LwsUdLNoPZcxquQ5IkSZIkSTI61H3drJ7V1JkPBrN5ytn+
g9k6wI/sLjkZHPo8bLfqy8Pa9/uuqfe+Fszab1uP+G7NVjBrP1tne9rGra0/
rlkNfrPmePDA/ppgVq9pe7xd1X2mbZz7dizH63qbjeutK81fbvzVYyWvB39W
sxnM2snW63AdkiRJkiRJktGx3NfN5lVlda5sXtXzz5WsBrN9nLP5zn/4fclC
cOjzOanqy8Pa9/sue07D/OVuzdZPyPrT7I+6Eszq+9n+tn2Pw7SNc9+O5Xhd
b7NxvXWl/Zcb1ZdJkiRJkiTJ7Xfs93UPHypZDmbrbJ86WbIezOZh3VWzEdy9
q+SV4N7nS9aCQ4/T5aovD2vf77tsf/Os/Wz/5ez+fNv9l7P9oNseVzYfM3vd
Zn2C9WBX5zF7/iTrz/FjJReDWV2v7Tir912dYzneWb3epu19PRYfuL9kOXjk
cE3whb0l6xObtfPmGyXLwaHGofn+dSL44Zpzwez6f/KJksXgtH0OkCRJkiRJ
ktPgWO6rN/NRtoLZfK7ra1aD2T7LWb0460+zX9++4C01q8Ghxi1TfXlY+37f
Ze+XrO6czXfO1tm+/76Sg8E9T5UsBbP1B9oe149qloMfrDkQ7Hucn3u25GLw
azWHgzfUvBJs20/15W4dy/HO6vU2be/rsbhwpmQreFPNYjBb1zqzeX5hMZi9
7lDj8MWa9eBHa44Eb6zZF/xezdlg9n1v6PNPkiRJkiRJdmnf942Huq/b3C8/
H2zmYx0LZu1k64IenK8JZvNi7r2nZC7YZCs49HVxuerLJElyp5ntq/LDmqXg
saM1waGPgyRJkiRJkuR/bbZvcrauY9v2v1yzGby55mIw+/dDj9Okqi+TJMlZ
NXvuMdsP5bqaw8Fm3v9acOjjI0mSJEmSJMntVn2ZJEmSJEmSJEmSJDmJ6ssk
SZIkSZIkSZIkyUlUXyZJkiRJkiRJkiRJTqL6MkmSJEmSJEmSJElyEtWXSZIk
SZIkSZIkSZKTqL5MkiRJkiRJkiRJkpzEsdeXL71VcoEkSZIkSZIkSZIkd4xD
1WfHXl8mSZIkSZIkSZIkSW6P6sskSZIkSZIkSZIkyUlUXyZJkiRJkiRJkiRJ
TqL6MkmSzHz4oZLfBYfuF3klF86UbAVvqlkMfqBmf/DWmuj3axaD2esOPR4k
SZIkSZLX6m+eLjkf/GrNweAnal4NZv/+rTdLzgfb9vPFF0o2gj+pWQt2dT/n
5ImSteAnazaCQ5/Pa1V9mZzcn9asB++qORX8YM2B4CO7S14NfrzmWPDrNSvB
ocejL9Wz6DqZHqdtnLP+9O3Q5+Fax2fofm23T+8pWQ4eOVwTfGFvyfrEZu28
+UbJcnDo8SBJkiRJkpzU554tuRjM7jsd2F+yEPxyzWbw8V+XLASvr3k5cTW4
e1fJWjCry9xRcyj4xOMlZ4PZ+HyqZis4d6Am+O47JWvBoc/ztaq+TE7uLx8o
ORy8veZc8PSpko1gk61g9rndfC6eCA49Hn2pPkLXyfQ4beM8bf2ZNo1PY/Mc
1tHgs8+UrATbtp+189CDJUeDQ48HSZIkSZLkpDbzjE8Gs/tOX6xZD165/fVg
1v63a04Gn3qy5FywmR98Kvj2pZKV4FdqDgSz/u95qmQpeGPN6eDQ57Mv1ZfJ
yf3VYyWvB0+dLFkPDt3fSc0+t7PnhZr6+Xww+3xu+7p9zzfsu/7SVftZO9nf
r9tq5oLZeXSdXPm8ZM+HZN9nHnu0ZF/w8KGa4K6HS1aDbc9LNr/yzpojweZ7
zb5gc70sBqetXjmW/szq+2IsNs+Nvh58/72SjWDb9rPPh2yd7aHGIVt3ZVY/
H0iSJEmS5LV77z0lc8HsPkA2ny5rP5v/m7X/4Zr5YLOu9lLwWzUngh+rWQlm
9+uy48ruwzevsxYc+nz2pfoyOblZXS/bnzGbd9ysi3A2eHPNxeBQx/vbl0q2
gtk860MHa4JtX3cs9d++28/a+eeahWBW7+jquDJn9Tpp6sOng/9Scz6Yfd/I
5jleV3M42LafWb17fq5kMdgcx2aw+Z64GJy2+tF2r4t9tcc7q++Lsdg8r/Fy
8Oc1W8G27WftZK871Dg0+/ycCM7q5wNJkiRJkrx2s/09s/sAbfcvzu6bZe1n
/flSzUYw2985m6ec7bP22Zpo8/ong0Oft+1WfZm8dpv5PZvB7HmYbN2Gj9Qc
Cn6/ZjHYtp/Nfs4Xg9n8ymZdileD2ed8V/fVx1L/7bv9rJ3v1GwGu+q/66Tx
7l+U7A92Va/sahyydRXaXifZv5+2+tFQ/fG+GJfmLzdmnw8/q9kMZu2M5fOB
JEmSJEleu33PX/7r+yWbwbbzl9seV1bX/m5NtHkefy74/HMlq8FsH+dsvvMf
fl+yEBz6/E+q+jI5PWb3q7P7w23bzz7HPl+zEsz+Lrz0YslmsO+6alfjnNVx
sr8vWTtt1/GYtnHIdJ00ZusS3FWzEez7vGSqL3tfTMP4TJv2X25UXyZJkiRJ
km1tu//yu++UrAWz9rN/n7Wfrd/Y1fE280WWg9k629l+qVndIbuf3Kx3+0pw
7/Mla8Ghr4vLVV8mJzdbZzJb7zSrL2T3af++Zin4wP0lh4Jt+5/Nx8z6n9VB
7rm75Gywq/vM2byzbJ/Ztu0343ow+K81F4JnTpdsBrPPybHXiVwnf9v+mYnN
ng/5ZE00W3+7bT/bro+dna+xrH/rfXFl+35fjMXm7+Ry8MjhmmA2PplZO2++
UbIcHGocsn06mud8zwWz6/bJJ0oWg9P2+UCSJEmSJK/d7H5Xdh/g8V+XLAS/
XLMZzP799TUvB//ydsnFYNvjap673wpm+y83r78azPZZzurFWX+a+8H7grfU
rAaHvi4uV32ZnNz/XrMSbNZJPRbM9gXI5kVmz8N09bxKtm/sgf01wWZf6APB
5vP1XLCr+8zZ509WN2n7utl8w2x+Yjb/K1vnfOz1ZddJY/b9p3m+4HQwe19n
30+y5xnajkNW/7qz5kiwWb9/X7C53heD01Y/8r64sn2/L8Zitu/PTTWLwWxd
68zs/dJ2v6G+/WLNevCjNUeC2efD92rOBrPfQUOff5IkSZIk2b2/ebrkfDDb
7zirt2b/vnl+/3ywq/5/reZ88PixmmDWzs9rtoIH52uC2fP/2TrkbdcbH0r1
ZZIkSZLZfkM/rFkKHjtaExz6OEiSJEmSJC832ze5q3X/svlKN9dcDGb/fuhx
mlT1ZZIkSXLnmM1bz/YJuq7mcPCGmrXg0MdHkiRJkiTJflVfJkmSJEmSJEmS
JElOovoySZIkSZIkSZIkSXIS1ZdJkiRJkiRJkiRJkpOovkySJEmSJEmSJEmS
nET1ZZIkSZIkSZIkSZLkJKovkyRJkiRJkiRJkiQncez15UtvlVwgSZIkSZIk
SZIkyR3jUPXZsdeXSZIkSZIkSZIkSZLbo/oySZIkSZIkSZIkSXIS1ZdJkiRJ
kiRJkiRJkpOovkySJMfiwpmSreBNNYvBD9TsD95aE/1+zWIwe92hx4MkSZIk
SZIkt1v1ZTL68EMlv5t6hx4nchbed0Mf97WOz9D92m6f3lOyHDxyuCb4wt6S
9YnN2nnzjZLl4NDjQZIkSZIkSZLbrfoy2Z/qQaT3S1can8av1xwNPvtMyUqw
bftZOw89WHI0OPR4kCRJkiRJkuR2q75M9mdX9aCsnT1PlSwFb6uZC15f83Kw
q/5k7d9eMx98+1LJSrCr/vyg5lzwV4+VvB7Mxq2pI60E2/bzmd+UXAjeUXMo
+MjukleDH66ZD459fuW01U+Hus7N176yn6p5Pfj+eyUbwbbtnz5VshHM1tke
ahx+WrMevLPmSPDGmn3B5nNuMTir1w9JkiRJkiTJa1d9mezPvuvL/1yzEMzq
I30f729fKtkKPvdsycXgoYM1wa7G509/LFkMvvRiyWbwX2suBL9aczDYtp/Z
fq/Z+Py8Ziv43rsl68GmvYVg3+e9K8eyPva0XedDn7ftdtfDJS8Hs/dL2/az
drLXHWocTp6oCc7PlSwGH3u0ZDN47z0li0HXG0mSJEmSJMlM9WWyP/uuL3+n
ZjPYVf8/XnMxePhQTfATNa8Gs/53Va/J2m+yFczayeqGXfXzj38oORvM9nv9
w+9LFoI311wMdnXeh3KoetbYr/PtPk9Da/5yY7YOw89qNoNZO9nfEdcbSZIk
SZIkyUz1ZbI/+64v993/bL3oz9esBLN6bjZfeCzj03f7L+wtWQ8281yXgtn+
s02d7Uywq372ret8Osdn2rT/cqP6MkmSJEmSJMmhVF8m+3PsdaW7f1GyP5it
A5zV1+65u+RscCzj01X7j/+6ZCH4xZr1YLZO7y01q8HsfPV1fXSt6/zKZvN2
s+cTtvv8bZcP3F+yHMzWAcjGJzNrZ9r2N9+9q+REsNmP/Vwwu26ffKJkMai+
TJIkSZIkSTJTfZnsz7HUTzP/peZ88MD+muDcgZrg7TXngmMZn67ab9ZXXg4e
nK8JPrK75NXgHTWHgpfeKrkQ7Ov66FrX+ZXN/i5ndedZrQ8unCnZCt5UsxjM
1rXObOavLwaz1x1qHLLnUj5acyR4Y82+4Pdqzgab/Zn3BYc+/yRJkiRJkiSH
V32ZJElytv1uzVbwhzVLwWNHa4JDHwdJkiRJkiTJ4VVfJkmSnA2zeeu7Hi55
OXhdzeHgDTVrwaGPjyRJkiRJkuTwqi+TJEmSJEmSJEmSJCdRfZkkSZIkSZIk
SZIkOYnqyyRJkiRJkiRJkiTJSVRfJkmSJEmSJEmSJElOovoySZIkSZIkSZIk
SXIS1ZdJkiRJkiRJkiRJkpM49vrypbdKLpAkSZIkSZIkSZLkjnGo+uzY68sk
SZIkSZIkSZIkye1RfZkkSZIkSZIkSZIkOYnqy5zEhx8q+d3EDt3fna7zRXLs
+hwjSZIkSZIkyelUfXl7/FLNRvDTNQvBuQM1wd27Sl4JfqXmQPDE8Zpg2/67
zz8una+dqfPOWXKnXc8LZ0q2gjfVLAY/ULM/eGtN9Ps1i8HsdYceD5IkSZIk
SU6Xv3m65HzwqzUHg5+oeTWY/fu33iw5H2zbzxdfKNkI/qRmLdjV/bGTJ0rW
gp+s2QgOfT6vVfXlbs3qyFm9OLsP/PmaleCZ0yWbwb3Pl6wFH3u05HSw7XHt
tPv8Y9f52pk675wld9r1/PSekuXgkcM1wRf2lqxPbNbOm2+ULAeHHg+SJEmS
JEkO43PPllwMZvflDuwvWQh+uWYz+PivSxaC19e8nLgabOZfrgU/WHMgeEfN
oeATj5ecDWbj86marWBWB3z3nZK14NDn+VpVX+7WbD5y9r77Uc1ycOjjuNy2
9/nbms3L/lrN4eAtNavBtsf125dKtoKfrVkOfqTmUPDRR0peCx46WBN8488l
S8GsP32fr7btZ8/zHD5Uspx4KHhjzb7g/feVHAxm56Wr54u+WbMa/HjNseCv
Hit5Pdg8f/RaMFtP4NjRkpXgUO9H10m376++x9/n2NVdn9Pm12uOBp99pmQl
2Lb9rJ2HHiw5Ghx6PEiSJEmSJDmMzTzjk8HsvtwXa9aDV25/PZi1/+2ak8Gn
niw5F2zux58Kvn2pZCWYrQ+c9X/PUyVLwea+9eng0OezL9WXuzV7PiF7X4xl
Xnzb+/xNne1M8Ds1m8Fs3YOs/aw+0va4mjrJUjB73XvuLjkbzI6r+Rw6G8za
z+o1fZ+vtu1nz0Vk7X+35kzwZzWbwfm5ksVg1n4276/tcd13b8l8MHvdj9Ws
BLPnl7Lnvpp1Mk4Ep+28u06ubpybdYsXgtlxte2Pz7HtuZ77tvmceD34/nsl
G8G27Z8+VbIRzNbZHmocsvPbfB6fC2b9z34XPPObkgvB22vOBbN1Zj5UMxfs
6nmAn9asB++sORLMnsO5rWYxOKvvI5IkSZIkee3ee0/JXDC7n9BkK5i1n90/
z9r/cM18sFlXeyn4rZoTwex+fnMfaD6YHVdzf2Uu2LzOWnDo89mX6svdekPN
K8Gu3ndD2fY+f7ZOeNb+z2u2gln7ux4ueTnY9riyeXldHVf2/EDWftafvs9X
2/az+v6Vny9aD2btZ3WurP1sXYu2x5XVEbLr7dJbJReCp06WrAfb9mfazntb
Z/U6aTvO/16zEexqnH2Obc/13LfZ50z297Ft+1k7Xf097crs/P7pjyWLwWzf
kAd/WXIh+MjukleDWfsvvViyGczaz9ZVaDsO2XNH2XM1zf4nm8Hm999icFbf
RyRJkiRJ8trN7p9k9xParhuZrX+YtZ/1J7vPme3vnM1HyOYlZetDNq9/Mjj0
edtu1Ze71fzlbu9P9v262TrGWftt7/M38y+3gln72fq00zZubf++9G22vnrb
48r+jmTzwtr28+B8TTDbb33azrvrZDrH2efY9oxz35q/3Jid37bP47X9ndJV
+13V67P9F9que9D2OZyhzjtJkiRJkpwe+56//Nf3SzaDWfvZ/OW2x5Xdz8nu
fzbP9c8Fn3+uZDWY7eOczXf+w+9LFoJDn/9JVV/u1rb7Lz9wf8lycOjjuNxZ
rS9nz7Fk7Zv315itF9HVuE2b2d/H7O9Itu9DNj7Z3+u2/Zy2etysXifTNs4+
x7ZnnPvW/suNQ32vmLb21ZdJkiRJkuRQtt1/+d13StaCWfvZv8/az/Zf7up4
Dx8qWQ5m62xn65dm8w7uqtkIZvOh9j5fshYc+rq4XPXlbs3uw2fz7rP1eJv7
yivBbJ3GL9SsBZt1Ik8H2x7XrNaX29YBs31Ls/u9bfctzfZRnbZxa7vfa3M/
+3Qwm5eXXedZfeTE8Zpg2+Nq3q+ngs3fgdVg9lxT9u+z8cnqg237f2B/TTB7
3WY+8Xqw7evutOtk2uqePse2Z5z7Nnve7MjhmuALe0vWJzZr5803SpaDQ43D
WOq/fbff/J44EWyezz0XzD4Pn3yiZDE4q+8jkiRJkiR57T73bMnFYHY/4fFf
lywEv1yzGcz+/fU1Lwf/8nbJxWDb42qe398KZvOkmtdfDWb7LLddP7PZ32xf
8Jaa1eDQ18Xlqi9vj++9W7IebNahPxPM6tHZ/s53/6Jkf/CbNceDbfs/q/Xl
7PMkq9dkdcBsfdpsH8Y9T5UsBbP1GaZt3DI/WnMheGfNkWC2Hmxm9rzQ25dK
VoJt+9/M21sJNuN0LJid92zeWdZOU+dcDbbt/49qloMfrDkQdJ1c3XUybXVP
n2PbM859m+1Tc1PNYjBb1zqzWXdnMdh2f5y+HUv9t+/2v1izHmw+L48Es30c
vldzNpj9fulqHEiSJEmS5Oz5m6dLzgez+41ZvTX79818iPPBrvr/tZrzwePH
aoJZO9n+g9n+mNk8gmxd07brjQ+l+jJJkiQ5XrP1NH5YsxQ8drQmOPRxkCRJ
kiRJ9mW232W2HmDb9rP52jfXXAxm/37ocZpU9WWSJEly+s3mR2f7+1xXczjY
rH+zFhz6+EiSJEmSJDkO1ZdJkiRJkiRJkiRJkpOovkySJEmSJEmSJEmSnET1
ZZIkSZIkSZIkSZLkJKovkyRJkiRJkiRJkiQnUX2ZJEmSJEmSJEmSJDmJ6ssk
SZIkSZIkSZIkyUkce3350lslF0iSJEmSJEmSJElyxzhUfXbs9WWSJEmSJEmS
JEmS5PaovkySJEmSJEmSJEmSnET1ZXL7ffihkt9N7LS1T5IkSZIkSZIkyZ2p
+nK3vvhCyUbwsUdLTgc/WHMguHtXySvBu39Rsj945HBNcOjx4H+u+jJ57T77
TMlK8Pqa48FHdpe8Gpw7UBO8tWYheGPNZrCr4/pCzVrwxPGaYPP6+4IfqpkL
fq7mfLBtPxfOlGwFb6pZDH6gZn+wGdfo92sWg9nrDn09kiRJkiRJksW29+en
7X7+2Puf1el+UrMW7Op+48kTJWvBT9ZsBPseh75VX+7W5ro4FczeR5+vWQk2
2Qo29YTVYPa6Q48H/3On7fOWHKO7Hi45Hszqzi+9WLIZzL5vPP7rkoVg873g
RLBt/79Ysx68956SuWDz3ND54JdrNoPvvVuyHsyed2rb/6f3lCwHs+edXthb
sj6xWTtvvlGyHBz6eiRJkiRJkiSvxrHXC4bqfzMvcy2Yzeu8o+ZQ8InHS84G
s9f9VM1WMJvH9O47JWvBoc/btaq+3K2/eqzk9WD2PrqrZiM49HFc7m9fKtkK
frZmOfiRmkPBRx8peS146GBN8I0/lywFs/60Pa6f12wFv1JzNpjNs5u253nG
3v5Yjqut2fV/Xc3h4Idr5oOfqHk1mP37rN7a1XmZVbN6dDZfuG37WZ03+1wd
ejwu9+s1R4NdXW9ZOw89WHI0OPR4kCRJkiRJklej+vLV+dSTJeeC2XzMty+V
rASb+s+BYPa6e54qWQo294lPB4c+P32pvtyt83M1wex9lK133cy/PxNs6k7n
g9n8u66Oq6n3LgWz47rn7pKzwe/UbAazem7WflZ3bntct9ecCw51XGOp/2bt
NOsQvxzs6jqctnH7Yc1S8Js1q8Gu2n/+uZLVYNbOwfmaYFfnZVb9WM1KsBnX
Y8G27WffW/70x5LF4JXX8Y7PvTTPN50JZp9XbfvfPJf3evD990o2gm3bP32q
ZCOYrbO93dfH/2/2vrvv3pJzwaz/2fXwzG9KLgSzv1/Z9ZCtl97V8wA/rVkP
3llzJJg9p3FbzWJwLL+nSJIkSZIk26q+fHV+tWYp+K2aE8Hsfm9zX20+mK0z
3Nyvmgs2r7MWHPr89KX6crdm92mz+7pdzYvM9hXN1lNte1zZ/OKsP1+q2Qhm
7Wfrz2ftZ/1pe1xZ3W2o4xp7fblZn/jlYNv2p+24MrN1ib9bsxXsqv1sP4ih
6v5j94aatWD2vSJb17rt62bvl+Z6ORPMniPKbOrGp4NNPXMh2FX/s3Uh2raf
tdP350xbs/dd9pzAmdMlm8EHf1lyIZj9fc/az+bdZ+3ff1/JwWDbccjWjW+e
s1sMNvP1N4PNevCLwbH8niJJkiRJkmyr+vLVmdVrmjrzwWA2vyPbBzBbZ7K5
P3cyOPR52G7Vl7fHbD3nps6zGszmJWX1jux9mj1H0bb/TV30tWD2um3rC23r
cdk6w22PK7tvP9RxqS9P53FpfzZsjvtiMFt3orl+V4Nd9Seb/5vN223bflZ3
PrC/JthV/81fbsyeb8zayb4n9N1+V5/b2f4gP6vZDGbtZPPrfY6RJEmSJMlZ
dez3dcfS/+z+WFbHye4bZ+uLZvs4Z3W6P/y+ZCE49PmcVPXlcdl2PmxX9+Gz
5z2y1zV/+eqOayx1xqwekbXfdr/sbJzHPm5jb38s/mPNhWC2jsSJ4yWrwb77
eexoTbCr/Q76ri/bf7mx7/fXWNpXXyZJkiRJkrw6x35fd+z9P3yoZDmYrbN9
6mTJejCrm9xVsxHcvavkleDe50vWgkOP0+WqL3frN2qOBbN6R3b/P3teItuH
MXufdrWfeLZPeva62T7F2X3mtvsUZ/tBtz2u7Dof6rjGUmf8SM2hYNZ+s9/m
hWBWR8jW7x37uI29/WmzWcd3KZg9V/buOyVrwaH6/7ma88FmHvCZYFfrY3+6
ZiHYtv8P3F+yHGz2YTgcfGFvyfrEZu28+UbJcnCo8ziW+m/f7Tfff08EP1xz
Lpit4/3kEyWLwVn9HCNJkiRJkhz7fd2x9L+ZD7EVzNYNztYfzvZZzurFWX+a
/eL2BW+pWQ0ONW6Z6svd+u2ak8H77i2ZD2bXT3YdNvsQzgWzefTZ/q1tjyt7
32V152y+c7bOdrb/456nSpaCbefDZmZ1/M/UnA3eWrM/2Pbzc+x1xuzz7Ws1
h4PZ9bzTxm3s7U+bfV8/bc3qZW2PK6vHZfOOs8+lbB/n7LmOtv3M9gG/qWYx
mK2nkdmsE7MYzF532q7DndZ+ti/5R2uOBJvn3fYFv1dzNph9X+pqHEiSJEmS
JLty6PuU232fedr6n9nUK84Hjx+rCWbtZPuoZuvlZvMysnpf233xhlJ9mSRJ
kttp9nzXD2uWgtl68kMfB0mSJEmSJMdhtm9ytr5i2/az+Z4311wMdjU/dCjV
l0mSJNmH2XOn2X4019UcDt5QsxYc+vhIkiRJkiTJnaj6MkmSJEmSJEmSJEly
EtWXSZIkSZIkSZIkSZKTqL5MkiRJkiRJkiRJkpxE9WWSJEmSJEmSJEmS5CSq
L5MkSZIkSZIkSZIkJ1F9mSRJkiRJkiRJkiQ5iWOvL196q+QCSZIkSZIkSZIk
Se4Yh6rPjr2+TJIkSZIkSZIkSZLcHtWXSZIkSZIkSZIkSZKTqL5MMvPhh0p+
N7FD95f0fuGkOl90PZAkSZIkSZJXp/ry1dn2PuS0OfT4bff4D93fsWqcG79U
sxH8dM1CcO5ATXD3rpJXgl+pORA8cbwmOPR48D/X+2VcOl90PcyezuPO9Nln
SlaC19ccDz6yu+TVYPb97daaheCNNZvBtv1fOFOyFbypZjH4gZr9waZf0e/X
LAaz1x36fJIkSZIc3qHrV9f6u/7FF0o2gj+pWQt29fvo5ImSteAnazaCQ5/n
a1V9eVjdB7s6jdv2uNPGOasjX/l+Y7yP9/maleCZ0yWbwb3Pl6wFH3u05HRw
6HHif+5Oe7+MXeeLrofZ03ncme56uOR4MKs7v/RiyWYwu//w+K9LFoLNfYIT
wbb9f3pPyXLwyOGa4At7S9YnNmvnzTdKloNDn0+SJEmSs+/Xa1aC2e/3D9fM
B5v5W2vBD9YcCN5Rcyj4xOMlZ4NZ/z9VsxXM6gjvvlOyFhz6PFyr6svD2vd9
sN++VLIV/GzNcvAjNYeCjz5S8lrw0MGa4Bt/LlkKZv3panymbX73nqdKloLZ
6zb3w14O3nN3yYHg3b8oWQhm982m7fqcNrP5yNnx/qhmOTj0cUzqTrs++/58
6Pt1s+cZvldzNvjzmq1g23Ee+9+Roc5Xtl7B12oOB2+pWQ1m3z+beXgvB3/1
WMnrwbbvu2/XrAez473/vpKDwbbnJbtum3Udzgaz98W0fU+Yts+rzLH8XRjL
eGbPPx8+VLKceCjYzIvdF8zed9nns/mqV2d2fWbnpW37zX2Uo8GsPt62/ayd
hx4sORocerxJkiRJzr7Z75Hs9/jnas4Hn3qy5FywmR98Kvj2pZKVYLa+aNb/
7P5J87vwdHDo8e5L9eVh7fu+VnOffimYtd/c/zsb/E7NZjC735u1n9ULpm3c
uvLee0oWg+/8pWQ12GQrmH1+Zsf7mZqzwVkd567Mni/Kjnfs61rstOuzWT9y
Ifizms1g3/3JxqGrz9vs+1Xb4/J3pLGp054JZsf11psl54NZ+1ldPuv/J2pO
Bq9c/10KZu3/oOZcMGv/tprFYNvzcnvNueBQ19tQ9eW+P68yd9rfha7GLTN7
Di3rz3drzgSz8z4/V7IYzNrP5sn2PQ5j92M1K8FmXI8F27bfPOf+evD990o2
gm3bP32qZCOYrbM91Dj/tGY9eGfNkWBW38/+Hs3q7xeSJElymj1+rORi8Mr3
r+Jz1Nl8k6/WLAW/VXMimP2+a+4/zQez+x7N74y5YPM6a8Ghz0Nfqi8P6/bU
l+O8sKz9bH3grP2svpa1n/Vn2sZt2sw+P7Pjbe4vzgWN85W9oeaVYHa82d+X
oY9jux3L9fnvNRvBrsahbX/aPp/Q9vO2+T51MNj2uPwdubrjyubhZu1n80Cz
9p97tuRiMGu/qRPOBZs6+VYwWy8oa/+bNavBtufl4HxNcKjrbaj6ct+fV307
lr8LfY9D9txI1p9s3YCs/ew5iqz97H3d9ziMxeZ731owu8/wxZr1YNvXzT7/
u1qHJGun7d+dvs3WG8+eo2j2jdkMZs/JzOrvF5IkSXKazeq82ffzf6y5EMza
z+4LZfdFs3nK2fPY2fpgj+wuORkcery3W/XlYe37Plhz3/S1YNZ+2/sYzbyK
rWDWfrY+6rSNW1t/XLMabO6vHw8e2F8TzO7ztD3eru4XTds49+2szl92fW7P
9dm2P31/3maf/22Py9+Rbq+fvl83m+eVtX9TzWIw+/fZ52RX6+4238dfDQ51
vQ1VX+7qesv0d2F7xrnt9dy32br9fY/DtNmMx8Vg9pxDcz2uBrvqj/nLjdn+
Dm3XbWj73MVQx0uSJEnOkl+oWQtm38Oz/eP63tcpex4+u1+U/U58/rmS1WC2
j3M23/kPvy9ZCA59PidVfXlY+74Plj2nkbU/q/PO+j6P2byGrD/Z/vXZffJs
37eddj+8b9vuv/zA/SXLwaGP43Jdn9tzfbbtz1jmL/s70u310/frZs95dlWf
evzXJQvBrsbH/OVur7dMfxemc5zbXs+8stnn4Ydq5oInjpesBvvup/2XG9WX
SZIkyfHafO8+HWx7n2Go/h8+VLIczOZfnzpZsh7Mnp+/q2YjmD0Hvvf5krXg
0Of5ctWXh7Xv+2DZ/ptZ+9k+htnv+rb7GGb7eLY9rmweTfa6zXyR9WBX5zF7
/iTrT7bvQHY/diz7RXY1nkOZ1R2ydTNurdkfzP4+Zuc3e77rzOmaYNvjcn1u
z/XZtj/ZfqNdfd7ed2/JuWDb45rVvyOzWl/OnsNsW+fK7KrekZl9/xzqepvV
z6tZ/bswbd8P2+5fn/0ez+axZuOfvU+beunxYN/XW99m+8tnz5m/+07JWnCo
/mfPKx45XBN8YW/J+sRm7bz5RslycKhxaO6jnAh+uOZcMLv+n3yiZDE4q79f
SJIkye00+x2d1VWb/Y2PBofqf7ZPXHbf7Pqa1WC2z3LbdcOafX72BW+pWQ0O
NW6Z6svD2vd9tuz9ktULsnlq2fqo2X7re54qWQpm973bHtePapaDH6w5EOx7
nLN9MLN1Htru89uV03Z9jsX33i1ZDzbrc5wJZvXo7Lzf/YuS/cFsndK2/Xd9
bs/12ff4ZM8zZHXqbF2Xtsc1q39HZrW+nJmNZ/a62XqtXV1XmVn72XWevS98
Xl3ZWf27MG3fDzM/WnMhmK1vn70fM7Pnq9++VLIS7Pt669u+r8O2ZnXPrP/Z
+m/Z/gXZutaZzfMji8G+151ra7afdfP+OBK8sWZf8Hs1Z4PZfZuhjpckSZIc
o9m6dtnvo2/UXAwO1f/mPsf5YPMc/bFg1k62nlu2Ll/2PO2995TMBZtsBYca
t0z1ZZIkydk2e94y+/6fzaMc+jhIkixmzyP9sGYpeOxoTXDo4yBJkiS5fWb7
JmfrQbVt/8s1m8Gbay4Gs38/9DhNqvoySZLkbPjvNRvBbF5qtn5RNr916OMj
Se4ss+egsr9f19UcDjbrLqwFhz4+kiRJkhyr6sskSZLjMlu3PLsPn63Dn60L
NPTxkSRJkiRJkpxe1ZdJkiRJkiRJkiRJkpOovkySJEmSJEmSJEmSnET1ZZIk
SZIkSZIkSZLkJKovkyRJkiRJkiRJkiQnUX2ZJEmSJEmSJEmSJDmJY68vX3qr
5AJJkiRJkiRJkiRJ7hiHqs+Ovb5MkiRJkiRJkiRJktwe1ZdJkiRJkiRJkiRJ
kpOovkySJEmSJEmSJEmSnET1ZZIk+fBDJb8LDt0v7iy/ULMWPHG8Jnhjzb7g
h2rmgp+rOR8c+rhJ/n/t3el2HleZL/BbIIFmCJDcAmQtAoTANQCBEJrpFrqB
huY0p7kFMs8Jl0AmMtkJXwlpx5JleZJtSR4kWRMJDXEgCWftXeusxeLpJ/1W
XKWqkn7/L78v9n53De+r2vup2kWSJEmS+8d/rrkSPH+uJvi1mrngY4+WvBb8
SM1C8Nh8yWrwpprdYFfb+4Oa3eBHaxaD2TxkV/OTLx8u2Q7+R81mcPl8yW6w
7ecunSnZDH66ZjvY1/m3V6ovk7Pb9ncv+/3Pfld/82zJpWDf/R96v/blQdte
Dmvb34e+7ar/Q+9X7k9vq9kK3nN3yXzwxGLJ5eBXanaC775TshV84vGSc8Gh
9wdJkiRJktw/NvNqp4LPP1eyFszmN/6zJvrUkyUrwWx+7zM1y8GutveHNavB
s0s1wa7mOR99pGQzeF3NXPCbNceD2f7MPjer18/P1QTf+WvJZnDo8/RaVV8m
Z7ft79srL5fsBL9YsxFcOFYT7LvuvF9VL6Pz7eD0n9Myq/N+ruZScOj+kiRJ
kiRJjsWs7pDN73215miw7efeWnMlmNVVs+eIu6ovP/N0yYVg83zw2eDbV0vW
g9nz49nnPvtMycVgs67eueDQ50tfqi+Ts9t3/eWF50vWg3fULAaH6v+5syXb
we/WLAWbusGR4OLxmuAjD5dcCbbdrrE9B3pDzavB22uOBbO/d131J/s7+PWa
+WDW//vuLVkI/vaVkt1g2/432Q1m/WzOu61g28/taj9P5XOzdpr9uhrM1iX+
Vs2J4OFDJVvBtv0c2+9P2/3Z1feu7/Oqb7Pr9j++WbIazMYp2fjoV0+UnA9+
v2YnONR++HnNVjD7HmXfu+x76r4RkiRJkiT3n9+u2Qhm8wDfqFkIZu3/7b2S
nWC2LvfVt0rWgln7Xc3PN9txMfidmjPBj9esB7P5+bbz0s3nbAaHPl/6Un2Z
nN2+52mzee9sne2h+p89d/aTmsvB7Hc4q6dn64eP7Xi1Nau3vvhCyUbw+EJN
sKv98C81y8Gsfpe131y/nAp+rGYt2Lb/zfG/HMzeVzLU8R16Pey+6svZe1ua
7/1OsFnPeDWY1X/b9nPqvz9dfe+mblO3fzXYvJ/nfDC73zWz+ft5LvihmuXg
UPuheQ/PmWBX37ux/R0kSZIkSZKzm63/fPddJXPB7DmFbF3u7HOb9aRXgs17
ic8H225XV/OcX67ZDmb19Ox5h2z92GydvaY+sxQc+nzZa9WXyWv/3euq/anU
l+/6ZcnRYFd1sazuMLbj9YmajWD2XOSnal4LDrUfunqOL6uPZ++zyOrszfVI
NGvn0Eslm8Gujm9X+3kqn9vVeZL9+6aOdzTYtp9T//0Z2/OzQ9m8l+b1YFd1
9qzuPHe0JjjUfmieq349mL1fKWsnO6/Ul0mSJEmSHL/NeH0jmM0bZHXkZt70
UrBtfz5ccyyY3ff+wba3v+doMrN56eb5hmhzv/988KUXS64Es/c4Z887v/GH
kuVgX+dZ16ovk9f+u9dV+1NZHztbj/R7NdvBvo7HXm1vZvZ34Qs168HsOcq2
78sY2354/889FWzWeV0L3lmzHmzOo7PBvvs/rf18cOrLfn/2h6dO1gSzunDb
9tWX1ZdJkiRJkhybn69ZC2bPJWVm7XTVz6HXZdzrunPzfNilYLbO9tmlkq1g
9txKNm/ZPI/+++DYnqvKVF8mr/13Nfv3Wd3wizUbwYVjNcFsfYa++5/ZPGd2
fmaz59E+XRPN1r/9YP2Mz8d19R7Y7DnK7Hne7Hxo1i9ZCU69vpzth+z57myd
7U/WbAb77v9U9nPf50m2Tm92Pve9PvZUfn/U9d7fW2ouB7Pj2NX62J+pWQ4O
tR+accOZYHNf8IVg9r17+qmS1aDzkCRJkiTJvfe+e0suBrPnjrP7z7Pnmofe
vmt1qDpys193g9n7l5vjcyWYvWc5qxdn/WnmHY8Eb625Ehz6uP2j6stkf797
2brW2fs9u6ojt+1/23a+UrMTzN6Hmz1vmP1u/7RmLdi2n9nvWFZ3brt/sve9
Zs/Hzc/VBJvtvhCcen05M6sjZ3WWofrZ1v1aX26ey18N3lhzJNg8j34i2NV9
HVP5/Rnb924qZnXV7Hc1O77Ze5zHtj75bTVbweZ99SeC2ffuX2tWgtk4Zejj
TJIkSZLkfnbo53r3um7b9/7p6nObdWEvB0+fqglm7fyiZjeYPT+YzXs3z+XM
B7N1UIc6XpnqyyTJPszeW9HcF3Y+2Pxd3QwOvR0kORaz39Uf11wMZuuQD70d
JEmSJEmSe2323uS+n4vJ1rPN/v3Q+2lW1ZdJktdidl9Z9r6J7LnvobeDJMdi
29/VbF2UqbxfgCRJkiRJktNSfZkkSZIkSZIkSZIkOYvqyyRJkiRJkiRJkiTJ
WVRfJkmSJEmSJEmSJEnOovoySZIkSZIkSZIkSXIW1ZdJkiRJkiRJkiRJkrOo
vkySJEmSJEmSJEmSnMWp15evvlWyRpIkSZIkSZIkSZIHxqHqs1OvL5MkSZIk
SZIkSZIk90b1ZZIkSZIkSZIkSZLkLKovkyRJkiRJkiRJkiRnUX2ZJMnx+MLz
JevBG2pOBx97tOS14PxcTfCrNcvBG2t2gkPvD5IkSZIkSZLkuFRfJmf35zVb
we/VnA1eVzMXzOpBn6g5FbyzZj049P4g2b2PPFxyOpjVnV95uWQn+PLhku3g
k78uWQ4unakJDr0/SJIkSZIkSZLjUn2ZnN0H7i9ZDN5ecyF47mzJdrDJbvDF
F0o2go8+UnImOPT+IDk9s3p087zykeDQ/SVJkiRJkiRJjkv1ZXJ2f/VEyevB
s0slW8Gh+/uPPvxQye+CY2s/e078WzUnglld7Os1q8Gh9kOznvGrweZ+hGPB
t6+WrAe76s+zz5RcDDb7aT6Y9T/73OefK1kLfrPmeDB7rv/DNceCf/5TyaVg
V8dxv/rxmvVgc16cCg7Vz6n/DpAkSZIkSZLkflV9mZzdrB7XvL/0aDB77rh5
D+pK8Is1G8Gu+j+V+nK2Tu+x+ZLV4BOPl+wE77m7ZDU4VF3pt6+U7Aaz59aP
L9QEuzou/1KzHMyeu2/7udn3ItveX9TsBt99p2QrmL1HuO/jOBU/WbMZzO5n
uK1mKzhU//fr7wBJkiRJkiRJTl31ZfLabZ6T2wlmzwk+83TJheA/1RwP/rBm
Ndi2n1OpL2fPif9nzU4wa+f7NTvBrvrZvB97I7h4vCb4qZrXgll/mvfuvhrs
6rhk+6er8+HNN0pWgicWa4Jv/KFkOdj3fRdTtzmeG8Gm7jofbM6jK8Ght+Mf
ncrvAEmSJEmSJEkeNNWXyfGYPTea1Vnatp/VK7PnarN2bqrZDR60+nK2jvQX
ataD2Xu3s/fhdtXPsdXRDh8q2Qo2z2dfDN5ZczLYnHfng0NtV99+vmYteH3N
fPDM6ZIrwaG3Y1an8jtAkiRJkiRJkgdN9WVydrP1WrP1frN6Ylbv+EjNxeD9
95UcD7btf9PeQvCnNWvB8+dKdoLZ70NX9ZpsXfHmvbsXgll99umnSlaDXfXz
rl+WHA1m50PWz7vvKlkJTr2+/OSvS5aD2TrM2frYt9ZcCWb7v+/t6tv77i25
GMyeR37nryWbwaG341qdyu8ASZIkSZIkSR401ZfJ2f33mvVgsy7yqeBjj5a8
FszeS/udmjPBQy+VbAbb9j97rjZ7Djd7fjBb37urek1Wf/xYzYlgsx75keC/
1qwEm/eyHgm27edPai4H547WBJv3bM8Fm/ffXghOvb7crAt+KbhwrCaYfV++
WXM8ePWtkrVg39vVt9nxGsqsbtv3fpjK7wBJkiRJkiRJHjTVl0lO3R/U7AZ/
XHMxeOpkTXDo7SDpd4AkSZIkSZIkx676MsmpmD1fmb1X+qM1i8FP1mwGh94+
kn4HSJIkSZIkSXLsqi+TJEmSJEmSJEmSJGdRfZkkSZIkSZIkSZIkOYvqyyRJ
kiRJkiRJkiTJWVRfJkmSJEmSJEmSJEnOovoySZIkSZIkSZIkSXIW1ZdJkiRJ
kiRJkiRJkrM49fry1bdK1kiSJEmSJEmSJEnywDhUfXbq9WWSJEmSJEmSJEmS
5N6ovkySJEmSJEmSJEmSnEX1ZZIHzYcfKvndzA7dX5IkSZIkSZIkybGovtyt
betWmTfUvBr8es188LM1K8FXXi7ZCQ69n/g/q+65N9rP+8Oufm/belPN68Gh
9wdJkiRJkiTJ4e17fnLo7ftHf1CzG/xozWKw7+19+XDJdvA/ajaDy+dLdoNt
P3fpTMlm8NM128Ghj9u1qr7crV19L5rsBpt68mowa/+rNcvBofcT/2en/neE
3E8+/1zJWvD6mtXg0P0lSZIkSZIkOT2nXhf4Yc1q8OxSTbCr7X30kZLN4HU1
c8Fv1hwPPvVkyUow+9zmeaPd4PxcTfCdv5ZsBoc+bteq+nK39v078P2anWDW
fvY96nu7+r4P57evlOwGP1dzKfhPNceDjz9W8l/B4ws1wT/9d8nFYNafqezP
zOy+ncXjJZcSjwdvrDkSvO/ekoVgdhy7uo+o7/3W93Fs/k7+PnhHzWLw1por
wbbbddB88IGSE8Ev12wHh+4vSZIkSZIkyek5lfpyNs+c1VWz54i72t5nni65
EGyeDz4bfPtqyXrwazVzwexzn32m5GKwqXucCw51vPpWfblb+/4d+ErNTnBs
9eUP1SwH/7NmJ9i2P02992Iw68/dd5WsBLN6ffP7sRLM2s/qzmM7f9r6bzWX
gll/mnUvzgez435svmQ1mLX/m2dLLgXHtp/btv+rJ0rOB7Pz860/l1wOZu1n
91f0ff5MxS/UrAc/U7McHLq//+jPa7aC36o5Eczu92i7PsbQ202SJEmSJEnu
B8dWF/jbeyU7wY/ULASvvlWyFux7e79RczH4nZozwY/XrAdvrzkWfP91huN7
bJvP2Qzu9fm0V6ovd2tX34uxrY/ddrv+b812sKv9nD1fnPWn7fOG2Xr4WftZ
f4Y6f7oyq0tm/fluzVYwa7/t8/jZ+hVj289t2297fv6iZjeYtf/IwyWvBvs+
f6Zi9pxy9r6Mofv7jzb9OhPM7t944vGSneA9d5esBtWXSZIkSZIkyf4cW12g
eU5xJdisJ3o+ONT2ZvPqTZ15IZg9p5w915ats/rYoyVLwb6Py9hUX+7Wtt+L
zBtqXg1m90V8tmYl+MrLJTvBvrer7/3c1Hv/K5j1J6vHZe1n76PP2s/W2Z76
fm5+F18LdnWetzVbF3ps+3mo4zi282dsvvB8yXqwuQ9iKTh0f2e1ed799WDb
9SLa3u8x9HaTJEmSJEmS+8Gxzet+uOZYMHtuZSrbm73nNKsHNc/rzAdferHk
SjB7j3NW13vjDyXLwb6Pb1eqL3fr2H4H9ut2ZfefdPV8qOeXG7N1Ibraz0Op
vjyt35+uvLPmZLC5f+dKcOj+zqr6MkmSJEmSJDldxzavO9TzZUPth8XjJZeC
2TrbZ5dKtoLZOqLfq9kOZs/THXqpZDPY93Fvq/pyt47td2C/blf23vasP9n7
l7P6S9v3L2fvg267XXNHa4LZ5zbPE28Fu9rPbd9z3dSjzgXfe7dkO5g9X589
Z3rmdE2w7XapL0/r96etX6zZCGb15aH7e6021x1ngs19hReC2ffu6adKVoMH
7fwhSZIkSZIk99KDNq871PY2z+XsBrPn7LLnkrL3LLddf7V5/vtI8NaaK8Gh
j9s/qr7crfv1d2Bs25X9DmR15+x552yd7fvuLVkIPvtMycVgtq5C2+36t5pL
web9BnPBoY7Lx2rWgt+qORG8qeb1mc3uC3r7asl6sG3/1Zen9fvT1m/XnAp+
vGY9OHR/r9XbaraCzffyRPDGmiPBf61ZCWbXOUNvN0mSJEmSJDlGh36ud+zz
wEP1/46ay8HTp2qCWTvZ+1gXjtUEs+eD7rm7ZD7YZDc49HH7R9WXSZI8OGbv
E/lxzcXgqZM1waG3gyRJkiRJkiRnNXtv8uFDJVvBtu1/pWYnmK23mf37offT
rKovkyS5/8zu98veA/LRmsXgJ2s2g0NvH0mSJEmSJElyGNWXSZIkSZIkSZIk
SZKzqL5MkiRJkiRJkiRJkpxF9WWSJEmSJEmSJEmS5CyqL5MkSZIkSZIkSZIk
Z1F9mSRJkiRJkiRJkiQ5i+rLJEmSJEmSJEmSJMlZVF8mSZIkSZIkSZIkSc7i
1OvL7/y1ZJMkSZIkSZIkSZIkD4xD1WenXl+++lbJGkmSJEmSJEmSJEkeGIeq
z6ovkyRJkiRJkiRJkuS0HKo+q75MkiRJkiRJkiRJktNyqPqs+jJJkiRJkiRJ
kiRJTsuh6rNTry+TJEmSJEmSJEmSJPdG9WWSJEmSJEmSJEmS5CyqL5MkSZIk
SZIkSZIkZ1F9mSRJkiRJkiRJkiQ5i+rLJEmSJEmSJEmSJMlZVF8mSZIkSZIk
SZIkSc6i+jJJkiRJkiRJkiRJchbVl0mSJEmSJEmSJEmSs6i+TJIkSZIkSZIk
SZKcRfVlkiTH4wvPl6wHb6g5HXzs0ZLXgvNzNcGv1iwHb6zZCbbt/w9qdoOH
XirZDP7qiZLdYNvP/V7NdvDlwyXRoY8zSZIkyQ/uww+V/C44dL/I/eyXajaD
Z07XBJt5hSPB62vmg7fUXA627ad5CZLcG9WX97dfqdkJXlczF/x+zU5wqP5k
/76rcYTxCJ0P/fnWn0suB79Zczz4qZrXggvHaoJ31FwODr3d1+ojD5ecDmZ1
51deLtkJZuOXJ39dshxcOlMT7Kr/N9esBr9bsxRs+7lNXX0p+PhjJdvBoY8z
SZIkD5bGR926X8fv+3W7OC1vq9kK3nN3yXzwxGLJ5WA2r/vuOyVbwSceLzkX
bNt/8xIkuTeqLx9M3/hDyXLwvntLLga7+twf11wMZv3pez+4biev3bevlqwH
s3HHJ2o2gufPlewEf16zFfxQzXJw6P0xdrN6dHZfcdZOM97aCjb3554NZu1k
477svt9ba64En3qyZCU49P4mSZLkwdL4aG80n0P2Z1bn/VzNpeBQ/TQvQZLD
qr58MM3uQ/tIzULwt6+U7Aaz9rN/n91n29yHuxXM2m87jsj+fVe23f9ZO816
t68Gb685FszGrV315957Si4Em3Hq0eDXauaCzz9XshZstuNCsFmv92gwWz8n
e66zq/3QVTs/qrkQbNbdeT349Zr54EMPlqwH2/azK79dcyr4hZr14FD9ZOPH
a9aDzXl6Kpi18+Wa7WDz+70UzNrJzp/sPufsvmLrTZEkSXIM7tfx0VTmMdq2
k41r/rnmdDB7P9HY1tnru/7edz8P2nzU2Mz25x/fLFkNvv/7ueL+bOa9zgfb
rqtpXoIkh1V9mX9v9vf3zpr1YNZONm7qav3VqVxvtzWry7/4QslG8PhCTbCr
/ZBdN2b3UT/4QMlaMBt/Ze1nz1dm7TfP2S8Ehzof2u7PbHt/WrMW/EbNQnCv
z9f/bzZeyK7Dh+rnQfOTNZvBbJ4nu++o7edmz01k46/P1qwE//J2yUawGaeu
BIfe3yRJkmTxoI2PxjaP0bads0s1wTffKFkJ/u29kp1gV/tzKvNdQ82f7Nf5
qLHZPL/7arB5j/H5YFZXzWzqxueCXa3DYF6CJPdG9WX+vT+r2Qg2dYkzwayd
M6drgl+s2Qi27edUrrezda4Wj9cEs/crZf3Mrve62g9NdoNZO9m4su/2+94P
Y9ufXW1vVx60+ZOx2ZxfG8Fj8zXB5ny5Euy7n839yLvB7N9n475sfapmXuFc
8Ds1Z4K31FwODn08SZIkOW2nPj6a+jxG23ay52GHOl5Tme+ayvzJQZuf6cqb
al4Pnjtbsh1s235Wd547WhPsarvMS5Bkt6ovcxYfuL9kMZg9p3xHzWKwq/5M
5Xo7W98422/Z9W12/+RU9sNU2h9bO0O139ZmvuFUcOrrv43Nz9esBbN1upr7
eq4Eh96Of/T0qZKNYPa8QHYf1HU1K8FsHqDvv1MkSZI8mE59fHTQ5jH2a305
q3u2ff9dU1fcDY7tOO7X9ofy1MmaYFfrPw9VX840L0GSH0z1Zc5iU0++HLyx
5kiw7/uvurp+y+7HO3yoZCvYtv27fllyNJitE5WNv+6+q2Ql6Hq+2/bH1s5Q
7be1GWesBz9ccyyYrWOQrTP285qt4GdqloND7YeubNbTuhjMnkd+568lm8Gh
t2NWs/cmZOPNbF6r2R+rwexzs+cvht4fJEmSnLZTHx8dtHmMT9ecDd5csxrM
6q1dnT9dbddHahaC2Xu4snWns/nhsR3H/dr+UGbzus35fj7Y1frYQ83zmJcg
yQ+m+jJnsXmfxm4wu8+q7Tozbe3q+i07z7O6c9vP/UnN5WB2P17zvo65YPN+
1AtB1/Pdtj+2doZqvyuf+03J5eA/1RwPPvpIye+D2bg4+34Nvd3XanZ8hzKb
L2q7Xdl8VPO89Wowa6cZd+4E76w5Gcx+55t1CpeDQx9/kiRJ7k+nMj46aPMY
X67ZDjbPL54KZsdlbNuV1b+y59ObdYJfDz7zdMmF4Ni2d7+2Pzab+2IuBLPf
h+x9Adl7nLPxflf9Ny9Bkt2qvkySJPu2uf93M9jV+DF7D9QNNVeCbd+7RJIk
SZIkp6t5CZLsVvVlkiRJkiRJkiRJkuQsqi+TJEmSJEmSJEmSJGdRfZkkSZIk
SZIkSZIkOYvqyyRJkiRJkiRJkiTJWVRfJkmSJEmSJEmSJEnOovoySZIkSZIk
SZIkSXIW1ZdJkiRJkiRJkiRJkrOovvz+Xn2rZI0kSZIkSZIkSZIkg0PXM/da
9WWSJEmSJEmSJEmS5CyqL5MkSZIkSZIkSZIkZ1F9mSRJkiRJkiRJkiQ5i+rL
JMfmww+V/O6aHar/y+dLdoM316wGP1RzNPjVmugPa1aD2ee27f8PanaDh14q
2Qz+6omS3WDbz/1ezXbw5cMl0aGOL0mSJEmSJMfpC8+XrAdvqDkdfOzRkteC
83M1wWZ+bjl4Y81OsG3/zcuRnIrqywfTsdXjyP10Pv/m2ZJLwROLNcHDh0q2
ZjZr589/KrkUbNv/Rx4uOR3M6uPfrVkKtv3c5vp9Kfj4YyXbwaGOL0mSJEl+
pWYneF3NXPD7NTvBofqT/fuuxtdjG6dzWJ0PH8yunr+YyvMaXZnNa2V151de
LtkJZnXVJ39dshxcOlMT7Kr/5uVIjk315YPpfr1+4MF0bOfznTUng9l1bNv2
s3YeerDkZDBrp7ne3Ao29yeeDWbtZNe92X2Pt9ZcCT71ZMlKcKjjSJIkSZJt
feMPJcvB++4tuRjs6nN/XHMxmPWn7/0wtnE6OUV9j8ZpVo9unlc+EszaMS9H
cuqqLx9M+74f9dlnSi4Gv14zH2zWI3k1mH3u2aWSreC3a04Fn3i85Eiw6e+p
4LvvlGwFu9o/P6q5EGzWL3k9mO23pn64Hhz6/Nprx3a9fVPN68H33i3ZDrZt
/9zZku1gts521s6Xa7aDn6pZCmbtZN+77H747L5K6+2QJEmSnLq31WwFP1Kz
EPztKyW7waz97N8vHKsJNuO5rWDWftvx9dieo8zayeadbq85Fnz7asl6sKv+
3HtPyYVgNq7/Ws1c8PnnStaCzXZcCGbv4bq+Zj7Y1X3yfR/f/TrPNrb5LjZ+
vGY9mM0zZ+2YlyM5ddWXD6Z9X9f9S81yMKuLtf3c7O/gPXeXrAabevJOsLl+
XA029eqlYFf7549vlqwGs/vfflqzFvxGzUJwr8+noR3b9XZzn+CrwV/U7Abb
tp+1k31u2/ab8etyMPvefbZmJfiXt0s2gs37alaCQx0vkiRJkuzbrF7QrHe1
Hsza+ULNerCrdVn36/rYWV3+xRdKNoLHF2qCXe2HbF7o/LmSneCDD5SsBbP3
xradd8rab56zXwgOdT4ctHk262MP6ydrNoPZfSnZ/UVtP9e8HMmpqL58MO37
uq7v9wpl93O2/dzsPq7sfs6u9k+T3WDWTjYO6qqeOHXHdj08leeX29rc57sb
zP59dt2brc/TjJvPBb9TcyZ4S83l4F4fb5IkSZL83/xZzUawqVecCWbtnDld
E/xizUawbT+nUl/+RM1GcPF4TbCp578WzPrZ1XxL3/NCU5l36vu8Gtv2duXY
5rv2q81+3Qgem68JNufFlWDf/TQvR3Jsqi8fTKcyXsicen25q/3gOnOc+2Eq
71/uytOnSjaCb75RshLM5lWuq1kJZuO+O2oWg3t9vEmSJEnyg/rA/SWLwew5
5b7HQVOZL8rWN872W1Z/zJ5vncp+mEr7Y2tnqPan3p+p+/matWC2Pnxz/86V
4NDb8Y+alyM5lOrLB9OpXNdlZvdfNfeRrQaz8UK2nnbf62N3tR9cZ45zP9x/
X8ml4InFmuDhQyVbM5u18+c/lVwK9r292Tps2XtbsvF+9v3NPje7L32o406S
JEmSbW3qyZeDN9YcCfb9vFhX4+tsXa9snNu2/bt+WXI0mK13nc0L3X1XyUpw
KvNmU2l/bO0M1f7U+zMVm3XcLwaz55Hf+WvJZnDo7ZhV83Ikh1J9+WA6leu6
zKbeuxX8ds2pYDYua/p7KvjuOyVbwbHtn/16nZltV9921f/l8yW7wZtrVoPZ
8/iZ2XvDs8/taruycXpzX+dqMGsnW2cge+47+3vUrCuwHOzrvCRJkiTJrv1B
zW4wey6s7TrAbe1qvJyN47K6c9vP/UnN5eDc0Zpg837RuWDz3tQLwanMm02l
/bG1M1T7XfVnKvNjB22/ZWb3t7TdLvNyJMem+jJJchab+x83g129bz17r/QN
NVeCbd87Q5IkSZIkSU5R83Ikx6b6MkmSJEmSJEmSJElyFtWXSZIkSZIkSZIk
SZKzqL5MkiRJkiRJkiRJkpxF9WWSJEmSJEmSJEmS5CyqL5MkSZIkSZIkSZIk
Z1F9mSRJkiRJkiRJkiQ5i+rLJEmSJEmSJEmSJMlZVF9+f6++VbJGkiRJkiRJ
kiRJksGh65l7rfoySZIkSZIkSZIkSXIW1ZdJkiRJkiRJkiRJkrOovkySJEmS
JEmSJEmSnEX1ZZIkx+PDD5X87podqv/L50t2gzfXrAY/VHM0+NWa6A9rVoPZ
57bt/w9qdoOHXirZDP7qiZLdYNvP/V7NdvDlwyXRoY4vSZIk94djG0eQHI/m
JcxLmJcgOYvqy/vbr9TsBK+rmQt+v2YnOFR/sn/f1XXL2K5/OKzOhw9mV/vt
8KGSreBHahaC//3HkgvBoffHXju28/Y3z5ZcCp5YrAlmxz0za+fPfyq5FGzb
/0ceLjkdzMah361ZCrb93MceLVkKPv5YyXZwqONLkiTJxq7qL33btv9D79ep
9pPd6rhPy7EdL/MS5iVI7o3qywfTN/5Qshy8796Si8GuPvfHNReDWX/63g9j
u/4hp2jb71F2v+U9d5fMB7NxwdDbPRbH9jt2Z83J4AvPl6wH27aftfPQgyUn
g1k7zXhrK9jcn3s2mLWTjfuy+35vrbkSfOrJkpXgUMeRJEmSe+NQ1/NjG0eQ
nK5j+z0xL2FeguTeqL58ML2tZiuYPSf421dKdoNZ+9m/XzhWE/xUzVYwa7+r
+3KHWu8la+eGmleDt9ccC759tWQ92FV/7r2n5EIwWzfmazVzweefK1kLNttx
IZitP3N9zXywq+vDvo/vj2ouBJt1a14Pfr1mPthcn64H2/azK7PtfenFkivB
u+8qmQt+vmYtONR2TcWxjeNuqnk9+N67JdvBtu2fO1uyHcx+l7J2vlyzHWz+
/iwFs3a+XXMqmK2/kd1XbL0pkiTJg+nY6stjG7f2vX/Mz5ifGcN5PnXNS5iX
IHkwVV/m35v9/Wru81oPZu18oWY9uHSmJti2n/t1feysLv/iCyUbweMLNcGu
9sMf3yxZDZ4/V7ITfPCBkrVgs57Ka8Gs/VdeLtkJZu03z9kvBIc6H9ruz2x7
f1qzFvxGzUJwr8/X/217n3i85Ejw32ouBYfq/9Qd2+9Yc5/sq8Ff1OwG27af
tZN9btv2m/HfcjAbf322ZiX4l7dLNoLzcyUrwaGOF0mSJId1bPXlsY1bh9o/
5mfMz0xxfmYozUuYlyB5MFVf5t/7s5qN4CdrzgSzds6crgl+sWYj2LafU6kv
f6JmI7h4vCbY1PNfC2b97Oq6JWu/yW4waycbf/Xdft/7YWz7s6vt7cpse7O/
I9l9v824dis41HZNxbGN46Zyn3Bbm/vWd4PZv8/Gfdn6VM080Lngd2rOBG+p
uRzc6+NNkiTJa3Ns9eWxjVu72j/mZ8zPjHl7p655CfMS5iXIg6n6MmfxgftL
FoPZc8p31CwGu+rPVOrLWR0t22/Z9W12/+RU9sNU2h9bO0O133d/sr8v2fuX
Dx8q2QoOtb1jc2znw1Tec9SVp0+VbATffKNkJZjdx3VdzUowm8fo++8sSZIk
98ax1ZfH1n5X7ZifmVb7Y2tnqPan4tj2g3kJ8xIk90b1Zc5iU0++HLyx5kiw
7/uXurpuye5n66qeddcvS44Gs/WUsnFK837alaDr7W7bH1s7Q7U/VH+y9z0d
m68Jqjs3ju18uP++kkvBE4s1wew4Zmbt/PlPJZeCfW9v9t6H7L1F2fxVc16v
BrPPzZ6zGOq4kyRJ8oOpvrw37ZifmVb7Y2tnqPan4tj2g3kJ8xIk90b1Zc7i
D2p2g9l9Sm3XmWlrV9ct2Xme1Z3bfu5Pai4H547WBJv3XcwFs7qb6+1u2x9b
O0O1P7b+/KjmQvDDNceCU687Z/uzb7vq//L5kt3gzTWrwWz9qMzmOYPVYPa5
XW1XNu90fc1qMGvn+zU7wez+6uzv1FdrloN9nZckSZLsR/XlvWnH/My02h9b
O0O1P5TmJcxLmJcgOYvqyyRJku9vc//vZjAbl7VtP3t/0w01V4Jt37tEkiRJ
kiSnq3kJkmNTfZkkSZIkSZIkSZIkOYvqyyRJkiRJkiRJkiTJWVRfJkmSJEmS
JEmSJEnOovoySZIkSZIkSZIkSXIW1ZdJkiRJkiRJkiRJkrOovkySJEmSJEmS
JEmSnEX1ZZIkSZIkSZIkSZLkLKovv79X3ypZI0mSJEmSJEmSJMng0PXMvVZ9
mSRJkiRJkiRJkiQ5i+rLJEmSJEmSJEmSJMlZVF8mSZIkSZIkSZIkSc6i+jIP
gg8/VPK74ND9mqrZ+wW+XjMfbLv/HS8y+qWazeCZ0zXBG2uOBK+vmQ/eUnM5
2LafP6jZDR56qWQz+KsnSnaDbT/3ezXbwZcPl0SHPp4kSZIkyf3pt2tOBfue
7zIeJ0nuperLB9PseibzUzWvBT9WcyL40oslV4Jd9XOodth47z0lx4K31lwJ
tm3f8RpW+39Yb6vZCt5zd8l88MRiyeXgV2p2gu++U7IVfOLxknPBtv1/5OGS
08Gba1aD361ZCrb93MceLVkKPv5YyXZw6ONMkiTJ/Wk2nmrqLWeDfX/uUO3w
g2n/T8uf1FwO3llzMtj38TUeJ0nuperLB9O21zPZ/W//VnMpeEfNYnAq28v3
t7k+fTW4fL5kN9i2fceLB9mszvu5mkvBofrZjDu3gm3nzbLxb3b/c3Yfy1NP
lqwEh9o/JEmSPJhm49lj8zXB/1NzJdjV5w69P8j9YHb/dva9bp7L2Qp29T01
HidJjkH15YNpV9czf3uvZCfY3Kf2WnCofmbtNOs3rwazdWW/VXMiePhQyVaw
bT/PLpVsBbN1dZq605Fgs32ngtlzi233W1f2fdzbtn9DzavB22uOBd++WrIe
zMYdX605Gnzv3ZLtYNvtytrJPjfrZ9/fux/VXAg26zC9HszWXX/owZL1YFfn
yVB+rWYu+Mc3S1aD83M1wey4N/v1fPD7NTvBrJ9frtkONuPmpWDWTvb7lp2f
2f3V1t0iSZLkGMzGQdn7aLLr4a4+d6h22rbf1Xi8bX+ycc0/15wOZvNdY9v/
xuPd+uSvS5aD36i5GGx7XNr2x3icJDkG1ZcPpn0/v9ysz7oY7Lufbdtp7itc
DTZ12p1gsx7tarCr9WSydrLPzfqZ1c2bevVScKjjMlT7mb99pWQ3+OILJRvB
4ws1waz9pr63HHzm6ZILwbb9z9r5l5rlYN/7P2snq5O+8nLJTvCnNWvBZty2
EOz7POnbbH2A5nf3fDAbx2U2deNzwQ/VLAfb9j9rJ/t9+2zNSvAvb5dsBJv6
+Upw6ONGkiRJFrNxUDbevP++kuPBf69ZD7b93K763/d+63s8npnNk7z5RslK
MHvOoqv9YDw+rNl6Atl619l52/a4dNV/43GS5F6qvnww7er502wd7E/XbAe7
6mdX7bR9Xi/798312tFg235m7bTtZ9vnZ4c6Ln23/4majeDi8Zpg9p7xrD9Z
HTDrz5dqNoPZ/cDN/cK7wV/URLN2vlOzGex7/2ftNNkNZu1k47W2+38q3lTz
evDc2ZLtYNv2s7rz3NGaYFfblZ3P2b/Pxr/ZOl3nz9UEm/P9TDB7fmSvjzdJ
kiT3l23HU02daj2YjVuz8dHY6stjG49nZvMw2bxKX+dN1/vfePyDmdWR3/lr
yWawbftD3b9hPE6S7EP15YNp2+uZxx8r2Q42/y+uw/z8cyVrwb772bYd9eX9
XV/O6q1fqFkPZuOs7D7ervqZrUf0+Zq14MdqotZV25txWd+eOlkT7Gq9qaHq
y5mnT5VsBLPnBX5WsxG8rmYlmM2HZPdH7fXxJkmS5P6y73Fic916OTi2cdxU
xuMHrb48tn6Oza6ex+nKvrfXeJwkeS2qLx9Mu7puyerOC8dqgm2fv+v7ujpb
Hzsbvwy1PnZX/Txo62Pf9cuSo8Fsfa1sf959V8lKsKt+PvhAyVrw5ImamZ3K
fR3Xen7sVftDmd3H2zzHfD7Y1frYn6lZDva9vUtnaoJZ/7P5qOx3Mvvc7LmJ
oY8/SZIkp21X45Tmfb9Xgs117nxwbOO4qYzHm/X2zgZvrlkNNuOw3eC1njdd
73/j8XE6tv1mPE6SvBbVlw+mfV/P/Om/Sy4Gm/rz2WDf/czayd5TfGPNkeC3
ak4EDx8q2Qq27WdT790KZvctZ/3Mnit/952SreDYzp+u2v9JzeVg9pxm896Y
ueDtNReCXfUzW6eouS9gfmbbvven7/0/lfNkKn645kIwO5+z9Qqy9zi3XSeh
rdk80vU1q8Gsnayf2Tpm2fVM9j70oY8zSZIkp23f45RmPdqzwbGN46YyHv9y
zXaweY7zVPDRR0p+Hxzb/jceH6dD7TfjcZJkH6ovkyTJvm3ug94MdlXXztbH
uKHmSrDt+6dIkiRJkpyixuMkyT5UXyZJkiRJkiRJkiRJzqL6MkmSJEmSJEmS
JElyFtWXSZIkSZIkSZIkSZKzqL5MkiRJkiRJkiRJkpxF9WWSJEmSJEmSJEmS
5CyqL5MkSZIkSZIkSZIkZ1F9mSRJkiRJkiRJkiQ5i+rL7+/Vt0rWSJIkSZIk
SZIkSTI4dD1zr1VfJkmSJEmSJEmSJEnOovoySZIkSZIkSZIkSXIW1ZdJkiRJ
kiRJkiRJkrOovkySJLvySzWbwTOna4I31hwJXl8zH7yl5nKwbT9/ULMbPPRS
yWbwV0+U7Abbfu73araDLx8uiQ59PEmSJLk/ffihkt8Fh+4X6fwkp2H2PW3r
1Ps/1Paa1+IYVF/e336lZid4Xc1c8Ps1O8Gh+pP9+65+n8f2d43D6nz4YHZ1
ffX4YyX/FfxYzYngJ2o2gl1t1z/VXAoem68J3lDzanC/nle31WwF77m7ZD54
YrHkcjD7nX/3nZKt4BOPl5wLtu3/Iw+XnA7eXLMa/G7NUrDt5z72aMlSsDnf
t4NDH2eSJEm2s+046FM1rwW/VXMi+Ne/lFwJdtXPofcf6fwk96dj+16PrT9t
Na/FMai+fDB94w8ly8H77i25GOzqc39cczGY9afv/TD1vyPkGOzqe3RTzW6w
mUdZC36tZi7Y9nOff65kLfiRmoXgSy+WXAn+9pWS3eDQx6cvszrv52ouBYfq
Z3O9vBVs7q88G8zaya7bs/s2b625EnzqyZKV4FD7hyRJkt3adnzUZDf4p/8u
uRh84P6SxWDf/STH/D0iOX7H9r0eW38yzWtxzKovH0yz586yekrbukn27xeO
1QSb+3O3gln7bX//x7auRdZO9vzj7TXHgm9fLVkPdtWfe+8puRD8UM3RYFbv
y+p3zXZcCH615mgwWy/3hedL1oNd7Yeu2vlRzYVgsx7J68Gv18wHH3qwZD3Y
tp9dOVR9+Rs1C8G2n3tnzclgdt4OtZ/HZvZ9/+ObJavB+bmaYPZ9b74H54Nt
19n4cs12sPk7sxTM2vl2zalg9vx1dl+o9YJIkiT3t12Nj86fK9kJfrrmv4Jd
9XNs49azSyVbwez6vLnv9Uiw2b5TwWzdpLb9zMaP36w5Hmye93ot+OGaY8E/
/6nkUrCr494ct9Vg9j6j7Pn6w4dKtoLOz2HPz2x/PvtMycVgtt+yecu2n9u2
/323P5Xv79QdWz0368/c0Zpgtu7i/feVHA9m94m1rbOY1+KYVV/m35v9LjX1
lvVg1s4XataDS2dqgm37uV/Xx87+vrz4QslG8PhCTbCr/ZDVibJx7oMPlKwF
s+uurP1XXi7ZCWbtN8/ZLwSHOh/a7s9se39asxbsqq7alX3fv5GNZ7P76Nr2
P7tf4rM1K8GsPx+tWQw27xm+EhzqeHVlc5/jq8HmfS/ng9n1Z2ZTNz4XbI7P
cvCDHffYTnb9nJ0Pf3m7ZCPY1M9XgkMfN5IkSfZr23Fl9v7EoZ5fHtu4Nbs+
b97Dsxps6nU7wax+2tQDl4Jt+5ndN5vN5/yiZjeY1ROb9paDXR335r1Pq8Fs
f2b7v6v1V52f3Z6f2f78l5rl4LmzJdvBrj63bTt9tz+V7+/UHds8fFuz9Uay
dQ6b+1ZOBrt6/te8Fseg+jL/3p/VbAQ/WXMmmLXT1E9OB79YsxFs28+p1Jez
98MuHq8JZu9dyvqZ1Xe62g/Z382snaw+3nf7fe+Hse3Prra3K/t+fjlbtz+7
767t52b14myd5+z+iux9zdn7o4c6Xl3ZHJ/Xg12NQ7O6c3YfaVfb1dznvhvM
/n123Z6tL9ScL+eC36k5E7yl5nJwr483SZIkZ7Pt/bTZPEA2jsjmsbvq59jG
rdn9wG3XNcqez8rqSm37+eYbJSvBE4s1wew9cV3Nm7U97m33Z/bvs+PVVT+d
nx/s/OzquHf1uWNrfyrf36k79fpyW7P7Dbr6ncw0r8W9VH2Zs5jdH5s9p3xH
zWKwq/5Mpb6crSeT7bfsOjm7D3Mq+2Eq7Y+tnaHaH1t/+l4XLnv+/W/vlewE
s3ayf5+tn7PXx6lrT52sCXa1Ts5Q9eXM06dKNoLZODS7X+u6mpVgNu/R999T
kiRJduvYxmtD9bOr9qdSv8vM1otu1p+7GMze39Tcz3s+2NVxmUp9uavjctDO
z6F+l7I6ftv1gbPnEfrerrF9f6fuVP4+dmW2rnX2vrm++2Nei32ovsxZbOrJ
l4PZc39935fS7fOS8fm7rt4Xc9cvS44Gs/VVsjry3XeVrATVQ7ttf2ztDNX+
UP3JxgvZdXtX68Jl61BlzyNndeTs3588URMc6nh1ZfY7n42bulof+zM1y8G+
tzd7v0PW/+w+omzduexzs/Uuhj7+JEmS/J8d23htqH521X72XFV2XZ3Nq2Tr
FXe1/vCTvy5ZDt5WsxXM1tfN3gOVzS91dVy62p99r499redl1+1P5fwc6nfp
IzULwWzd8uz5gqxO0dV2TeX7O3XH9vcxm3d69JGSzWD2Potmfmgz+M81p4NN
PXkl2Pf2mtdiH6ovcxaz38/s/pO269W0tau/R9l5ntWd237uT2ouB7Pn75r3
GMwFb6+5EFQP7bb9sbUzVPtd9aet2fPI2ftKvlSzGWzb/+y+4mxdl+x94t+q
ORH8j5rN4FDHq28/XHMhmP3uZfdjZ+9x7nv9ruz+n+trVoNZO1k/s/uZs79H
3tNEkiQ5Lcc2Xhuqn12139TTtoLZ+5Ky5yCazz8VzNYvbdvPZr78UnDhWE0w
G1d+s+Z48OpbJWvBro5Ldt91tj+z8W9Xz2s4P7s9P4f6XcrqU9l6j806vq8H
n3m65EKwq+2ayvd3bHY1H9jWrvqf3efw0ZrFYHbcs/Pk6adKVoN9103Ma3Ev
VV8mSZJszO477aqunb2f+oaaK8G2780hSZIkycyp3P9AkvxgmtfiXqq+TJIk
SZIkSZL7W/VlkiTZlerLJEmSJEmSJEmSJMlZVF8mSZIkSZIkSZIkSc6i+jJJ
kiRJkiRJkiRJchbVl0mSJEmSJEmSJEmSs6i+TJIkSZIkSZIkSZKcRfVlkiRJ
kiRJkiRJkuQsqi+/v1ffKlkjSZIkSZIkSZIkyeDQ9cy9Vn2ZJEmSJEmSJEmS
JDmL6sskSZIkSZIkSZIkyVlUXyZJkiRJkiRJkiRJzqL6MkmSHJsPP1Tyu2t2
qP4vny/ZDd5csxr8UM3R4Fdroj+sWQ1mn9u2/z+o2Q0eeqlkM/irJ0p2g20/
93s128GXD5dEhzq+JEmSJKNfqtkMnjldE7yx5kjw+pr54C01l4Nt+2m8Q5Lk
tau+fDDN5uE/X7MW7Opzs/bHVhcgD7K+j5yiYztvf/NsyaXgicWa4OFDJVsz
m7Xz5z+VXAq27f8jD5ecDmb18e/WLAXbfu5jj5YsBR9/rGQ7ONTxJUmSzOzq
PsmunDtaE+xqu4be3xzG22q2gvfcXTIfbMYrl4NfqdkJvvtOyVbwicdLzgXb
9t94hyTJa1d9+WCajQu+WXM8+NtXSnaDWfvZv8/aN04hSV6LY/s7cmfNyeAL
z5esB9u2n7Xz0IMlJ4NZO828yFawuY/+bDBrJ5ufye7Pv7XmSvCpJ0tWgkMd
R5IkybH53rsl28FsviW77hp6Ozhtszrv52ouBYfqp/EOSZL9qb58MM3m4R+4
v2Qx2Pa55uzfZ89b9V0XyNq/oebV4O01x4JvXy1ZD7btz89rtoLfqjkRzNYL
+nrNarCr/Zm186OaC8FmfaDXg02/5oNN3WM92Laf586WbAez+0ubcc+R4OLx
mmAzbrgSbNvP558rWQtm8wDNfayvBT9ccyzY1XOLfZ8/bdsZqp/33lNyIZit
Y/y1mrlgdtyb35ULwWw95Gx9sK7qlVN3bPXlm2peD2bzgW3bz373svMza+fL
NdvBT9UsBbN2vl1zKpg9j5D9PlsXjiRJsrHJbvDUyZpg3+vRHbR5huw6+Z9r
Tgez8fvYxildmY1///hmyWpwfq4mmI1/m+N8Pvj9mp1g2+NovEOS5LWrvnww
za5vv1izEczqX9n7R7J/31x/bQSHut7OnrN+8YWSjeDxhZpg289dOlMTPDZf
shps6p87wWadodVg3+O+bLzwysslO8Gf1qwFv1GzEGzbz+y+2Z/UXA5m4/Ss
TvfRmsVg235m46bsfPtFzW4wWyeqaW852NVxH6qdofqZnefnz5XsBB98oGQt
mM0ztP0eZe3fd2/JQrCr/TwVxzZv09yH8mow+163bT9rJ/vctu03denlYDZP
8tmaleBf3i7ZCDbzSSvBoY4XSZLk2GzGGeeCWR227/4ctHmGs0s1wTffKFkJ
/u29kp1g38dlKLNxR/Me4/PBrK6a2dSNzwWzcUrb/hvvkCR57aovH0zbjgu+
U3Mm2LwP5Gww+/dd9SfzEzUbwey51Ob+xNeCWX+6mrfP7r/9z5qdYNZOdt9m
3+O+rD6btZPV8bvan3f9suRosKv3VXXVz2wcmj3X/8YfSpaD2X0gbfvT9rgP
1c5Q/ezqPJ/K92jqjq2+PJXnl9ua3VeW/ftsfiZbRy6bR82uK26puRzc6+NN
kiT5Qc3m37I63VD9nMr4q9v7LeN1dfa86lDHZSiz8U42TmnbflZ37up94pnG
OyRJzq768sG07bjgP2o2g48+UvL7xM1gV/3JzNZH+kLNejAbv2T3x3bVz6nX
l9u203f72XPB2fV8V/3vysOHSraCzfPxF4PZe12b8dz54FDHJRvXt32fe7Md
u8GDdp4P1f5UHNt+mMr7l7vy9KmSjWB2X83PajaC19WsBLPfjTtqFoN7fbxJ
kiT/N9/6c8nlYLbublNP3g0O1f+DNv5SX35/s3Xau1r/eaj6cqbxDkmSUfXl
g+nY5uG76k/2HGu2/nBWR777rpKVYFf9bOrtZ4LNe3QvBLN+Pv1UyWrwoI37
srpqZnY/7adrotn62237+eSvS5aDt9VsBbP1b2+tuRLMzv+hjstHahaC2Tpm
2brT2d+jg3aeD9X+VBzbfrj/vpJLwWy9guw+k8ysna7ew97W7L0P2bxQdt9X
9p6I7HOz9UmGOu4kSZI31FwJNteDx4NTqVcetPFXMx9wNnhzzWowuy+6r+Mx
tNlztdk8TFfrY3+mZjnY9/Ya75AkGVVfPpiObR6+q/5k79vN7m9s3n8yF7y9
5kKwq35m9cSP1ZwI3lhzJPivNSvBpv55JDjUcem7/Ww8nq07lD3v3BznY8Gs
Htq2n8044FJw4VhNMHtvb/Z+86tvlawFhzou2XgqW2cge67/madLLgQP2vzG
UO0PZbZdfdtV/5fPl+wGs/mo7PmIzOZ7sxrMPrer7cru17q+ZjWYtZOtv5E9
951dl3b13nmSJMmuzOYfhrq+Hdu4aSrjoy/XbAeb51ZPBbP1/fbreC0ze24i
+15k8zPZ+vDZOKKr/hvvkCQ5u+rL5PjN1sX6cc3FYLZO0dDbQZKcts19+pvB
ruZ5svUlsueA2r4fjSRJkiQzjXdIkpxd9WVyPGb3tWbvsf1ozWLwkzWbwaG3
jyRJkiRJkiRJktNWfZkkSZIkSZIkSZIkOYvqyyRJkiRJkiRJkiTJWVRfJkmS
JEmSJEmSJEnOovoySZIkSZIkSZIkSXIW1ZdJkiRJkiRJkiRJkrOovvz+vvPX
kk2SJEmSJEmSJEmSDA5dz9xr1ZdJkiRJkiRJkiRJkrOovkySJEmSJEmSJEmS
nEX1ZZIkSZIkSZIkSZLkLKovkyRJkiRJkiRJkiRnUX2ZJEmSJEmSJEmSJDmL
6sskSZIkSZIkSZIkyVlUXyY5lA8/VPK74ND9sl10fMlh9P2i84Ek916/t3Se
kCRJsq3qyySHcirj07b9nMp28YPp+JK+X9wbnQ8cw/mWOT9XE7z/vpJLwexz
b6i5Ejw2XzOzWTs+l35vbW9XGheTJEny71VfJsfvfh2X2S5OUceX9P3i3uh8
4BhcPl+yG3zxhZKN4BOPlxwJZu3fWXMy+K2atZnN2vG59HvLrtyv58l+3S6S
JMm+nXp9ubnu2wh22368zvzVEyXngzfVvB5cPF5yKZh97vPPlawFv14zH8zm
MZ5+qmQ12HZ7v1azEnz0kZLfB2+puRz8as3RYNvr+bHtn+tqVoKPP1byX8F7
7i5ZDbZ9bmKocVB2PmfnfzMPdz7YVf+zdh57tOS14GdrVoJt2+/q3zf773jw
9KmSjWB2/vc9z/bA/SWLwU/UbMxs1k5X/Zz6+dBVO0P9Tn6/5lww+3sxlfmc
oc6rtn9/hzrufe/nvq+7hjrufX9fhjofxnad0NYTiyWXg833b25ms3banm9d
XWf2vd/abldX36OhfPtqyXqwOc6Lwayd7HvXfD92Z7ZtXfugfW5X9j3OzRzb
9e3YfifbXi9N5e9pVw71d3ls+3kq8y0kSZJTcSr15Wwc96mapWBzvbkabLIb
zD43u5586cWSKzM7d7QmmH3u3XeVzAXbXvd+sub3wbbb+9CDJevB375SshvM
tvf/1FwJtj0fxrZ/bq25Emza2wzeWHMk2PZz+/q+/W9mx7ft96Ltdj3zdMmF
YNv5nK6Oe1f//iM1F4NP/rpkOZjVkbPxeFfH/XM1l4JZfSQza6dtf/br+dBV
O0P9Tn6jZiF4R81i4uXgtZ6vH9SxnVdt//4Oddy7cqjrrqGOe9/fl6HOh6Gu
E7qyqd/OBdv2P6untD3/+77O7Mqhvkd9m/0O315zLHjopZLNYNb+QavzTr2+
3Pc4d2zXIdm/H9vvZNvrpalcV/d93vb9d3kq+3ls8y0kSZJTcSr15e/VbAc/
XnMy2FX9Ymz15aaOtB7Mxk1dbW/bdoaqL09l/7Rt55GHS14NvvJyyU6wbX/a
OtT4NJsvzeZds3UL+x4Xt/33n67ZDmbPJTX154VgV+d5ZlMf3gl+qOZosHm+
8PVg1k7b/kzlfMj6mdUFsvcJdjU/0/fvZHYf13O/KbkcHFsdYSrn1diOe1cO
dd011HHv+/sy1Pmgvtxt3aRt/4fab0N9j7ryn2ouBbP3//5HzWaw7ecOtV70
Qfvcrux7nDuV65CD9js59eurqdeX+97PY5tvIUmSnIpTqS+fO1uyHXz3nZKt
YHY93PZzs+vhbJ3G7D7q3zxbcimYfe6/16wHs7pSU394NTjU/Hbf64ZNff98
sPrj2WA2Dmrbn7Zm53N2/ne1vlb2PG/2udm6cGOrL2d+tGYx+M2aS8G+j3vm
+XM1M9vV507lfMjWZ8vuH+iqn2P7nczWJ2yOz7lgX+frfjmvxnbcu3Ko666x
Hfeuvi9DnQ9DXSd0ZbZea1ZPyexq3de2/R9qvw31PerK7HO7MrufJLuvLKtr
Z2btZNt70D63K/se547t71H27w/a7+TUr6+G+rs8lf08tvkWkiTJqTiV+vJQ
DnX9T/LgmD0vk81T/e29kp3g0NtBkiRJkiRJkiT3v+rL76/6Msm+ze6LXjhW
ciE4dH9JkiRJkiRJkuTBVX2ZJEmSJEmSJEmSJDmL6sskSZIkSZIkSZIkyVlU
XyZJkiRJkiRJkiRJzqL6MkmSJEmSJEmSJElyFtWXSZIkSZIkSZIkSZKzqL5M
kiRJkiRJkiRJkpxF9WWSJEmSJEmSJEmS5CyqL5MkSZIkSZIkSZIkZ1F9mSRJ
kiRJkiRJkiQ5i+rLJEmSJEmSJEmSJMlZzOrIP6m5HHz4oZINkiRJkiRJkiRJ
kuQBM6sjD133JkmSJEmSJEmSJEmSJEmSJEmSJEmSJLl//H88GtcR
    "], {{0, 478}, {324, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{324, 478},
  ImageSizeRaw->{324, 478},
  PlotRange->{{0, 324}, {0, 478}}]], "Output",
 CellChangeTimes->{
  3.7213609390700035`*^9, 3.722664079433476*^9, {3.7226641786886835`*^9, 
   3.7226642026456633`*^9}, 3.7226651144691234`*^9, {3.722665151525734*^9, 
   3.7226651774980583`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1498, 932},
WindowMargins->{{177, Automatic}, {18, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 79, 1, 134, "Title"],
Cell[CellGroupData[{
Cell[684, 27, 107, 1, 95, "Chapter"],
Cell[CellGroupData[{
Cell[816, 32, 119, 2, 45, "Input"],
Cell[938, 36, 53293, 1040, 2368, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54268, 1081, 137, 1, 65, "Subsection"],
Cell[54408, 1084, 3787, 79, 276, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58244, 1169, 91, 1, 95, "Chapter"],
Cell[58338, 1172, 18829, 348, 134, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77204, 1525, 99, 1, 95, "Chapter"],
Cell[77306, 1528, 28334, 525, 193, "Input"],
Cell[CellGroupData[{
Cell[105665, 2057, 1830, 43, 186, "Input"],
Cell[107498, 2102, 227, 6, 78, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107774, 2114, 94, 1, 95, "Chapter"],
Cell[107871, 2117, 7168, 133, 75, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115076, 2255, 105, 1, 95, "Chapter"],
Cell[115184, 2258, 8927, 164, 75, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124148, 2427, 91, 1, 95, "Chapter"],
Cell[124242, 2430, 4752, 89, 75, "Input"],
Cell[CellGroupData[{
Cell[129019, 2523, 866, 15, 68, "Input"],
Cell[129888, 2540, 50338, 830, 739, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

