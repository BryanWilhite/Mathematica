(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    279208,       8751]
NotebookOptionsPosition[    230756,       7265]
NotebookOutlinePosition[    239592,       7488]
CellTagsIndexPosition[    238953,       7470]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCEFxAJADBL8//8/
Qfzo0SP2GzduCF29elXs/Pnz0sgYn747d+5wA9VoArE/EB8B4uPoGJu+Fy9e
MF+4cEENKB8AxBeB+AMQ/wXif+gYi1tBdvoB8QUg/ghV9x8XRtb7/PlzFqje
t1D7cOrDpv/ixYvqUHuJ0ousHxpWAVA3E6UXWT80nC8S8i82/Q8ePOAgx26Y
/uvXrwsD2UdJ8Tey/kuXLolD0wNJbofpB6YVSUr0n4ek5QHTT6n7KQ0/SuOP
0vRDafqlRv6BxgPZ+Ret/HhHrBl4yi9QWHwiFB7Yyk+QO6B+CTxPYvmJjG/f
vs17nozyG1f9cR6t7gBhAPeiQ4A=
         "], {{0, 26}, {16, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2d9OVFcUB2DSNmkfQRFEiRQ1gCK1vW4fwT6BJu1tE9uk8fUUERE9aECC
qLGYEmKkErWxtont2mGdcDLVOpNgZijfJB9hzp+99j6zb9b5Hb3ww7nvP+rr
6/vxs/hz7vzPX1+8eP7St5/El28u/fTdhY/jn/6w8GlfXzlYVdWhDgyEwXT4
HQYbBho6qQMAAOxt/Q0HWxxo0TzX3xij7juGwpFwNAyHY2EkfB6OhxPhZBgL
42EinAqnw2SYSl+Es+HL9FWb6uvP5hj1eJNZ41TWHM85nMw5Hc85juSch3MN
R3JNdf/UfGbtPqf6WdW6/XsDAADsV7vd/7b2vqPV2/veuuc9k6Za1Mfr3vVt
feto9e+eVb9KL2tmz81M+n25dadZ9bU2zYXbYSmshNXwoOF+uJfn7obFcKfa
/twMN8L1MNtBTQAAYO+ZSVfTdLqSLreoj0/n9eXe0jeUHmQ+3AoL1XZ/UfqR
5Wq77yg9yMPwS3gcfg0b4Ul4Gn4LW+F5eBl+D6/CH+F1+DP99Q71+dd5z6sc
42WOuZU1nmbNjZzD45zTw5zjSs55KdewkGuazzXONp5Xu8+pflb185rpgd8d
AABgv/kQ/W/J4krGVvrIkruVDO5RWAvr1U7fuxmeVTt9b/Ei1d+38prNaqdv
Xc+xHuXY97LWYtbWr9Jryj4sGXPJmkvmXD7l/UrZsyWTLu9dyj4u72Ca2fVq
nivvY8renuug5ps2/b2L2q0JAADwX3azT/kQuv18AAAA2Pv0rOxn3djz3X6f
BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADsHW/a1I2aAAAAAAAAsJ91OyOEburGnr/W
prlwOyyFlbAaHjTcD/fy3N2wGO5U25+b4Ua4HmY7qAkAAAAAAAC9aCZdTdPp
Srrcoj4+ndeXe0tuVjK4+XCr2s7iSsa2XG3nbiWDexTWwnrYCE/CZngWtsLz
9CLV37fyms28ZyPHWMsxH2SN5ax5O+cwn3Oabayv3XXVa6vXN9MDvxN7W9mH
JWMuWXPJnMunZNBlz5ZMumTTZR+XrLqZXa/muZJtl70910HNQx0YCIPp8DsM
Ngw0dFIHAAAAAAAAel1/w8EWB1o0z/U3xqhzt6FwNAyHY2EkjIYT4WQYC+Nh
IpwOk+FMmmpRH5/Mayfy3rEc60SOPZK1hrP2ULWT9zXX2O666rXVuv378P/S
zJ6bmfT7cuuOsup/AFmW9vs=
         "], {{0, 26}, {2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lstOwkAUhhthQUJcuUBl5cr4GPoABvEJINGtCZoYng4Il4Z7gXAJYUHY
QAi3GlYQPZ5/4pCm0pYC2uSDaXvmn5lzzpzpVfQl/HyiKMqrj3/CkffbWCwS
f/TyzV387Snq4cYlc87gYbVaDbpB07SLRqMR6Pf7PiJSnOA+6h7kmBBz0+12
Tx30v/bgk9GZOvPAa7oejUYeC306AIz1wWjM/WAw8B9ZX4L1TDHGcDj02ulX
KpUNbt79jKHBV1b66Fcul3fCYgzEJNTr9fxmfaldKpWoUChQPp8X/8ViUWB8
BhuLMRCPGvJqmz76QWOxWFCtVqNsNku5XE6AdqfToclkImxga7cGuT/M+uw/
ms/ntF6vqdlsUjKZFKCNC/pynTZxyLbb7bNt/sHcMpkMzWYzoVev1wW4xuOx
WAdsbGIAH6ncJ7BNH/6FRjqdJl3XSV7T6VSsA76CDWxt9oSKOmLOH/RBLKEP
LVVVN/qJRGKjDxsnfSZoN3/4CPNfrVa/5n+IvtH/iDHu9/G/2T/G/JT5A41U
KiXm3Wq1xBhcx5zy0zK+Mj+Xy6XIf5n7EuQ/9sYh+Wneqy73r+3+2rX2OPh+
a31wqpHG5xbatvXtCDjW5wO1Z9UdzheXyPMRPrc6H49yvpvn/Y/fJ3/6ffUN
AyH/6w==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{
  3.6150543997457*^9, {3.615063642113493*^9, 3.615063644289524*^9}},
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell["Wolfram Language Fundamentals", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.577805421094503*^9, 3.577805428743331*^9}, 
   3.615048452106678*^9, {3.6224091081493483`*^9, 3.62240910878858*^9}}],

Cell["Professor Richard J. Gaylord", "Subtitle",
 CellChangeTimes->{3.615048512443569*^9}],

Cell["\<\
Wolfram Research
training@wolfram.com\
\>", "Subtitle",
 CellChangeTimes->{3.577805135164115*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.577805247204673*^9, 3.577805279882493*^9}, 
   3.615048926513299*^9}],

Cell["\<\
In order to use Wolfram Language efficiently, you need to understand the \
details of how a Wolfram Language program is executed when it is entered and \
run. This tutorial is intended to provide you with the necessary background \
for writing your own code in an optimum manner.\
\>", "Text"],

Cell["\<\
Note: This material will also make you more comfortable with Wolfram Language \
which often seems obscure, even enigmatic, when first encountered by someone \
whose programming experience is with one of the traditional procedural \
languages.\
\>", "Text"],

Cell["\<\
In this note set, the following aspects of Wolfram Language are emphasized: \
the nature of expressions, how expressions are evaluated, how \
pattern-matching works, creating rewrite rules, and using higher-order \
functions.\
\>", "Text",
 CellChangeTimes->{{3.615668276851089*^9, 3.6156682916901503`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Summing the elements in a list", "Subsection",
 CellChangeTimes->{{3.577805220052259*^9, 3.577805241155161*^9}, {
   3.577805350735672*^9, 3.5778053777832823`*^9}, 3.615049034437118*^9}],

Cell[TextData[{
 "Consider the data structure ",
 StyleBox["{1,2,3}", "MR"],
 ". How can we add up the elements in the list?"
}], "Text",
 CellChangeTimes->{{3.577805310736993*^9, 3.5778053123284407`*^9}, {
   3.577805382040038*^9, 3.57780539307915*^9}, 3.615049048124607*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"Plus", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[1]:="],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.615054450750119*^9},
 CellLabel->"Out[1]="]
}, Open  ]],

Cell["What\[CloseCurlyQuote]s going on here?", "Text",
 CellChangeTimes->{{3.577805310736993*^9, 3.5778053123284407`*^9}, {
   3.577805382040038*^9, 3.57780539307915*^9}, 3.615049048124607*^9, {
   3.615049125405568*^9, 3.6150491265557537`*^9}, 3.615049386197095*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Everything is an expression", "Subsection"],

Cell[TextData[{
 StyleBox["Every",
  FontSlant->"Italic"],
 " quantity entered into ",
 "Wolfram Language",
 " is represented internally as an expression. An expression has the form"
}], "Text",
 CellChangeTimes->{3.583513947301177*^9, 3.6150501788248034`*^9}],

Cell[BoxData[
 RowBox[{"head", "[", 
  RowBox[{
  "arg1", ",", " ", "arg2", ",", " ", "\[Ellipsis]", ",", " ", "argn"}], 
  "]"}]], "DisplayFormula"],

Cell[TextData[{
 "where the ",
 StyleBox["head", "MR"],
 " and ",
 StyleBox["argi", "MR"],
 " can be other expressions."
}], "Text"],

Cell[TextData[{
 "For example, if we look at two common quantities, a list data structure, ",
 StyleBox["{a,b,c}", "MR"],
 ", and an arithmetic operation, ",
 StyleBox["a+b+c", "MR"],
 ", they appear to be quite different, but if we use the ",
 StyleBox["FullForm", "MR"],
 " function to look at their internal representation"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]], "Input",
 CellLabel->"In[2]:="],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.615054450868043*^9},
 CellLabel->"Out[2]//FullForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"a", "+", "b", "+", "c"}], "]"}]], "Input",
 CellLabel->"In[3]:="],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.6150544509088306`*^9},
 CellLabel->"Out[3]//FullForm="]
}, Open  ]],

Cell["we see that they differ only in their heads.", "Text"],

Cell[TextData[{
 "The use of a common expression structure to represent everything is not \
merely cosmetic; it allows us to perform some computations quite simply. For \
example, to add the elements in a list, it is only necessary to change the \
head of the expression, ",
 StyleBox["List", "MR"],
 ", to ",
 StyleBox["Plus", "MR"],
 ". This can be done using the built-in ",
 StyleBox["Apply", "MR"],
 " function."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Apply"}]], "Input",
 CellLabel->"In[4]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Apply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\) or \!\(\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"@@\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]}]\) replaces the head of \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) by \!\(\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"Apply\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]}], \\\"]\\\"}]\) or \!\(\
\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"@@@\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]}]\) replaces heads at level 1 of \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) by \!\(\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\).\\n\!\(\*RowBox[{\\\"Apply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\) replaces heads in parts of \!\(\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\) specified by \!\(\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\). \
\\n\!\(\*RowBox[{\\\"Apply\\\", \\\"[\\\", StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"]\\\"}]\) represents an operator form of Apply that can be applied to an \
expression.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Apply"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.615054451161645*^9},
 CellTags->"Info3615029250-7810207"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"Apply", "[", 
   RowBox[{"Plus", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.616742289609109*^9, 3.616742293847711*^9}},
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{
    "Apply", "[", "Plus", ",", "List", "[", "a", ",", "b", ",", "c", "]", "]",
      ",", "Plus", "[", "a", ",", "b", ",", "c", "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"a", "+", "b", "+", "c"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.6150544512412777`*^9, 3.616742317471674*^9, 
  3.616742473971634*^9},
 CellLabel->"Out[5]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Changing a sum into a list", "Subsection"],

Cell["\<\
The obvious approach to this task is to do the same sort of thing that we did \
to add the elements in a list.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"List", ",", 
   RowBox[{"a", "+", "b", "+", "c"}]}], "]"}]], "Input",
 CellLabel->"In[6]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.6150544512781067`*^9},
 CellLabel->"Out[6]="]
}, Open  ]],

Cell["\<\
This works when the list elements are symbols, but it \
doesn\[CloseCurlyQuote]t work for a list of numbers.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"List", ",", 
   RowBox[{"1", "+", "2", "+", "3"}]}], "]"}]], "Input",
 CellLabel->"In[7]:="],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.6150544513294153`*^9},
 CellLabel->"Out[7]="]
}, Open  ]],

Cell["\<\
In order to understand the reason for the different results obtained above, \
it is necessary to understand how Wolfram Language evaluates expressions. \
\>", "Text",
 CellChangeTimes->{3.583513991722476*^9, 3.5947082788764057`*^9, 
  3.615050179593566*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Expressions", "Section",
 CellChangeTimes->{{3.577805247204673*^9, 3.577805279882493*^9}, 
   3.615050569850442*^9}],

Cell[CellGroupData[{

Cell["Non-atomic expressions", "Subsection",
 CellChangeTimes->{{3.577805220052259*^9, 3.577805241155161*^9}, {
   3.577805350735672*^9, 3.5778053777832823`*^9}, 3.6150505835231657`*^9}],

Cell[TextData[{
 "Non-atomic expressions have parts which can be extracted from the \
expression with the ",
 StyleBox["Part", "MR"],
 " function, and can be replaced with the ",
 StyleBox["ReplacePart", "MR"],
 " function. For example:"
}], "Text",
 CellChangeTimes->{{3.57780514613061*^9, 3.5778051683590727`*^9}, 
   3.615050735694808*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "7", ",", "c"}], "}"}], ",", "1"}], "]"}]], "Input",
 CellLabel->"In[8]:="],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.615054451374905*^9},
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "7", ",", "c"}], "}"}], "[", 
  RowBox[{"[", "0", "]"}], "]"}]], "Input",
 CellLabel->"In[9]:="],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.615054451429916*^9},
 CellLabel->"Out[9]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "7", ",", "c"}], "}"}], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{3.617371400572838*^9},
 CellLabel->"In[10]:="],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.615054451474793*^9},
 CellLabel->"Out[10]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "7", ",", "c"}], "}"}], ",", "e", ",", "2"}], 
  "]"}]], "Input",
 CellLabel->"In[11]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "e", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.6150544515298567`*^9},
 CellLabel->"Out[11]="]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Atomic expressions", "Subsection"],

Cell["\<\
Atomic expressions constitute the basic \[OpenCurlyDoubleQuote]building \
blocks\[CloseCurlyDoubleQuote] of Wolfram Language. There are three kinds of \
atomic expressions:\
\>", "Text",
 CellChangeTimes->{3.583514011908882*^9, 3.615050181456192*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "A symbol, consisting of a letter followed by letters and numbers (eg., ",
 StyleBox["darwin", "MR"],
 ")"
}], "ItemNumbered",
 CellChangeTimes->{3.615051222977891*^9}],

Cell["Four kinds of numbers:", "ItemNumbered",
 CellChangeTimes->{{3.615051233528818*^9, 3.615051277969491*^9}}],

Cell[TextData[{
 "integer numbers (eg., ",
 StyleBox["4", "MR"],
 ")\nreal numbers (eg., ",
 StyleBox["5.201", "MR"],
 ")\ncomplex numbers (eg., ",
 StyleBox["3+4I", "MR"],
 ")\nrational numbers (eg., ",
 StyleBox["5/7", "MR"],
 ")"
}], "ItemParagraph",
 CellChangeTimes->{{3.615051233528818*^9, 3.6150512533470297`*^9}, {
   3.615051290490303*^9, 3.615051294361841*^9}, 3.617395229742488*^9}],

Cell[TextData[{
 "A string, comprised of letters, numbers and spaces (ie., ASCII characters) \
between quotes (eg., ",
 StyleBox["\"Computer Simulations with Wolfram Language\"", "MR"],
 ")"
}], "ItemNumbered",
 CellChangeTimes->{
  3.615051245017063*^9, {3.617452463053535*^9, 3.617452470227048*^9}, {
   3.617452596023829*^9, 3.617452599638523*^9}, {3.6174526720256433`*^9, 
   3.617452674864112*^9}}]
}, Open  ]],

Cell["\<\
Atomic expressions differ from non-atomic expressions in several ways:\
\>", "Text"],

Cell[TextData[{
 "The ",
 StyleBox["FullForm", "MR"],
 " of an atomic expression is the atom itself."
}], "Text"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FullForm", "[", "darwin", "]"}], ",", 
   RowBox[{"FullForm", "[", "4", "]"}], ",", 
   RowBox[{"FullForm", "[", "\"\<Computer Simulations with WL\>\"", "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.617452475583853*^9, 3.617452475701305*^9}},
 CellLabel->"In[12]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    StyleBox["darwin",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], ",", 
   TagBox[
    StyleBox["4",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], ",", 
   TagBox[
    StyleBox["\"\<Computer Simulations with WL\>\"",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm]}], "}"}]], "Input",
 CellChangeTimes->{{3.617452478283165*^9, 3.617452478653047*^9}},
 CellLabel->"Out[12]="],

Cell["\<\
The head (or 0th part) of an atom is the type of atom that it is.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Head", "[", "List", "]"}], ",", 
   RowBox[{
   "Head", "[", "\"\<Computer Simulations with Wolfram Language\>\"", "]"}], 
   ",", " ", 
   RowBox[{"5", "[", 
    RowBox[{"[", "0", "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.617452683933302*^9, 3.617452684058147*^9}, {
  3.617464829162619*^9, 3.617464835694182*^9}},
 CellLabel->"In[13]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Symbol", ",", "String", ",", "Integer"}], "}"}]], "Output",
 CellChangeTimes->{3.615054451663434*^9},
 CellLabel->"Out[13]="]
}, Open  ]],

Cell["\<\
An atomic expression has no parts which can be extracted or replaced.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{"\"\<Computer Simulations with Wolfram Language\>\"", ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6174526924777317`*^9, 3.617452692562242*^9}, 
   3.617464843965248*^9},
 CellLabel->"In[14]:="],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\\"Computer \
Simulations with Wolfram Language\\\" \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\[NoBreak] is longer than depth of object. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partd\\\", \
ButtonNote -> \\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.617464853327559*^9},
 CellLabel->"During evaluation of In[1]:="],

Cell[BoxData[
 RowBox[{"\<\"Computer Simulations with Wolfram Language\"\>", 
  "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.615054451810555*^9},
 CellLabel->"Out[14]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Compound expressions", "Subsection"],

Cell[TextData[{
 "A ",
 StyleBox["CompoundExpression", "MR"],
 " is an expression consisting of a sequence of expressions separated by \
semi-colons (",
 StyleBox[";", "MR"],
 ")."
}], "Text"],

Cell[BoxData[
 RowBox[{"expr1", ";", " ", "expr2", ";", " ", "\[Ellipsis]", ";", " ", 
  "exprn"}]], "DisplayFormula",
 CellChangeTimes->{{3.615051466891038*^9, 3.615051471085137*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"5", "+", "3"}]}], ";", 
  RowBox[{"4", "a"}]}]], "Input",
 CellLabel->"In[15]:="],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{3.6150544519394913`*^9},
 CellLabel->"Out[15]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Entering an expression", "Subsection"],

Cell["\<\
When an expression is entered in Wolfram Language, it is evaluated and the \
result is returned, unless it is followed by a semi-colon.\
\>", "Text",
 CellChangeTimes->{3.583513800041812*^9, 3.6150501826571617`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "^", "3"}]], "Input",
 CellLabel->"In[16]:="],

Cell[BoxData["64"], "Output",
 CellChangeTimes->{3.6150544519778852`*^9},
 CellLabel->"Out[16]="]
}, Open  ]],

Cell["\<\
When an expression is followed by a semi-colon, the expression is also \
evaluated, even though nothing is returned.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "-", "6"}], ";"}]], "Input",
 CellLabel->"In[17]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "+", "3"}]], "Input",
 CellLabel->"In[18]:="],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.615054452063705*^9},
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["%%"], "Input",
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{"-", "4"}]], "Output",
 CellChangeTimes->{3.615054452207364*^9},
 CellLabel->"Out[19]="]
}, Open  ]],

Cell["\<\
When the entered expression is a compound expression, its contents are \
evaluated sequentially and the result of the last evaluation is returned.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{
   RowBox[{"a", "=", 
    RowBox[{"3", "+", "5"}]}], ";", 
   RowBox[{"4", "a"}]}], "]"}]], "Input",
 CellLabel->"In[20]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"3", "+", "5"}]}], ";", 
     RowBox[{"4", " ", "a"}]}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"3", "+", "5"}],
        HoldForm], ",", 
       TagBox["8",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"a", "=", "8"}],
      HoldForm], ",", 
     TagBox["8",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox["a",
        HoldForm], ",", 
       TagBox["8",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"4", " ", "8"}],
      HoldForm], ",", 
     TagBox["32",
      HoldForm]}], "}"}], ",", 
   TagBox["32",
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.61505445231546*^9},
 CellLabel->"Out[20]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontColor->GrayLevel[0.5],
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["How expressions are evaluated", "Subsection"],

Cell["\<\
Wolfram Language is a term rewriting system (TRS). Whenever an expression is \
entered, it is evaluated by term rewriting using rewrite rules. These rules \
consist of two parts: a pattern on the left-hand side and a replacement text \
on the right-hand side. When the lhs of a rewrite rule is found to \
pattern-match part of the expression, that part is replaced by the rhs of the \
rule, after substituting values in the expression which match labelled blanks \
in the pattern into the rhs of the rule. Evaluation then proceeds by \
searching for further matching rules until no more are found.\
\>", "Text",
 CellChangeTimes->{3.583514042653496*^9, 3.6150501838253508`*^9}],

Cell["\<\
The evaluation process in Wolfram Language can be easily understood with the \
following analogy:\
\>", "Text",
 CellChangeTimes->{3.583514054525419*^9, 3.6150501849375467`*^9}],

Cell["\<\
Think of your experiences with using a handbook of mathematical formulas, \
such as the integral tables of Gradshteyn and Ryzhik. In order to solve an \
integral, you consult the handbook which contains formulas consisting of a \
left-hand side (lhs) and a right-hand side (rhs), separated by an \
\[OpenCurlyQuote]equals\[CloseCurlyQuote] sign. You look for an integration \
formula in the handbook whose left-hand side has the same form as your \
integral.\
\>", "Text"],

Cell["\<\
Note: While no two formulas in the handbook have the identical lhs, there may \
be several whose lhs have the same form as your integral (eg., one lhs might \
have specific values in the integration limits of in the integrand, while \
another lhs has unspecified (dummy) variables for these quantities). When \
this happens, you use the formula whose lhs gives the closest fit to your \
integral.\
\>", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "1"], 
   RowBox[{
    SuperscriptBox["x", "2"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]], "DisplayFormula",\

 CellMargins->{{
   0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
    FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {1.3 Inherited, 20}},
 TextAlignment->-0.94],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     SuperscriptBox["x", "n"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["b", 
      RowBox[{"n", "+", "1"}]], "-", 
     SuperscriptBox["a", 
      RowBox[{"n", "-", "1"}]]}], 
    RowBox[{"n", "+", "1"}]]}], TraditionalForm]], "DisplayFormula",
 CellMargins->{{
   0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
    FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {1.3 Inherited, 10}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     SuperscriptBox["x", "n"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   FractionBox["1", 
    RowBox[{"n", "+", "1"}]]}], TraditionalForm]], "DisplayFormula",
 CellMargins->{{
   0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
    FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {1.3 Inherited, 10}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["b", "3"], "-", 
     SuperscriptBox["a", "3"]}], 
    RowBox[{"n", "+", "1"}]]}], TraditionalForm]], "DisplayFormula",
 CellMargins->{{
   0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
    FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {1.3 Inherited, 10}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   FractionBox["1", "3"]}], TraditionalForm]], "DisplayFormula",
 CellMargins->{{
   0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
    FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {1.3 Inherited, 10}}],

Cell["\<\
You then replace your integral with the right-hand side of the matching lhs \
and you substitute the specific values in your integral for the corresponding \
variable symbols in the rhs.\
\>", "Text",
 CellMargins->{{
   0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
    FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 20}}],

Cell["\<\
Finally, you look through the handbook for formulas (eg., trigonometric \
identities or algebraic manipulation) that can be used to change the answer \
further.\
\>", "Text"],

Cell["\<\
This depiction provides an excellent description of the Wolfram Language \
evaluation process.\
\>", "Text",
 CellChangeTimes->{3.5835140969377527`*^9, 3.615050186041697*^9}],

Cell["\<\
However, the application of the term rewriting process to a Wolfram Language \
expression requires a bit more discussion because a Wolfram Language \
expression consists of parts, a head and zero or more arguments which are \
themselves expressions.\
\>", "Text",
 CellChangeTimes->{{3.583514104949301*^9, 3.583514112098715*^9}, {
  3.615050187057499*^9, 3.615050188184639*^9}}],

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"expr1", ",", "expr2", ",", "\[Ellipsis]", ",", "exprn"}], 
  "]"}]], "DisplayFormula"],

Cell["\<\
It is therefore necessary to understand the order in which the various parts \
of an expression are evaluated by term rewriting.\
\>", "Text"],

Cell["\<\
The implementation of the evaluation procedure is (with a few exceptions) \
straightforward:\
\>", "Text"],

Cell[CellGroupData[{

Cell["If the expression is a number or a string, it isn\[CloseCurlyQuote]t \
changed.", "ItemNumbered",
 CellChangeTimes->{3.6150530448872757`*^9}],

Cell["\<\
If the expression is a symbol, it is rewritten if there is an applicable \
rewrite rule in the global rule base; otherwise, it is unchanged.\
\>", "ItemNumbered",
 CellChangeTimes->{3.615053046813415*^9}],

Cell["\<\
If the expression is not a number, string or symbol, its parts are evaluated \
in a specific order:\
\>", "ItemNumbered",
 CellChangeTimes->{3.6150530486215763`*^9}]
}, Open  ]],

Cell["a. The head of the expression is evaluated.", "Text"],

Cell["\<\
b. The arguments of the expression are evaluated (with some exceptions) from \
left to right in order. \
\>", "Text",
 CellChangeTimes->{{3.6175459898312397`*^9, 3.6175459995656424`*^9}, {
  3.617546161434895*^9, 3.617546176916149*^9}, {3.6175463148067083`*^9, 
  3.617546326509783*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "After the head and arguments of an expression are each completely \
evaluated, the expression consisting of the evaluated head and arguments is \
rewritten, after making any necessary changes to the arguments based on the \
",
 StyleBox["Attributes", "MR"],
 " (such as ",
 StyleBox["Flat", "MR"],
 ", ",
 StyleBox["Listable", "MR"],
 ", ",
 StyleBox["Orderless", "MR"],
 ") of the head, if there is an applicable rewrite rule in the global rule \
base."
}], "ItemNumbered",
 CellChangeTimes->{3.615053149768314*^9}],

Cell["\<\
After carrying out the previous steps, the resulting expression is evaluated \
in the same way and then the result of that evaluation is evaluated, and so \
on until there are no more applicable rewrite rules.\
\>", "ItemNumbered",
 CellChangeTimes->{3.615053151632094*^9}],

Cell["\<\
The details of the term-rewriting process in steps 2 and 4 are as follows:\
\>", "ItemParagraph"]
}, Open  ]],

Cell["\<\
a. part of an expression is pattern-matched by the lhs of a rewrite rule.\
\>", "Text",
 CellChangeTimes->{3.618074306988686*^9}],

Cell["\<\
b. the values which match labelled blanks in the pattern are substituted into \
the rhs of the rewrite rule and evaluated.\
\>", "Text"],

Cell["\<\
c. the pattern-matched part of the expression is replaced with the evaluated \
result.\
\>", "Text"],

Cell["\<\
With this understanding of the evaluation procedure, we can now understand \
what happened when we entered.\
\>", "Text",
 CellChangeTimes->{3.618074309042057*^9, 3.618086399064186*^9, 
  3.618088420698127*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"List", ",", 
   RowBox[{"1", "+", "2", "+", "3"}]}], "]"}]], "Input",
 CellLabel->"In[21]:="],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.615054452358851*^9},
 CellLabel->"Out[21]="]
}, Open  ]],

Cell[TextData[{
 "In evaluating this expression, the argument ",
 StyleBox["1+2+3", "MR"],
 " was evaluated before the ",
 StyleBox["Apply", "MR"],
 " function was employed."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Controlling the evaluation", "Subsection"],

Cell[TextData[{
 "We should point out that the user can (to some extent) wrest control of the \
evaluation process from ",
 "Wolfram Language",
 " and either force or prevent evaluation. We won\[CloseCurlyQuote]t go into \
the details of doing this but we can indicate functions that can be used for \
this purpose: ",
 StyleBox["Hold", "MR"],
 ", ",
 StyleBox["HoldAll", "MR"],
 ", ",
 StyleBox["HoldFirst", "MR"],
 ", ",
 StyleBox["HoldRest", "MR"],
 ", ",
 StyleBox["HoldForm", "MR"],
 ", ",
 StyleBox["HeldPart", "MR"],
 ", ",
 StyleBox["ReleaseHold", "MR"],
 ", ",
 StyleBox["Evaluate", "MR"],
 ", ",
 StyleBox["Unevaluated", "MR"],
 ", and ",
 StyleBox["Literal", "MR"],
 "."
}], "Text",
 CellChangeTimes->{3.5835141527145433`*^9, 3.615050189354269*^9}],

Cell[TextData[{
 "In order to turn the sum into a list, it is necessary to prevent the \
argument ",
 StyleBox["Plus[1,2,3]", "MR"],
 " from being prematurely evaluated before the symbol ",
 StyleBox["Plus", "MR"],
 " is replaced with the symbol ",
 StyleBox["List", "MR"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"List", ",", 
   RowBox[{"Unevaluated", "[", 
    RowBox[{"1", "+", "2", "+", "3"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6150544524031982`*^9},
 CellLabel->"Out[22]="]
}, Open  ]],

Cell["\<\
Since term rewriting is based on pattern-matching, we need to look at the \
various sorts of patterns that Wolfram Language recognizes.\
\>", "Text",
 CellChangeTimes->{3.583514168889086*^9, 3.615050190521557*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Patterns", "Section"],

Cell[CellGroupData[{

Cell["Blanks", "Subsection"],

Cell[TextData[{
 "Patterns are defined syntactically, ie., by the internal representation of \
an expression as given using ",
 StyleBox["FullForm", "MR"],
 "."
}], "Text"],

Cell[TextData[{
 "In general, an expression will be matched by several patterns, of differing \
specificity. For example, constructing as many patterns to match ",
 StyleBox["x^2", "MR"],
 ", in order of increasing generality."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["x", "MR"],
 " raised to the power of two."
}], "ItemNumbered",
 CellChangeTimes->{3.6150533896077414`*^9}],

Cell[TextData[{
 StyleBox["x", "MR"],
 " raised to the power of a number."
}], "ItemNumbered",
 CellChangeTimes->{3.615053391150167*^9}],

Cell[TextData[{
 StyleBox["x", "MR"],
 " raised to the power of something."
}], "ItemNumbered",
 CellChangeTimes->{3.615053392310244*^9}],

Cell["a symbol raised to the power of two.", "ItemNumbered",
 CellChangeTimes->{3.615053393686015*^9}],

Cell["a symbol raised to the power of a number.", "ItemNumbered",
 CellChangeTimes->{3.6150533952460613`*^9}],

Cell["a symbol raised to the power of something.", "ItemNumbered",
 CellChangeTimes->{3.615053396958152*^9}],

Cell["something raised to the power of two.", "ItemNumbered",
 CellChangeTimes->{3.615053398598048*^9}],

Cell["something raised to the power of a number.", "ItemNumbered",
 CellChangeTimes->{3.6150534001502323`*^9}],

Cell["something raised to the power of something.", "ItemNumbered",
 CellChangeTimes->{3.615053401390382*^9}],

Cell["something.", "ItemNumbered",
 CellChangeTimes->{3.615053403542158*^9}]
}, Open  ]],

Cell[TextData[{
 "The term \[OpenCurlyQuote]something\[CloseCurlyQuote] used above can be \
replaced by the term \[OpenCurlyQuote]an expression\[CloseCurlyQuote], so \
that for example, the last case says that ",
 StyleBox["x^2", "MR"],
 " pattern-matches an expression (which is true since ",
 StyleBox["x^2", "MR"],
 " is an expression). To be precise, we need a notation to designate a \
pattern that has the form of an expression. We also need to designate a \
pattern that has the form of a sequence of expressions, consecutive \
expressions separated by commas."
}], "Text"],

Cell[TextData[{
 "Patterns are defined in ",
 "Wolfram Language",
 " as expressions that ",
 StyleBox["may",
  FontSlant->"Italic"],
 " contain blanks. A pattern may contain a single (",
 StyleBox["_", "MR"],
 ") blank, a double (",
 StyleBox["__", "MR"],
 ") blank, or a triple (",
 StyleBox["___", "MR"],
 ") blank (the differences will be discussed shortly)."
}], "Text",
 CellChangeTimes->{3.583514186978375*^9, 3.615050191842339*^9}],

Cell[TextData[{
 "Note: A pattern can be labelled (given a name) by preceding the blank(s) by \
a symbol, eg., ",
 StyleBox["name_", "MR"],
 " or ",
 StyleBox["name__", "MR"],
 " or ",
 StyleBox["name___", "MR"],
 ". The labelled pattern is matched by exactly the same expression that \
matches its unlabeled counterpart (pattern labeling, as we will see, is used \
to create dummy variables)."
}], "Text"],

Cell[TextData[{
 "Note: A blank can be followed by a symbol, eg., ",
 StyleBox["_h", "MR"],
 " or ",
 StyleBox["__h", "MR"],
 " or ",
 StyleBox["___h", "MR"],
 ", in which case, an expression must have the head ",
 StyleBox["h", "MR"],
 " to match the pattern (this is used to perform type checking)."
}], "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Pattern-matching an expression", "Subsection"],

Cell[TextData[{
 "We can use the ",
 StyleBox["MatchQ", "MR"],
 " function to determine if a particular pattern matches an expression or a \
sequence of expressions. The most specific pattern-match is between an \
expression and itself."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"x", "^", "2"}]}], "]"}]], "Input",
 CellLabel->"In[23]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[23]="]
}, Open  ]],

Cell["\<\
To make more general (less specific) pattern-matches, a single blank is used \
to represent an individual expression, which can be any data object.\
\>", "Text"],

Cell[TextData[{
 "We\[CloseCurlyQuote]ll work with ",
 StyleBox["x^2", "MR"],
 " to demonstrate the use of the ",
 StyleBox["Blank", "MR"],
 " function in pattern-matching. In the following examples (which are \
arbitrarily chosen from the many possible pattern matches), we\
\[CloseCurlyQuote]ll first state the pattern-match and then check it using ",
 StyleBox["MatchQ", "MR"],
 "."
}], "Text"],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern matches \[OpenCurlyQuote]an expression\[CloseCurlyQuote]."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "_"}], "]"}]], "Input",
 CellLabel->"In[24]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[24]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]",
 StyleBox["x", "MR"],
 " raised to the power of an expression\[CloseCurlyQuote]."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"x", "^", "_"}]}], "]"}]], "Input",
 CellLabel->"In[25]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[25]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]",
 StyleBox["x", "MR"],
 " raised to the power of an integer\[CloseCurlyQuote] (to put it more \
formally, \[OpenCurlyQuote]",
 StyleBox["x", "MR"],
 " raised to the power of an expression whose head is ",
 StyleBox["Integer", "MR"],
 "\[CloseCurlyQuote])."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"x", "^", "_Integer"}]}], "]"}]], "Input",
 CellLabel->"In[26]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[26]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]an expression whose head is ",
 StyleBox["Power", "MR"],
 "\[CloseCurlyQuote]."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "_Power"}], "]"}]], "Input",
 CellLabel->"In[27]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[27]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]an expression whose head is a symbol and \
which is raised to the power ",
 StyleBox["2", "MR"],
 "\[CloseCurlyQuote]."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_Symbol", "^", "2"}]}], "]"}]], "Input",
 CellLabel->"In[28]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[28]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]an expression raised to the power ",
 StyleBox["2", "MR"],
 "\[CloseCurlyQuote]."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_", "^", "2"}]}], "]"}]], "Input",
 CellLabel->"In[29]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[29]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]an expression whose head is a symbol and \
which is raised to the power of an expression whose head is an integer\
\[CloseCurlyQuote] (or stated less formally, \[OpenCurlyQuote]a symbol raised \
to the power of an integer\[CloseCurlyQuote])."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_Symbol", "^", "_Integer"}]}], "]"}]], "Input",
 CellLabel->"In[30]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[30]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]an expression raised to the power of an \
expression\[CloseCurlyQuote]."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_", "^", "_"}]}], "]"}]], "Input",
 CellLabel->"In[31]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[31]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]",
 StyleBox["x", "MR"],
 " raised to the power of an expression\[CloseCurlyQuote] (the label ",
 StyleBox["y", "MR"],
 " does not affect the pattern-match)."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"x", "^", "y_"}]}], "]"}]], "Input",
 CellLabel->"In[32]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[32]="]
}, Open  ]],

Cell["As a final example, we look at", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"5", "^", "2"}], ",", 
   RowBox[{"_", "^", "_"}]}], "]"}]], "Input",
 CellLabel->"In[33]:="],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[33]="]
}, Open  ]],

Cell[TextData[{
 "Why? Because in the evaluation process, ",
 StyleBox["5^2", "MR"],
 " was evaluated to give ",
 StyleBox["25", "MR"],
 " and ",
 StyleBox["25", "MR"],
 " does not pattern match ",
 StyleBox["_^_", "MR"],
 ". If we enter ",
 StyleBox["MatchQ[Unevaluated[5^2], _^_]", "MR"],
 " the response will be ",
 StyleBox["true", "MR"],
 "."
}], "Text",
 CellChangeTimes->{{3.619168398649435*^9, 3.619168461745262*^9}, {
  3.619168509282216*^9, 3.619168557699501*^9}, {3.619168605590457*^9, 
  3.6191686140771103`*^9}, {3.61916868154286*^9, 3.619168734136216*^9}, {
  3.61916954563972*^9, 3.619169548556675*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Pattern-matching a sequence of one or more expressions", "Subsection"],

Cell[TextData[{
 "A sequence consists of a number of expression separated by commas. A double \
blank represents a sequence of one or more expressions and ",
 StyleBox["__h", "MR"],
 " represents a sequence of one or more expressions, each of which has head \
",
 StyleBox["h", "MR"],
 "."
}], "Text"],

Cell["\<\
For example a sequence in a list pattern-matches a double blank (note: we are \
pattern-matching the sequence in the list, not the list itself)\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", "__", "}"}]}], "]"}]], "Input",
 CellLabel->"In[34]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[34]="]
}, Open  ]],

Cell["\<\
but the arguments of an empty list (which has no arguments) do not \
pattern-match a double blank.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "__", "}"}]}], "]"}]], "Input",
 CellLabel->"In[35]:="],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[35]="]
}, Open  ]],

Cell["\<\
An expression that pattern-matches a blank will also pattern match a double \
blank. For example,\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "__"}], "]"}]], "Input",
 CellLabel->"In[36]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[36]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Pattern-matching a sequence of zero or more expressions", "Subsection"],

Cell[TextData[{
 "A triple blank represents a sequence of zero or more expressions and ",
 StyleBox["___h", "MR"],
 " represents a sequence of zero or more expressions, each of which has the \
head ",
 StyleBox["h", "MR"],
 ". For example, the triple blank pattern-matches the empty list."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "___", "}"}]}], "]"}]], "Input",
 CellLabel->"In[37]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[37]="]
}, Open  ]],

Cell["\<\
An expression that pattern-matches a blank and a sequence that \
pattern-matches a double blank pattern both pattern-match a triple blank \
pattern.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "___"}], "]"}]], "Input",
 CellLabel->"In[38]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[38]="]
}, Open  ]],

Cell[TextData[{
 "It is important to be aware that for the purposes of pattern-matching, a \
sequence is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " an expression. For example,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", "_", "}"}]}], "]"}]], "Input",
 CellLabel->"In[39]:="],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[39]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Alternative pattern-matching", "Subsection"],

Cell["\<\
We can make a pattern-match less restrictive by specifying alternative \
patterns that can be matched.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{
    RowBox[{"{", "_", "}"}], "|", 
    RowBox[{"_", "^", "2"}]}]}], "]"}]], "Input",
 CellLabel->"In[40]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[40]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Conditional pattern-matching", "Subsection"],

Cell["\<\
We can make a pattern-match more restrictive by making it contingent upon \
meeting certain conditions. (Note: satisfying these conditions will be a \
necessary, but not sufficient, requirement for a successful pattern-match.)\
\>", "Text"],

Cell[TextData[{
 "If the blanks of a pattern are followed by ",
 StyleBox["?test", "MR"],
 ", where ",
 StyleBox["test", "MR"],
 " is a predicate (ie., a function that returns a ",
 StyleBox["True", "MR"],
 " or ",
 StyleBox["False", "MR"],
 "), then a pattern-match is only possible if ",
 StyleBox["test", "MR"],
 " returns ",
 StyleBox["True", "MR"],
 " when applied to the ",
 StyleBox["entire",
  FontSlant->"Italic"],
 " expression. ",
 StyleBox["?test", "MR"],
 " is used with built-in predicate functions and with anonymous predicate \
functions."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"2", ",", 
   RowBox[{"_", "?", "OddQ"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.619845639120021*^9, 3.619845646748981*^9}},
 CellLabel->"In[41]:="],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[41]="]
}, Open  ]],

Cell[TextData[{
 "(",
 StyleBox["2", "MR"],
 " is not an odd integer)"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619845958096612*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"2", ",", 
   RowBox[{"_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "3"}], "&"}], ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[42]:="],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[42]="]
}, Open  ]],

Cell[TextData[{
 "(",
 StyleBox["2", "MR"],
 " is not  ",
 StyleBox[">\[ThinSpace]3", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846006530382*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"2", ",", 
   RowBox[{"_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "1.5"}], "&"}], ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[43]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[43]="]
}, Open  ]],

Cell[TextData[{
 "(",
 StyleBox["2", "MR"],
 " is  ",
 StyleBox[">\[ThinSpace]1.5", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846030490299*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"2", ",", 
   RowBox[{"_Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "3"}], "&"}], ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[44]:="],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[44]="]
}, Open  ]],

Cell[TextData[{
 "(",
 StyleBox["2", "MR"],
 " is an integer but it is not  ",
 StyleBox[">\[ThinSpace]3", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}}],

Cell[TextData[{
 "If part of a labeled pattern is followed by ",
 StyleBox["/; condition", "MR"],
 ", where ",
 StyleBox["condition", "MR"],
 " contains labels appearing in the pattern, then a pattern-match is possible \
only if ",
 StyleBox["condition", "MR"],
 " returns ",
 StyleBox["True", "MR"],
 " when applied to the ",
 StyleBox["labelled parts",
  FontSlant->"Italic"],
 " of an expression. For example,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_", "^", "y_"}]}], "]"}]], "Input",
 CellLabel->"In[45]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[45]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "^", "b"}], ",", 
   RowBox[{
    RowBox[{"_", "^", "y_"}], "/;", 
    RowBox[{
     RowBox[{"Head", "[", "y", "]"}], "\[Equal]", "Symbol"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[46]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[46]="]
}, Open  ]],

Cell[TextData[{
 "(we used the label ",
 StyleBox["y", "MR"],
 " so we can distinguish between the first ",
 StyleBox["_", "MR"],
 " and the second ",
 StyleBox["_", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
   3.6198461896167507`*^9, 3.6198462347758713`*^9}, 3.619846275480712*^9}],

Cell["\<\
With this understanding of how pattern-matching works in Wolfram Language, we \
can discuss how to create our own rewrite rules which can be used in term \
rewriting.\
\>", "Text",
 CellChangeTimes->{3.583514248565734*^9, 3.61505019300156*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Rewrite rules", "Section"],

Cell[CellGroupData[{

Cell["Built-in functions", "Subsection"],

Cell["\<\
Wolfram Language provides many built-in functions that can be used for term \
rewriting. These rules are located in the global rule base whenever Wolfram \
Language is running. Functions defined in a package are also placed in the \
global rule base during the session in which the package is loaded. Functions \
in the global rule base are always available for term rewriting and they are \
always used whenever applicable.\
\>", "Text",
 CellChangeTimes->{{3.5835142781590977`*^9, 3.583514295024721*^9}, {
  3.583517702369039*^9, 3.583517703979857*^9}, {3.6150501942480307`*^9, 
  3.615050195385644*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["User-defined functions", "Subsection"],

Cell["\<\
In addition to the built-in rewrite rules, user-defined rewrite rules can be \
created and placed in the global rule base where they are always available, \
and always used, when applicable for the duration of the ongoing session. \
However, they are not automatically preserved beyond the session in which \
they are created.\
\>", "Text"],

Cell[TextData[{
 "There are basically two way to create a user-defined rewrite rule: with the \
",
 StyleBox["set", "MR"],
 " function and with the ",
 StyleBox["SetDelayed", "MR"],
 " function."
}], "Text",
 CellChangeTimes->{{3.619924364943383*^9, 3.619924432215714*^9}, 
   3.619929853161891*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Declaring a value using the ",
 StyleBox["Set", "MB"],
 " (",
 StyleBox["=", "MB"],
 ") function"
}], "Subsection"],

Cell[TextData[{
 "A value declaration is essentially a nickname for a value (eg., for a list \
or number) which can be used in place of the value. It is written using ",
 StyleBox["Set[lhs, rhs]", "MR"],
 " or, more commonly, as"
}], "Text"],

Cell[BoxData[
 RowBox[{"lhs", "=", "rhs"}]], "DisplayFormula"],

Cell["\<\
The lhs starts with a name, starting with a letter followed by letters and/or \
numbers (with no spaces). The rhs is either an expression or a compound \
expression enclosed in parentheses.\
\>", "Text"],

Cell["\<\
Note: the name on the lhs may be followed by a set of square brackets \
containing a sequence of patterns or labelled patterns, and the rhs may \
contain the labels, without the blanks.\
\>", "Text"],

Cell[TextData[{
 "For example, consider the following two simple ",
 StyleBox["Set", "MR"],
 " functions"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]], "Input",
 CellLabel->"In[47]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[47]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rand1", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], "]"}]}]], "Input",
 CellLabel->"In[48]:="],

Cell[BoxData["2"], "Output",
 CellLabel->"Out[48]="]
}, Open  ]],

Cell[TextData[{
 "Notice that when a ",
 StyleBox["Set", "MR"],
 " function is entered, a value is returned (unless it is followed by a \
semi-colon). If we look into the global rule base to see what rewrite rules \
have been created when ",
 StyleBox["a", "MR"],
 " and ",
 StyleBox["rand1", "MR"],
 " were entered"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "a"}]], "Input",
 CellLabel->"In[49]:="],

Cell[CellGroupData[{

Cell["Global`a", "Print", "PrintUsage",
 CellChangeTimes->{3.615059307187089*^9},
 CellTags->"Info3615034107-2903092"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"a", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`a],
  Editable->False]], "Print",
 CellChangeTimes->{3.6150593071979628`*^9},
 CellTags->"Info3615034107-2903092"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rand1"}]], "Input",
 CellLabel->"In[50]:="],

Cell[CellGroupData[{

Cell["Global`rand1", "Print", "PrintUsage",
 CellChangeTimes->{3.615059307258309*^9},
 CellTags->"Info3615034107-2903092"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"rand1", "=", "2"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`rand1],
  Editable->False]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.6150593072674313`*^9, {3.619933644736063*^9, 3.6199336469601927`*^9}},
 CellTags->"Info3615034107-2903092"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "we find that the rewrite rule associated with ",
 StyleBox["a", "MR"],
 " is the same as the ",
 StyleBox["Set", "MR"],
 " function we entered, but the rewrite rule associated with ",
 StyleBox["rand1", "MR"],
 " differs from the corresponding ",
 StyleBox["Set", "MR"],
 " function. The reason for this is that ",
 StyleBox["when a ",
  FontWeight->"Bold"],
 StyleBox["Set", "MB",
  FontWeight->"Bold"],
 StyleBox[" function is entered into the global rule base, its lhs is left \
unevaluated while its rhs is evaluated",
  FontWeight->"Bold"],
 " and when the rewrite rule that has been created is used, the unevaluated \
lhs and the evaluated rhs of the function are used. This property is known as \
the ",
 StyleBox["HoldFirst", "MR"],
 " attribute."
}], "Text",
 CellChangeTimes->{{3.5839197861461287`*^9, 3.58391978672232*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Set", "]"}]], "Input",
 CellLabel->"In[51]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldFirst", ",", "Protected", ",", "SequenceHold"}], 
  "}"}]], "Output",
 CellLabel->"Out[51]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "HoldFirst"}]], "Input",
 CellLabel->"In[52]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"HoldFirst is an attribute which specifies that the first \
argument to a function is to be maintained in an unevaluated form. \"\>", 
   "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/HoldFirst"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.615059307395406*^9},
 CellTags->"Info3615034107-2903092"]
}, Open  ]],

Cell[TextData[{
 "The reason for the ",
 StyleBox["Set", "MR"],
 " function having the ",
 StyleBox["HoldFirst", "MR"],
 " attribute is easily demonstrated by seeing what happens when ",
 StyleBox["Set", "MR"],
 " does not have this attribute."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Set", "[", 
  RowBox[{"a", ",", "6"}], "]"}]], "Input",
 CellLabel->"In[53]:="],

Cell[BoxData["6"], "Output",
 CellLabel->"Out[53]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellLabel->"In[54]:="],

Cell[BoxData["6"], "Output",
 CellLabel->"Out[54]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAttributes", "[", 
  RowBox[{"Set", ",", "HoldFirst"}], "]"}]], "Input",
 CellLabel->"In[55]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Set", "]"}]], "Input",
 CellLabel->"In[55]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Protected", ",", "SequenceHold"}], "}"}]], "Output",
 CellLabel->"Out[55]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Set", "[", 
  RowBox[{"a", ",", "7"}], "]"}]], "Input",
 CellLabel->"In[55]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Set", "::", "\<\"setraw\"\>"}], ":", 
  " ", "\<\"Cannot assign to raw object \\!\\(6\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Set::setraw\\\"]\\)\"\>"}]], \
"Message",
 CellLabel->"From In[55]:="],

Cell[BoxData["7"], "Output",
 CellLabel->"Out[55]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"Set", ",", "HoldFirst"}], "]"}]], "Input",
 CellLabel->"In[55]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Set", "]"}]], "Input",
 CellLabel->"In[56]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldFirst", ",", "Protected", ",", "SequenceHold"}], 
  "}"}]], "Output",
 CellLabel->"Out[56]="]
}, Open  ]],

Cell["\<\
When the rhs is a compound expression enclosed in parentheses, the \
expressions of the rhs are evaluated in sequence and the rhs of the resulting \
rewrite rule is the result of the final evaluation. For example,\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rand2", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"b", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";", 
    RowBox[{"RandomReal", "[", "b", "]"}]}], ")"}]}]], "Input",
 CellLabel->"In[57]:="],

Cell[BoxData[
 RowBox[{"-", "0.642186`"}]], "Output",
 CellLabel->"Out[57]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rand2"}]], "Input",
 CellLabel->"In[58]:="],

Cell[CellGroupData[{

Cell["Global`rand2", "Print", "PrintUsage",
 CellChangeTimes->{3.615059308280201*^9},
 CellTags->"Info3615034108-4922696"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"rand2", "=", "0.642186`"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`rand2],
  Editable->False]], "Print",
 CellChangeTimes->{3.6150593082889023`*^9},
 CellTags->"Info3615034108-4922696"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "What happened here is that the ",
 StyleBox["b", "MR"],
 " was first evaluated to give ",
 StyleBox["{-1,1}", "MR"],
 " and this value was then used to evaluate the random number function."
}], "Text"],

Cell["\<\
The order of expressions on the rhs is important. An expression on the rhs \
must appear before it is used in another expression on the rhs. For example,\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rand3", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"RandomReal", "[", "c", "]"}], ";", 
    RowBox[{"c", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ")"}]}]], "Input",
 CellLabel->"In[59]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Random", "::", "\<\"randn\"\>"}], ":", 
  " ", "\<\"Range specification \\!\\(c\\) in \\!\\(Random[\\(\\(Real, \
c\\)\\)]\\) is not a valid number or pair of numbers. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Random::randn\\\"]\\)\"\>"}]], \
"Message",
 CellLabel->"From In[59]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[59]="]
}, Open  ]],

Cell["\<\
Note that even though an error message was generated when the first \
expression in the compound expression was evaluated, the overall evaluation \
of the compound expression continued by evaluated the second expression and \
its value was then entered into the global rule base.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rand3"}]], "Input",
 CellLabel->"In[60]:="],

Cell[CellGroupData[{

Cell["Global`rand3", "Print", "PrintUsage",
 CellChangeTimes->{3.615059308490267*^9},
 CellTags->"Info3615034108-4922696"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"rand3", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`rand3],
  Editable->False]], "Print",
 CellChangeTimes->{3.615059308528586*^9},
 CellTags->"Info3615034108-4922696"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "c"}]], "Input",
 CellLabel->"In[61]:="],

Cell[CellGroupData[{

Cell["Global`c", "Print", "PrintUsage",
 CellChangeTimes->{3.615059308590485*^9},
 CellTags->"Info3615034108-4922696"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"c", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`c],
  Editable->False]], "Print",
 CellChangeTimes->{3.6150593086250477`*^9},
 CellTags->"Info3615034108-4922696"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "When a ",
 StyleBox["Set", "MR"],
 " function is entered, both it and any ",
 StyleBox["Set", "MR"],
 " or ",
 StyleBox["SetDelayed", "MR"],
 " functions on the rhs create rewrite rules in the global rule base."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "b"}]], "Input",
 CellLabel->"In[62]:="],

Cell[CellGroupData[{

Cell["Global`b", "Print", "PrintUsage",
 CellChangeTimes->{3.615059308695537*^9},
 CellTags->"Info3615034108-4922696"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"b", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`b],
  Editable->False]], "Print",
 CellChangeTimes->{3.615059308705263*^9},
 CellTags->"Info3615034108-4922696"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "c"}]], "Input",
 CellLabel->"In[63]:="],

Cell[CellGroupData[{

Cell["Global`c", "Print", "PrintUsage",
 CellChangeTimes->{3.6150593087625313`*^9},
 CellTags->"Info3615034108-4922696"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"c", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`c],
  Editable->False]], "Print",
 CellChangeTimes->{3.61505930877206*^9},
 CellTags->"Info3615034108-4922696"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "After a value has been declared by entering a ",
 StyleBox["Set", "MR"],
 " function, the appearance of the value\[CloseCurlyQuote]s name during an \
evaluation causes the value itself to be substituted in (which is why we say \
that it acts like a nickname). For example,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", "rand2", "]"}]], "Input",
 CellLabel->"In[64]:="],

Cell[BoxData["0.642185736420857`"], "Output",
 CellLabel->"Out[64]="]
}, Open  ]],

Cell[TextData[{
 "What happened here was that the rewrite rule associated with ",
 StyleBox["rand2", "MR"],
 " in the global rule base was used as an argument to the ",
 StyleBox["Abs", "MR"],
 " function."
}], "Text"],

Cell[TextData[{
 "The lhs of a rewrite rule can only be associated with one value at a time. \
When a ",
 StyleBox["Set", "MR"],
 " function is entered, the resulting rewrite rule \
\[OpenCurlyQuote]overwrites\[CloseCurlyQuote] any previous rewrite rule with \
the identical lhs. For example,"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rand4", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[65]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rand4"}]], "Input",
 CellLabel->"In[66]:="],

Cell[CellGroupData[{

Cell["Global`rand4", "Print", "PrintUsage",
 CellChangeTimes->{3.6150593088726788`*^9},
 CellTags->"Info3615034108-8845393"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"rand4", "=", "2"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`rand4],
  Editable->False]], "Print",
 CellChangeTimes->{3.615059308882635*^9},
 CellTags->"Info3615034108-8845393"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rand4", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[67]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rand4"}]], "Input",
 CellLabel->"In[68]:="],

Cell[CellGroupData[{

Cell["Global`rand4", "Print", "PrintUsage",
 CellChangeTimes->{3.615059308947101*^9},
 CellTags->"Info3615034108-5357437"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"rand4", "=", "1"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`rand4],
  Editable->False]], "Print",
 CellChangeTimes->{3.615059308956395*^9},
 CellTags->"Info3615034108-5357437"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "What we see is that the value of ",
 StyleBox["rand4", "MR"],
 " was ",
 StyleBox["2", "MR"],
 " after ",
 StyleBox["rand4", "MR"],
 " was first entered and this value was then changed to ",
 StyleBox["1", "MR"],
 " after ",
 StyleBox["rand4", "MR"],
 " was re-entered."
}], "Text"],

Cell[TextData[{
 "While the lhs of a rewrite rule can only be associated with one value at a \
time, a value can be associated with several names, simultaneously. We made \
use of this earlier when we defined both ",
 StyleBox["b", "MR"],
 " and ",
 StyleBox["c", "MR"],
 " as ",
 StyleBox["{-1,1}", "MR"],
 "."
}], "Text"],

Cell[TextData[{
 "Finally, user-defined rewrite rules can be removed from the global rule \
base using either the ",
 StyleBox["Clear", "MR"],
 " or ",
 StyleBox["Remove", "MR"],
 " function."
}], "Text"],

Cell[BoxData[
 RowBox[{"Clear", "[", "b", "]"}]], "Input",
 CellLabel->"In[69]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "b"}]], "Input",
 CellLabel->"In[70]:="],

Cell["Global`b", "Print", "PrintUsage",
 CellChangeTimes->{3.615059309021943*^9},
 CellTags->"Info3615034109-5357437"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Remove", "[", "c", "]"}]], "Input",
 CellLabel->"In[71]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "c"}]], "Input",
 CellLabel->"In[72]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Information", "::", "\<\"notfound\"\>"}], ":", 
  " ", "\<\"Symbol \\!\\(\\\"c\\\"\\) not found. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::notfound\\\"]\\)\"\>"}]], "Message",
 CellLabel->"From In[72]:="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Defining a function using the ",
 StyleBox["SetDelayed", "MB"],
 " (",
 StyleBox[":=", "MB"],
 ") function"
}], "Subsection"],

Cell["Function definitions (ie., programs) are written as ", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"name", "[", 
   RowBox[{"arg1_", ",", "arg2_", ",", "\[Ellipsis]", ",", "argn_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{"expr1", ";", "expr2", ";", 
    RowBox[{"\[Ellipsis]", " ", "exprm"}]}], ")"}]}]], "DisplayFormula"],

Cell["\<\
The lhs starts with a name. The name is followed by a set of square brackets \
containing a sequence of labelled patterns, which are symbols ending with one \
or more underscores (ie., blanks). The rhs is either an expression or a \
compound expression enclosed in parentheses, containing the labels on the lhs \
(without the blanks).\
\>", "Text"],

Cell["For example, consider the function definition", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Random", "[", 
   RowBox[{"Real", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "x"}], "}"}]}], "]"}]}]], "DisplayFormula"],

Cell["We\[CloseCurlyQuote]ll enter this program", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "x"}], "}"}], "]"}]}]], "Input",
 CellLabel->"In[73]:="],

Cell[TextData[{
 "The first thing we notice is that, in contrast to a ",
 StyleBox["Set", "MR"],
 " function, nothing is returned when a ",
 StyleBox["SetDelayed", "MR"],
 " function is entered. If we query the rule base,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellLabel->"In[74]:="],

Cell[CellGroupData[{

Cell["Global`f", "Print", "PrintUsage",
 CellChangeTimes->{3.615062000293852*^9},
 CellTags->"Info3615036800-5357437"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "[", "x_Integer", "]"}], ":=", 
         SuperscriptBox["x", "3"]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], ":=", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "x"}], "}"}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`f],
  Editable->False]], "Print",
 CellChangeTimes->{3.6150620003316927`*^9},
 CellTags->"Info3615036800-5357437"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "we see that a rewrite rule associated with ",
 StyleBox["f", "MR"],
 " has been placed in the global rule base that is identical to the ",
 StyleBox["SetDelayed", "MR"],
 " function. The reason is that ",
 StyleBox["when a ",
  FontWeight->"Bold"],
 StyleBox["SetDelayed", "MB",
  FontWeight->"Bold"],
 StyleBox[" function is entered both its lhs and the rhs are left unevaluated",
  FontWeight->"Bold"],
 ". This property is known as the ",
 StyleBox["HoldAll", "MR"],
 " attribute."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "SetDelayed", "]"}]], "Input",
 CellLabel->"In[75]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldAll", ",", "Protected", ",", "SequenceHold"}], "}"}]], "Output",\

 CellLabel->"Out[75]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "HoldAll"}]], "Input",
 CellLabel->"In[76]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"HoldAll is an attribute which specifies that all arguments to \
a function are to be maintained in an unevaluated form. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/HoldAll"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.615062000458929*^9},
 CellTags->"Info3615036800-5357437"]
}, Open  ]],

Cell["\<\
A user-defined function is called in the same way as a built-in function is \
called, by entering its name with specific argument value(s).\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "8", "]"}]], "Input",
 CellLabel->"In[77]:="],

Cell[BoxData["0.7912433608591618`"], "Output",
 CellLabel->"Out[77]="]
}, Open  ]],

Cell["\<\
Each time the lhs of a SetDelayed rewrite rule is entered with specific \
argument values, the rhs of the rule is evaluated using these values, and the \
result is returned.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "8", "]"}]], "Input",
 CellLabel->"In[78]:="],

Cell[BoxData["3.207959658813093`"], "Output",
 CellLabel->"Out[78]="]
}, Open  ]],

Cell[TextData[{
 "Note: In contrast to the ",
 StyleBox[":=", "MR"],
 " function, the ",
 StyleBox["=", "MR"],
 " function only evaluates the rhs when it is first entered and thereafter, \
that same evaluated rhs is returned each time the lhs is entered with \
specific argument values. For example, consider"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", "x"}], ";"}]], "Input",
 CellLabel->"In[79]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellLabel->"In[80]:="],

Cell[CellGroupData[{

Cell["Global`f", "Print", "PrintUsage",
 CellChangeTimes->{3.615062000609456*^9},
 CellTags->"Info3615036800-5357437"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "[", "x_Integer", "]"}], ":=", 
         SuperscriptBox["x", "3"]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], "=", "x"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`f],
  Editable->False]], "Print",
 CellChangeTimes->{3.615062000646043*^9},
 CellTags->"Info3615036800-5357437"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "9", "]"}]], "Input",
 CellLabel->"In[81]:="],

Cell[BoxData["9"], "Output",
 CellLabel->"Out[81]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "7", "]"}]], "Input",
 CellLabel->"In[82]:="],

Cell[BoxData["7"], "Output",
 CellLabel->"Out[82]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellLabel->"In[83]:="],

Cell[CellGroupData[{

Cell["Global`f", "Print", "PrintUsage",
 CellChangeTimes->{3.615062000778798*^9},
 CellTags->"Info3615036800-5357437"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "[", "x_Integer", "]"}], ":=", 
         SuperscriptBox["x", "3"]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], "=", "x"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`f],
  Editable->False]], "Print",
 CellChangeTimes->{3.615062000823628*^9},
 CellTags->"Info3615036800-5357437"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The definition of ",
 StyleBox["f", "MR"],
 " above seems to work fine. However, the problem arises when the rhs of the ",
 StyleBox["Set", "MR"],
 " function has already had a value assigned to it prior to the entry of the ",
 StyleBox["Set", "MR"],
 " function."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "=", "7"}], ";"}]], "Input",
 CellLabel->"In[84]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "y_", "]"}], "=", "y"}], ";"}]], "Input",
 CellLabel->"In[85]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "g"}]], "Input",
 CellLabel->"In[86]:="],

Cell[CellGroupData[{

Cell["Global`g", "Print", "PrintUsage",
 CellChangeTimes->{3.615062000912549*^9},
 CellTags->"Info3615036800-5357437"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"g", "[", "y_", "]"}], "=", "7"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`g],
  Editable->False]], "Print",
 CellChangeTimes->{3.615062000945318*^9},
 CellTags->"Info3615036800-5357437"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "3", "]"}]], "Input",
 CellLabel->"In[87]:="],

Cell[BoxData["7"], "Output",
 CellLabel->"Out[87]="]
}, Open  ]],

Cell[TextData[{
 "This problem does not arise when the ",
 StyleBox["SetDelayed", "MR"],
 " function is used."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "=", "8"}], ";"}]], "Input",
 CellLabel->"In[88]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], ":=", "z"}]], "Input",
 CellLabel->"In[89]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "g"}]], "Input",
 CellLabel->"In[90]:="],

Cell[CellGroupData[{

Cell["Global`g", "Print", "PrintUsage",
 CellChangeTimes->{3.615062001077029*^9},
 CellTags->"Info3615036801-5357437"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"g", "[", "z_", "]"}], ":=", "z"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`g],
  Editable->False]], "Print",
 CellChangeTimes->{3.615062001104622*^9},
 CellTags->"Info3615036801-5357437"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "2", "]"}]], "Input",
 CellLabel->"In[91]:="],

Cell[BoxData["2"], "Output",
 CellLabel->"Out[91]="]
}, Open  ]],

Cell[TextData[{
 "This property of fresh evaluation of both the lhs and rhs of the ",
 StyleBox[":=", "MR"],
 " function with each use, is why the ",
 StyleBox[":=", "MR"],
 " function is used to write programs rather than the ",
 StyleBox["=", "MR"],
 " function."
}], "Text"],

Cell[TextData[{
 "When the rhs of the ",
 StyleBox["SetDelayed", "MR"],
 " function is a compound expression enclosed in parentheses, no rewrite \
rules are created from the auxiliary functions on the rhs when the function \
is entered (this is because the rhs is not evaluated). When the program is \
run (or equivalently, a user-defined function is called) for the first time, \
all of the auxiliary functions are then placed in the global rule base."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"d", "=", "2"}], ";", 
    RowBox[{"x", "+", "d"}]}], ")"}]}]], "Input",
 CellLabel->"In[92]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "g"}]], "Input",
 CellLabel->"In[93]:="],

Cell[CellGroupData[{

Cell["Global`g", "Print", "PrintUsage",
 CellChangeTimes->{3.615062001243856*^9},
 CellTags->"Info3615036801-5357437"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"g", "[", "x_", "]"}], ":=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", "=", "2"}], ";", 
           RowBox[{"x", "+", "d"}]}], ")"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`g],
  Editable->False]], "Print",
 CellChangeTimes->{3.615062001266163*^9},
 CellTags->"Info3615036801-5357437"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "d"}]], "Input",
 CellLabel->"In[94]:="],

Cell["Global`d", "Print", "PrintUsage",
 CellChangeTimes->{3.615062001331037*^9},
 CellTags->"Info3615036801-5357437"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "3", "]"}]], "Input",
 CellLabel->"In[95]:="],

Cell[BoxData["5"], "Output",
 CellLabel->"Out[95]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "d"}]], "Input",
 CellLabel->"In[96]:="],

Cell[CellGroupData[{

Cell["Global`d", "Print", "PrintUsage",
 CellChangeTimes->{3.615062001449435*^9},
 CellTags->"Info3615036801-5357437"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"d", "=", "2"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`d],
  Editable->False]], "Print",
 CellChangeTimes->{3.615062001457005*^9},
 CellTags->"Info3615036801-5357437"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Placing constraints on a rewrite rule", "Subsection"],

Cell[TextData[{
 "The use of a rewrite rule can be restricted by attaching constraints on \
either the lhs or the rhs of a ",
 StyleBox["SetDelayed", "MR"],
 " rule. Conditional pattern-matching with ",
 StyleBox["_h", "MR"],
 " or with ",
 StyleBox["_?", "MR"],
 " and ",
 StyleBox["_/;", "MR"],
 " can be attached to the dummy variable arguments on the lhs. Also, ",
 StyleBox["/;", "MR"],
 " can be placed on the rhs, immediately after the (compound) expression."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{"x_", "?", "EvenQ"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{"Sqrt", "[", "x", "]"}], "]"}]}]], "Input",
 CellLabel->"In[97]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "[", "6", "]"}]], "Input",
 CellLabel->"In[98]:="],

Cell[BoxData["2.449489742783178`"], "Output",
 CellLabel->"Out[98]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "[", "5", "]"}]], "Input",
 CellLabel->"In[99]:="],

Cell[BoxData[
 RowBox[{"s", "[", "5", "]"}]], "Output",
 CellLabel->"Out[99]="]
}, Open  ]],

Cell["\<\
(the expression was evaluated but no change was made because \[LineSeparator] \
 there was no pattern match to the lhs)\
\>", "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
  3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
  3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
  3.620330909700424*^9, 3.6203309175860786`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Localizing names in a rewrite rule", "Subsection"],

Cell[TextData[{
 "As we have pointed out, when the lhs of a ",
 StyleBox["Set", "MR"],
 " or ",
 StyleBox["SetDelayed", "MR"],
 " function is evaluated (which occurs when a Set function is ",
 StyleBox["first entered",
  FontWeight->"Bold"],
 " and when a SetDelayed rewrite rule is ",
 StyleBox["first called",
  FontWeight->"Bold"],
 "), rewrite rules for all of its auxiliary functions are placed in the \
global rule base. This can cause a problem if a name being used in a program \
conflicts with the use of the name elsewhere."
}], "Text"],

Cell["\<\
We can prevent a name clash by \[OpenCurlyQuote]insulating\[CloseCurlyQuote] \
the auxiliary functions within the rewrite rule so that they are not placed \
in the global rule base as separate rewrite rules; they will only \
\[OpenCurlyQuote]exist\[CloseCurlyQuote] while being used in the evaluation \
of the rule.\
\>", "Text"],

Cell[TextData[{
 "This is usually done using the ",
 StyleBox["Module", "MR"],
 " function."
}], "Text"],

Cell[BoxData[
 RowBox[{"lhs", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"name1", "=", "val1"}], ",", "name2", ",", "\[Ellipsis]"}], 
     "}"}], ",", "rhs"}], "]"}]}]], "DisplayFormula"],

Cell["For example,", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"t", "[", "y_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{
     RowBox[{"m", "=", "2"}], ";", 
     RowBox[{"y", "+", "m"}]}]}], "]"}]}]], "Input",
 CellLabel->"In[100]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "m"}]], "Input",
 CellLabel->"In[101]:="],

Cell["Global`m", "Print", "PrintUsage",
 CellChangeTimes->{3.615062874177215*^9},
 CellTags->"Info3615037674-5357437"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", "[", "3", "]"}]], "Input",
 CellLabel->"In[102]:="],

Cell[BoxData["5"], "Output",
 CellLabel->"Out[102]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "m"}]], "Input",
 CellLabel->"In[103]:="],

Cell["Global`m", "Print", "PrintUsage",
 CellChangeTimes->{3.61506287425736*^9},
 CellTags->"Info3615037674-5357437"]
}, Open  ]],

Cell[TextData[{
 "(",
 StyleBox["m=2", "MR"],
 " was not placed in the global rule base)"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
  3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
  3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
  3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
  3.6203774312483673`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Ordering rewrite rules", "Subsection"],

Cell["\<\
When the lhs of more than one built-in and/or user-defined rewrite rule is \
found to pattern-match an expression (which occurs when the lhs\
\[CloseCurlyQuote]s only differ in their specificity), the choice of which \
rule to use is determined by the order of precedence:\
\>", "Text"],

Cell["A user-defined rule is used before a built-in rule.", "Text"],

Cell["\<\
A more specific rule is used before a more general rule (a rule is more \
specific, the fewer expression it pattern-matches).\
\>", "Text"],

Cell["\<\
So, for example, if we have two rewrite rules whose lhs\[CloseCurlyQuote]s \
have the same name but whose labelled patterns have different specificity, \
both rules will appear in the global rule base (since their lhs\
\[CloseCurlyQuote]s are not identical) and the more specific rule will be \
used in preference to the more general rule. For example, if we enter both of \
the following function definitions\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_Integer", "]"}], ":=", 
  RowBox[{"x", "^", "3"}]}]}], "Input",
 CellLabel->"In[104]:="],

Cell["and then query the rule base,", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellLabel->"In[106]:="],

Cell[CellGroupData[{

Cell["Global`f", "Print",
 CellTags->"Info3298628331-9832253"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "[", "x_Integer", "]"}], ":=", 
         SuperscriptBox["x", "3"]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], ":=", 
         SuperscriptBox["x", "2"]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["f"],
  Editable->False]], "Print",
 CellTags->"Info3298628331-9832253"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Now, entering ",
 StyleBox["f", "MR"],
 " with a real-valued argument"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "6.", "]"}]], "Input",
 CellLabel->"In[107]:="],

Cell[BoxData["36.`"], "Output",
 CellLabel->"Out[107]="]
}, Open  ]],

Cell[TextData[{
 "returns a different result from entering ",
 StyleBox["f", "MR"],
 " with an integer-valued argument."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "6", "]"}]], "Input",
 CellLabel->"In[108]:="],

Cell[BoxData["216"], "Output",
 CellLabel->"Out[108]="]
}, Open  ]],

Cell[TextData[{
 "This occurs because while an integer-valued argument pattern-matches both \
",
 StyleBox["x_", "MR"],
 " and ",
 StyleBox["x_Integer", "MR"],
 " (and hence pattern-matches both of the ",
 StyleBox["f", "MR"],
 " rewrite rules), the second rule is a more specific pattern-match for the \
integer value 6."
}], "Text"],

Cell["\<\
Note: If Wolfram Language cannot deduce which rule is more general, it uses \
the rules in the order in which they appear in the global rule base.\
\>", "Text",
 CellChangeTimes->{3.583514480435293*^9, 3.6150501964568987`*^9}],

Cell[TextData[{
 "The ordering of rewrite rules makes it possible for us to create sets of \
rewrite rules with the same name that give different results, depending on \
the arguments used. ",
 StyleBox["This is key to writing rule-based programs",
  FontWeight->"Bold"],
 "."
}], "Text"],

Cell["\<\
Note: It is necessary to be careful about the labelling of patterns in \
rewrite rules because if two or more rules are identical except for the \
labelling, these rules will all be placed in the global rule base and it may \
not be obvious which rule will be used. For example,\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "4"}]}]], "Input",
 CellLabel->"In[109]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "[", "_", "]"}], ":=", 
  RowBox[{"RandomReal", "[", "]"}]}]], "Input",
 CellLabel->"In[110]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", "[", "2", "]"}]], "Input",
 CellLabel->"In[111]:="],

Cell[BoxData["16"], "Output",
 CellLabel->"Out[111]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "w"}]], "Input",
 CellLabel->"In[112]:="],

Cell[CellGroupData[{

Cell["Global`w", "Print",
 CellTags->"Info3298628331-7734930"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"w", "[", "x_", "]"}], ":=", 
         SuperscriptBox["x", "4"]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"w", "[", "_", "]"}], ":=", 
         RowBox[{"Random", "[", "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["w"],
  Editable->False]], "Print",
 CellTags->"Info3298628331-7734930"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Transformation rules", "Section"],

Cell[TextData[{
 "There are times when we want a rewrite rule to only be applied to (ie., \
used inside) a specific expression, rather than being placed in the global \
rule base where it will be used whenever it pattern-matches an expression. \
For example, the \[OpenCurlyQuote]temporary\[CloseCurlyQuote] substitution of \
a value for a name in an expression may be preferable to the permanent \
assignment of the name to the value via a ",
 StyleBox["Set", "MR"],
 " function. When this is the case, the ",
 StyleBox["ReplaceAll", "MR"],
 " function can be used together with a ",
 StyleBox["Rule", "MR"],
 " or ",
 StyleBox["RuleDelayed", "MR"],
 " function to create a transformation (or local rewrite) rule which is \
placed directly after the expression to which it is to be applied."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Using the ",
 StyleBox["Rule", "MB"],
 " (",
 StyleBox["->", "MB"],
 ") function"
}], "Subsection"],

Cell[TextData[{
 "A ",
 StyleBox["Rule", "MR"],
 " function is attached to an expression. It is written"
}], "Text"],

Cell[BoxData[
 RowBox[{"expression", "/.", 
  RowBox[{"lhs", "\[Rule]", "rhs"}]}]], "DisplayFormula"],

Cell["\<\
The lhs can be written using symbols, numbers or labelled patterns.\
\>", "Text"],

Cell[TextData[{
 "When an expression with an attached ",
 StyleBox["Rule", "MR"],
 " transformation rule is entered, the expression itself is evaluated first. \
Then, ",
 StyleBox["both",
  FontSlant->"Italic"],
 " the lhs and the rhs of the ",
 StyleBox["Rule", "MR"],
 " transformation rule are evaluated. Finally, the fully evaluated \
transformation rule is used in the evaluated expression. For example"
}], "Text"],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellLabel->"In[113]:="],

Cell[TextData[{
 "(we are deleting any definition of ",
 StyleBox["a", "MR"],
 " from the global rule base)"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
   3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
   3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
   3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
   3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466296966332*^9}, 
   3.620466411329114*^9, {3.620466783882618*^9, 3.620466823761324*^9}, {
   3.620466892045492*^9, 3.620466892963167*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Rule]", "a"}]}]], "Input",
 CellLabel->"In[114]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "a", ",", "a"}], "}"}]], "Output",
 CellLabel->"Out[114]="]
}, Open  ]],

Cell[TextData[{
 "(we have ",
 StyleBox["(1,1,1,1)/.1->a", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
  3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
  3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
  3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
  3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466277547884*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Rule]", "a"}]}]], "Input",
 CellLabel->"In[115]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[115]="]
}, Open  ]],

Cell[TextData[{
 "(we have ",
 StyleBox["(1,1,1,1)/.0->a", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
  3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
  3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
  3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
  3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466296966332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 CellLabel->"In[116]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "b", ",", "b", ",", "b"}], "}"}]], "Output",
 CellLabel->"Out[116]="]
}, Open  ]],

Cell[TextData[{
 "(we have ",
 StyleBox["(1,1,1,1)/.1->b", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
   3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
   3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
   3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
   3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466296966332*^9}, 
   3.620466411329114*^9, 3.620467186797035*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 CellLabel->"In[117]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[117]="]
}, Open  ]],

Cell[TextData[{
 "(we have ",
 StyleBox["(1,1,1,1)/.0->a", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
  3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
  3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
  3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
  3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466296966332*^9}, {
  3.620466411329114*^9, 3.620466436537724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 CellLabel->"In[118]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "a", ",", "a"}], "}"}]], "Output",
 CellLabel->"Out[118]="]
}, Open  ]],

Cell[TextData[{
 "(we have ",
 StyleBox["(1,1,1,1)/.1->a", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
   3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
   3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
   3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
   3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466296966332*^9}, 
   3.620466411329114*^9, {3.6204664529615107`*^9, 3.6204664548164167`*^9}}],

Cell["We can attach a list of rules to an expression using ", "Text"],

Cell[BoxData[
 RowBox[{"expression", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"lhs1", "\[Rule]", "rhs1"}], ",", 
    RowBox[{"lhs2", "\[Rule]", "rhs2"}], ",", "\[Ellipsis]"}], 
   "}"}]}]], "DisplayFormula"],

Cell["For example,", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "b"}], ",", 
    RowBox[{"b", "\[Rule]", "a"}]}], "}"}]}]], "Input",
 CellLabel->"In[119]:="],

Cell[TextData[{
 "(",
 StyleBox["a", "MR"],
 " remains ",
 StyleBox["a", "MR"],
 ", ",
 StyleBox["b", "MR"],
 " becomes ",
 StyleBox["a", "MR"],
 ", ",
 StyleBox["c", "MR"],
 " becomes ",
 StyleBox["b", "MR"],
 " but ",
 StyleBox["b", "MR"],
 " does not then become ",
 StyleBox["a", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
   3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
   3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
   3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
   3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466296966332*^9}, 
   3.620466411329114*^9, {3.620466513427266*^9, 3.620466546986621*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "b"}], "}"}]], "Output",
 CellLabel->"Out[119]="],

Cell[TextData[{
 "Multiple transformation rules are used in parallel. The rules are applied \
in order so that a later rule in the list is used only if all the earlier \
rules do not match, and ",
 StyleBox["only one transformation rule at most, is applied to a given part \
of an expression",
  FontWeight->"Bold"],
 ", and no matching rules are used thereafter, as the above example \
illustrates."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Using the ",
 StyleBox["RuleDelayed", "MB"],
 " (",
 StyleBox[":>", "MB"],
 ") function"
}], "Subsection"],

Cell[TextData[{
 "A ",
 StyleBox["RuleDelayed", "MR"],
 " function is attached to an expression. It is written"
}], "Text"],

Cell[BoxData[
 RowBox[{"expression", "/.", 
  RowBox[{"lhs", "\[RuleDelayed]", "rhs"}]}]], "DisplayFormula"],

Cell["or, for a list of rules", "Text"],

Cell[BoxData[
 RowBox[{"expression", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"lhs1", "\[RuleDelayed]", "rhs2"}], ",", 
    RowBox[{"lhs2", "\[RuleDelayed]", "rhs2"}], ",", "\[Ellipsis]"}], 
   "}"}]}]], "DisplayFormula"],

Cell["\<\
The lhs can be written using symbols, numbers or labelled patterns.\
\>", "Text"],

Cell[TextData[{
 "When an expression with an attached rule is entered, the expression itself \
is evaluated first. Then, the lhs of the ",
 StyleBox["RuleDelayed", "MR"],
 " transformation rule ",
 StyleBox["is",
  FontWeight->"Bold"],
 " evaluated but the rhs is ",
 StyleBox["not",
  FontWeight->"Bold"],
 " evaluated. Finally, the partially evaluated transformation rule is used in \
the evaluated expression (the unevaluated rhs will be evaluated subsequently)."
}], "Text"],

Cell["For example,", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[RuleDelayed]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 CellLabel->"In[120]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "b", ",", "b"}], "}"}]], "Output",
 CellLabel->"Out[120]="]
}, Open  ]],

Cell[TextData[{
 "(we are using ",
 StyleBox["1\[RuleDelayed]{a,b}[[1]]", "MR"],
 " for the first element and \[LineSeparator]  ",
 StyleBox["1\[RuleDelayed]{a,b}[[2]]", "MR"],
 " for all the others elements)"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
   3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
   3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
   3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
   3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466296966332*^9}, 
   3.620466411329114*^9, {3.620466783882618*^9, 3.620466823761324*^9}, {
   3.620466892045492*^9, 3.620466892963167*^9}, {3.620498142654502*^9, 
   3.620498165564784*^9}, {3.620498298880374*^9, 3.620498369114496*^9}, {
   3.620499752551298*^9, 3.6204997550392723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[RuleDelayed]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 CellLabel->"In[121]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "a", ",", "b", ",", "a"}], "}"}]], "Output",
 CellLabel->"Out[121]="]
}, Open  ]],

Cell[TextData[{
 "(we are using ",
 StyleBox["1\[RuleDelayed]{a,b}[[2]]", "MR"],
 " for the first element, \[LineSeparator]  ",
 StyleBox["1\[RuleDelayed]{a,b}[[1]]", "MR"],
 " for the second element,\[LineSeparator]  ",
 StyleBox["1\[RuleDelayed]{a,b}[[2]]", "MR"],
 " for the third element,\[LineSeparator]  ",
 StyleBox["1\[RuleDelayed]{a,b}[[1]]", "MR"],
 " for the fourth element\[ThinSpace])"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
   3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
   3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
   3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
   3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466296966332*^9}, 
   3.620466411329114*^9, {3.620466783882618*^9, 3.620466823761324*^9}, {
   3.620466892045492*^9, 3.620466892963167*^9}, {3.620498142654502*^9, 
   3.620498165564784*^9}, {3.620498298880374*^9, 3.6204984635244226`*^9}, {
   3.620498511205984*^9, 3.620498523822194*^9}, {3.6204997292792892`*^9, 
   3.6204997495113688`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[RuleDelayed]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 CellLabel->"In[122]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[122]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Placing constraints on a transformation rule", "Subsection"],

Cell[TextData[{
 "By placing ",
 StyleBox["/; condition", "MR"],
 " immediately after a ",
 StyleBox["RuleDelayed", "MR"],
 " ",
 StyleBox[":>", "MR"],
 " transformation rule, its use can be restricted in the same way that using ",
 StyleBox["/; condition", "MR"],
 " can be used to restrict the use of a ",
 StyleBox["SetDelayed", "MR"],
 " rewrite rule."
}], "Text"],

Cell[TextData[{
 "Note: Placing a ",
 StyleBox["/; condition", "MR"],
 " after a ",
 StyleBox["Rule", "MR"],
 " ",
 StyleBox["->", "MR"],
 " transformation rule serves no purpose since the rhs of the rule has \
already been evaluated before it is used and hence the conditional \
restriction is ignored."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Applying a transformation rule repeatedly", "Subsection"],

Cell[TextData[{
 "To apply one or more transformation rules repeatedly to an expression until \
the expression no longer changes, the ",
 StyleBox["ReplaceRepeated", "MR"],
 " function is used. For example,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "//.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "b"}], ",", 
    RowBox[{"b", "\[Rule]", "a"}]}], "}"}]}]], "Input",
 CellLabel->"In[123]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "a"}], "}"}]], "Output",
 CellLabel->"Out[123]="]
}, Open  ]],

Cell[TextData[{
 "(",
 StyleBox["a", "MR"],
 " remains ",
 StyleBox["a", "MR"],
 ", ",
 StyleBox["b", "MR"],
 " becomes ",
 StyleBox["a", "MR"],
 ", ",
 StyleBox["c", "MR"],
 " becomes ",
 StyleBox["b", "MR"],
 " and then ",
 StyleBox["b", "MR"],
 " becomes ",
 StyleBox["a", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
   3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
   3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
   3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
   3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466296966332*^9}, 
   3.620466411329114*^9, {3.620466513427266*^9, 3.620466546986621*^9}, {
   3.620500426615745*^9, 3.620500441797989*^9}, 3.6205790406073303`*^9}],

Cell[TextData[{
 "Note: In using ",
 StyleBox["//.", "MR"],
 " with a list of transformation rules, it is important to keep in mind the \
order of application of the rules. The transformation rules are not \
repeatedly applied in order. Rather, each rule, in turn, is applied \
repeatedly."
}], "Text"],

Cell[BoxData[GridBox[{
   {
    StyleBox["rule", "Subsubsection",
     FontWeight->"Bold"], 
    StyleBox["evaluated", "Subsubsection",
     FontWeight->"Bold"], 
    StyleBox["unevaluated", "Subsubsection",
     FontWeight->"Bold"]},
   {
    RowBox[{"lhs", "=", "rhs"}], "rhs", "lhs"},
   {
    RowBox[{"lhs", ":=", "rhs"}], " ", 
    RowBox[{"lhs", ",", "rhs"}]},
   {
    RowBox[{"expr", "/.", 
     RowBox[{"lhs", "\[Rule]", "rhs"}]}], 
    RowBox[{"expr", ",", "lhs", ",", "rhs"}], " "},
   {
    RowBox[{"expr", "/.", 
     RowBox[{"lhs", "\[RuleDelayed]", "rhs"}]}], 
    RowBox[{"expr", ",", "lhs"}], "rhs"}
  }]], "DisplayFormula",
 GridBoxOptions->{
 GridBoxAlignment->{
  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, {True}, False}, "RowsIndexed" -> {}}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Functional programming style", "Section"],

Cell["\<\
Wolfram Language works with built-in and user-defined functions in ways which \
are characteristic of the \[OpenCurlyQuote]functional\[CloseCurlyQuote] style \
of programming.\
\>", "Text",
 CellChangeTimes->{3.583514520372698*^9, 3.61505019762542*^9}],

Cell[CellGroupData[{

Cell["Nested function calls", "Subsection"],

Cell["Consider the following consecutive computations:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tan", "[", "4.0", "]"}]], "Input",
 CellLabel->"In[124]:="],

Cell[BoxData["1.1578212823495775`"], "Output",
 CellLabel->"Out[124]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "%", "]"}]], "Input",
 CellLabel->"In[125]:="],

Cell[BoxData["0.9159308854343666`"], "Output",
 CellLabel->"Out[125]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", "%", "]"}]], "Input",
 CellLabel->"In[126]:="],

Cell[BoxData["0.6090525263647699`"], "Output",
 CellLabel->"Out[126]="]
}, Open  ]],

Cell[TextData[{
 "We can combine these function calls into a ",
 StyleBox["nested function call",
  FontSlant->"Italic"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{"Sin", "[", 
   RowBox[{"Tan", "[", "4.0", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[127]:="],

Cell[BoxData["0.6090525263647699`"], "Output",
 CellLabel->"Out[127]="]
}, Open  ]],

Cell["\<\
Notice that the result of one function call is immediately fed into another \
function without having to first name (or declare) the result.\
\>", "Text"],

Cell["\<\
A nested function call is the application of a function to the result of \
applying another function to some argument value. In applying functions \
successively, it is not necessary to declare the value of the result of one \
function call prior to using it as an argument in another function call.\
\>", "Text"],

Cell["\<\
We can illustrate the use of nested function calls using a deck of playing \
cards:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"2", ",", "10"}], "]"}]], "Input",
 CellLabel->"In[128]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
   ",", "10"}], "}"}]], "Output",
 CellLabel->"Out[128]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[ScriptCapitalJ]", ",", "\[ScriptCapitalQ]", ",", "\[ScriptCapitalK]", 
     ",", "\[ScriptCapitalA]"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[129]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
   ",", "10", ",", "\[ScriptCapitalJ]", ",", "\[ScriptCapitalQ]", ",", 
   "\[ScriptCapitalK]", ",", "\[ScriptCapitalA]"}], "}"}]], "Output",
 CellLabel->"Out[129]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Outer", "[", 
  RowBox[{"List", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[ClubSuit]", ",", "\[DiamondSuit]", ",", "\[HeartSuit]", ",", 
     "\[SpadeSuit]"}], "}"}], ",", "%"}], "]"}]], "Input",
 CellLabel->"In[130]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[130]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"%", ",", "1"}], "]"}]], "Input",
 CellLabel->"In[131]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[131]="]
}, Open  ]],

Cell["\<\
Combining these operations, we can define cardDeck by combining the \
operations above.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cardDeck", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{"List", ",", 
      RowBox[{"{", 
       RowBox[{
       "\[ClubSuit]", ",", "\[DiamondSuit]", ",", "\[HeartSuit]", ",", 
        "\[SpadeSuit]"}], "}"}], ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"2", ",", "10"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[ScriptCapitalJ]", ",", "\[ScriptCapitalQ]", ",", 
          "\[ScriptCapitalK]", ",", "\[ScriptCapitalA]"}], "}"}]}], "]"}]}], 
     "]"}], ",", "1"}], "]"}]}]], "Input",
 CellLabel->"In[132]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[132]="]
}, Open  ]],

Cell["Shuffling a deck of cards", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Sort", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", "52"}], "]"}], ",", 
       "cardDeck"}], "}"}], "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Input",
 CellLabel->"In[133]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalJ]"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[133]="]
}, Open  ]],

Cell["\<\
Note: We can also shuffle a deck of cards using a transformation rule.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sort", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", "52"}], "]"}], ",", 
      "cardDeck"}], "}"}], "]"}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"_", ",", "y_"}], "}"}], "\[RuleDelayed]", "y"}]}]], "Input",
 CellLabel->"In[134]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[134]="]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Anonymous functions", "Subsection"],

Cell[TextData[{
 "User-defined ",
 StyleBox["anonymous functions",
  FontSlant->"Italic"],
 " can be created and used \[OpenCurlyQuote]on the spot\[CloseCurlyQuote] \
without being named or entered prior to being used."
}], "Text"],

Cell[TextData[{
 "An anonymous function is written using the same form as the rhs of a \
rewrite rule, replacing variable symbols with ",
 StyleBox["#1", "MR"],
 ", ",
 StyleBox["#2", "MR"],
 ", \[Ellipsis] and enclosing the expression in parentheses followed by an \
ampersand (",
 StyleBox["&", "MR"],
 ")."
}], "Text"],

Cell["\<\
This notation can be demonstrated by converting some simple user-defined \
functions into anonymous functions. For example, a rewrite rule that squared \
a value\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"square", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "2"}]}]], "Input",
 CellLabel->"In[135]:="],

Cell["\<\
can be written as an anonymous function and applied to an argument, eg., 5, \
instantly.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", "^", "2"}], ")"}], "&"}], "[", "5", "]"}]], "Input",
 CellLabel->"In[136]:="],

Cell[BoxData["25"], "Output",
 CellLabel->"Out[136]="]
}, Open  ]],

Cell["\<\
An example of an anonymous function with two arguments, raises the first \
argument to the power of the second argument.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#1", "^", "#2"}], ")"}], "&"}], "[", 
  RowBox[{"5", ",", "3"}], "]"}]], "Input",
 CellLabel->"In[137]:="],

Cell[BoxData["125"], "Output",
 CellLabel->"Out[137]="]
}, Open  ]],

Cell["\<\
It is important to distinguish between an anonymous function which takes \
multiple arguments and an anonymous function which takes a list with multiple \
elements as its argument.\
\>", "Text"],

Cell["\<\
For example, the anonymous function just given doesn\[CloseCurlyQuote]t work \
with an ordered pair argument.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#1", "^", "#2"}], ")"}], "&"}], "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], "]"}]], "Input",
 CellLabel->"In[138]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "::", "\<\"slotn\"\>"}], ":", 
  " ", "\<\"Slot number \\!\\(2\\) in \\!\\(#1\\^#2 &\\) cannot be filled \
from \\!\\(\\(\\((\\(#1\\^#2 &\\))\\)\\)[\\(\\({2, 3}\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Function::slotn\\\"]\\)\"\>"}]], \
"Message",
 CellLabel->"From In[138]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["2", "#2"], ",", 
   SuperscriptBox["3", "#2"]}], "}"}]], "Output",
 CellLabel->"Out[138]="]
}, Open  ]],

Cell["\<\
If we want to perform the operation on the components of an ordered pair, the \
appropriate anonymous function is\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "^", 
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], "]"}]], "Input",
 CellLabel->"In[139]:="],

Cell[BoxData["8"], "Output",
 CellLabel->"Out[139]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Nesting anonymous functions", "Subsection"],

Cell["\<\
Anonymous functions can be nested, in which case it is sometimes necessary to \
use the form\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", "body"}], "]"}]], "DisplayFormula"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "\[Ellipsis]"}], "}"}], ",", "body"}], 
  "]"}]], "DisplayFormula"],

Cell[TextData[{
 "rather than the ",
 StyleBox["#\[CenterDot]&", "MR"],
 " form, in order to distinguish between the arguments of the different \
anonymous functions."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", "^", "3"}], ")"}], "&"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "+", "2"}], ")"}], "&"}], "[", "3", "]"}], "]"}]], "Input",
 CellLabel->"In[140]:="],

Cell[BoxData["125"], "Output",
 CellLabel->"Out[140]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{"y", ",", 
    RowBox[{"y", "^", "3"}]}], "]"}], "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "+", "2"}]}], "]"}], "[", "3", "]"}], "]"}]], "Input",
 CellLabel->"In[141]:="],

Cell[BoxData["125"], "Output",
 CellLabel->"Out[141]="]
}, Open  ]],

Cell["The two forms can also be used together.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{"y", ",", 
    RowBox[{"y", "^", "3"}]}], "]"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "+", "2"}], ")"}], "&"}], "[", "3", "]"}], "]"}]], "Input",
 CellLabel->"In[142]:="],

Cell[BoxData["125"], "Output",
 CellLabel->"Out[142]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", "^", "3"}], ")"}], "&"}], "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "+", "2"}]}], "]"}], "[", "3", "]"}], "]"}]], "Input",
 CellLabel->"In[143]:="],

Cell[BoxData["125"], "Output",
 CellLabel->"Out[143]="]
}, Open  ]],

Cell["\<\
Anonymous functions are useful for making predicates and arguments for \
higher-order functions.\
\>", "Text"],

Cell[TextData[{
 "Note: An anonymous predicate function ",
 StyleBox["must",
  FontWeight->"Bold"],
 " be written using the ",
 StyleBox["#\[CenterDot]&", "MR"],
 " form."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Higher-order functions", "Subsection"],

Cell[TextData[{
 "A ",
 StyleBox["higher-order function",
  FontSlant->"Italic"],
 " takes a function as an argument and/or returns a function as a result. \
This is known as \[OpenCurlyQuote]treating functions as first-class objects\
\[CloseCurlyQuote]. We\[CloseCurlyQuote]ll illustrate the use of some of the \
most important built-in higher order functions."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Apply", "MB"]], "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Apply"}]], "Input",
 CellLabel->"In[144]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Apply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\) or \!\(\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"@@\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]}]\) replaces the head of \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) by \!\(\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"Apply\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]}], \\\"]\\\"}]\) or \!\(\
\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"@@@\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]}]\) replaces heads at level 1 of \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) by \!\(\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\).\\n\!\(\*RowBox[{\\\"Apply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\) replaces heads in parts of \!\(\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\) specified by \!\(\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\). \
\\n\!\(\*RowBox[{\\\"Apply\\\", \\\"[\\\", StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"]\\\"}]\) represents an operator form of Apply that can be applied to an \
expression.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Apply"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.615125306151009*^9},
 CellTags->"Info3615100106-4253237"]
}, Open  ]],

Cell[TextData[{
 "We have already seen ",
 StyleBox["Apply", "MR"],
 " used to add the elements of a linear list. Given a nested list argument, \
",
 StyleBox["Apply", "MR"],
 " can be used on the outer list or the interior lists. For example, for a \
general function, ",
 StyleBox["f", "MR"],
 ", and a nested list."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[145]:="],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d"}], "}"}]}], "]"}]], "Output",
 CellLabel->"Out[145]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}], ",", "2"}], "]"}]], "Input",
 CellLabel->"In[146]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"c", ",", "d"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[146]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Map", "MB"]], "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Map"}]], "Input",
 CellLabel->"In[147]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Map\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\) or \!\(\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"/@\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]}]\) applies \
\!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) to each element on the first level in \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"Map\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\) applies \!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) to \
parts of \!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) specified by \
\!\(\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\). \
\\n\!\(\*RowBox[{\\\"Map\\\", \\\"[\\\", StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"]\\\"}]\) represents an operator form of Map that can be applied to an \
expression.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Map"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6151253064932823`*^9},
 CellTags->"Info3615100106-4253237"]
}, Open  ]],

Cell[TextData[{
 "For a general function, ",
 StyleBox["f", "MR"],
 ", and a linear list."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[148]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", "b", "]"}], ",", 
   RowBox[{"f", "[", "c", "]"}], ",", 
   RowBox[{"f", "[", "d", "]"}]}], "}"}]], "Output",
 CellLabel->"Out[148]="]
}, Open  ]],

Cell[TextData[{
 "Note: An altrnative to using ",
 StyleBox["Map", "MR"],
 " with a function is to give the function the attribute of \[OpenCurlyQuote]",
 StyleBox["Listable", "MR"],
 "\[CloseCurlyQuote]"
}], "Text",
 CellChangeTimes->{{3.620843286433524*^9, 3.620843373049273*^9}, {
  3.620844138151403*^9, 3.620844144236157*^9}}],

Cell[TextData[{
 "For a nested list structure, ",
 StyleBox["Map", "MR"],
 " can be applied to either the outer list or to the interior lists, or to \
both. For example, for a general function ",
 StyleBox["g", "MR"],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[149]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[149]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellLabel->"In[150]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "[", "a", "]"}], ",", 
     RowBox[{"g", "[", "b", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "[", "c", "]"}], ",", 
     RowBox[{"g", "[", "d", "]"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[150]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["MapThread", "MB"]], "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MapThread"}]], "Input",
 CellLabel->"In[151]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"MapThread\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) gives \!\(\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}], \\\",\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]\). \\n\!\(\*RowBox[{\\\"MapThread\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"expr\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\) applies \!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) \
to the parts of the \!\(\*SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\) at level \!\(\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/MapThread"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6151253066869917`*^9},
 CellTags->"Info3615100106-4253237"]
}, Open  ]],

Cell[TextData[{
 "For a general function, ",
 StyleBox["g", "MR"],
 ", and a nested list."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[152]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"a", ",", "x"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"b", ",", "y"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"c", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[152]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"List", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[153]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "z"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[153]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"Plus", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[154]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "+", "x"}], ",", 
   RowBox[{"b", "+", "y"}], ",", 
   RowBox[{"c", "+", "z"}]}], "}"}]], "Output",
 CellLabel->"Out[154]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["NestList", "MB"],
 " and ",
 StyleBox["Nest", "MB"]
}], "Subsubsection"],

Cell[TextData[{
 StyleBox["Nest", "MR"],
 " performs a nested function call, applying the same function repeatedly."
}], "Text"],

Cell[TextData[{
 "The ",
 StyleBox["Nest", "MR"],
 " operation applies a function to a value, then applies the function to the \
result, and then applies the function to that result and then applies\
\[Ellipsis] and so on a specified number of times."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NestList"}]], "Input",
 CellLabel->"In[155]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"NestList\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) gives \
a list of the results of applying \!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) to \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) 0 through \
\!\(\*StyleBox[\\\"n\\\", \\\"TI\\\"]\) times. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NestList"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.615125306900384*^9},
 CellTags->"Info3615100106-4253237"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7", ",", 
   RowBox[{"Sin", "[", "0.7", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"Sin", "[", "0.7", "]"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"Sin", "[", 
     RowBox[{"Sin", "[", "0.7", "]"}], "]"}], "]"}]}], "}"}]], "Input",
 CellLabel->"In[156]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7`", ",", "0.644217687237691`", ",", "0.6005731086610715`", ",", 
   "0.5651153876289311`"}], "}"}]], "Output",
 CellLabel->"Out[156]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"Sin", ",", "0.7", ",", "3"}], "]"}]], "Input",
 CellLabel->"In[157]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7`", ",", "0.644217687237691`", ",", "0.6005731086610715`", ",", 
   "0.5651153876289311`"}], "}"}]], "Output",
 CellLabel->"Out[157]="]
}, Open  ]],

Cell[TextData[{
 "If we are only interested in the final result of the ",
 StyleBox["NestList", "MR"],
 " operation, we can use the ",
 StyleBox["Nest", "MR"],
 " function which does not return the intermediate results."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Nest"}]], "Input",
 CellLabel->"In[158]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Nest\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) gives an expression with \
\!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) applied \!\(\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\) times to \!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\). \"\>", 
   "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Nest"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6151253070851793`*^9},
 CellTags->"Info3615100107-4253237"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{"Sin", ",", "0.7", ",", "3"}], "]"}]], "Input",
 CellLabel->"In[159]:="],

Cell[BoxData["0.5651153876289311`"], "Output",
 CellLabel->"Out[159]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["FixedPointList", "MB"],
 " and ",
 StyleBox["FixedPoint", "MB"]
}], "Subsubsection"],

Cell[TextData[{
 "The ",
 StyleBox["Nest", "MR"],
 " operation does not stop until it has completed a specified number of \
function applications. There is another function which performs the ",
 StyleBox["Nest", "MR"],
 " operation, stopping after whichever of the following occurs first: (a) \
there have been a specified number of function applications, (b) the result \
stops changing, or (c) some predicate condition is met."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FixedPointList"}]], "Input",
 CellLabel->"In[160]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"FixedPointList\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\) generates a list giving the results of applying \!\
\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) repeatedly, starting with \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\), until the results no longer \
change. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FixedPointList"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.615125307217195*^9},
 CellTags->"Info3615100107-4253237"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FixedPoint"}]], "Input",
 CellLabel->"In[161]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"FixedPoint\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\) starts with \!\(\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\), then applies \!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) \
repeatedly until the result no longer changes. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FixedPoint"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6151253073814507`*^9},
 CellTags->"Info3615100107-4253237"]
}, Open  ]],

Cell["As an example,", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixedPointList", "[", 
  RowBox[{"Sin", ",", "0.7", ",", "5", ",", 
   RowBox[{"SameTest", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#2", "<", "0.65"}], "&"}], ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[162]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7`", ",", "0.644217687237691`"}], "}"}]], "Output",
 CellLabel->"Out[162]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixedPointList", "[", 
  RowBox[{"Sin", ",", "0.7", ",", "5", ",", 
   RowBox[{"SameTest", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#1", "-", "#2"}], ")"}], "<", "0.045"}], "&"}], ")"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[163]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7`", ",", "0.644217687237691`", ",", "0.6005731086610715`"}], 
  "}"}]], "Output",
 CellLabel->"Out[163]="]
}, Open  ]],

Cell[TextData[{
 "Note: In these examples, ",
 StyleBox["#1", "MR"],
 " refers to the next-to-last element in the list being generated and ",
 StyleBox["#2", "MR"],
 " refers to the last element in the list."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["FoldList", "MB"],
 " and ",
 StyleBox["Fold", "MB"]
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FoldList"}]], "Input",
 CellLabel->"In[164]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"FoldList\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\
\\\"], \\\",\\\", StyleBox[\\\"b\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) gives \
\!\(\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"a\\\", \
\\\"TI\\\"]}], \\\"]\\\"}], \\\",\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\"[\\\", RowBox[{RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"[\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"a\
\\\", \\\"TI\\\"]}], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"b\\\", \
\\\"TI\\\"]}], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"}\\\"}]\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FoldList"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.615125307544899*^9},
 CellTags->"Info3615100107-4253237"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Fold"}]], "Input",
 CellLabel->"In[165]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Fold\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) gives the last element of \
\!\(\*RowBox[{\\\"FoldList\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\
\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"]}], \\\"]\\\"}]\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Fold"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.615125307642467*^9},
 CellTags->"Info3615100107-4253237"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["Fold", "MR"],
 " operation takes a function, a value and a list, applies the function to \
the value, and then applies the function to the result and the first element \
of the list, and then applies the function to the result and the second \
element of the list and so on. For example,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{"Plus", ",", "0", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[166]:="],

Cell[BoxData[
 RowBox[{"a", "+", "b", "+", "c", "+", "d"}]], "Output",
 CellLabel->"Out[166]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{"Plus", ",", "0", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[167]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "a", ",", 
   RowBox[{"a", "+", "b"}], ",", 
   RowBox[{"a", "+", "b", "+", "c"}], ",", 
   RowBox[{"a", "+", "b", "+", "c", "+", "d"}]}], "}"}]], "Output",
 CellLabel->"Out[167]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{"Plus", ",", "0", ",", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "5"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[168]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2"}], 
  "}"}]], "Output",
 CellLabel->"Out[168]="]
}, Open  ]],

Cell[TextData[{
 "(what is the value of ",
 StyleBox["RandomInteger[{0,1},5]", "MR"],
 " here?  it is ",
 StyleBox["{1,0,1,0,0}", "MR"],
 ")"
}], "SubitemParagraph",
 CellChangeTimes->{{3.619845941450139*^9, 3.619846097163928*^9}, {
   3.620330603364328*^9, 3.6203306364909353`*^9}, {3.620330677141447*^9, 
   3.620330733893406*^9}, {3.620330766006897*^9, 3.620330810271851*^9}, {
   3.620330909700424*^9, 3.6203309175860786`*^9}, {3.620377408210025*^9, 
   3.6203774312483673`*^9}, {3.62046622959682*^9, 3.620466296966332*^9}, 
   3.620466411329114*^9, {3.620466513427266*^9, 3.620466546986621*^9}, {
   3.620500426615745*^9, 3.620500441797989*^9}, 3.6205790406073303`*^9, {
   3.620915210382238*^9, 3.620915299733862*^9}, 3.620915338656026*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Examples of Wolfram Language Programs ", "Section",
 CellChangeTimes->{
  3.593004361237628*^9, {3.5930044069894447`*^9, 3.5930044229856033`*^9}, {
   3.593080436045002*^9, 3.593080448058872*^9}, {3.593080480715946*^9, 
   3.593080485144903*^9}, {3.5931601258453608`*^9, 3.5931601265135317`*^9}, {
   3.5946271398527517`*^9, 3.5946271641904287`*^9}, {3.594627303037993*^9, 
   3.5946273262561827`*^9}, {3.594627540115177*^9, 3.594627540713091*^9}, {
   3.5946275710872507`*^9, 3.594627576095964*^9}, 3.615050199025478*^9}],

Cell[TextData[{
 "The Game of Life (GoL) is undoubtably, the most famous cellular automaton \
(CA) and watching the GoL program run offers deep insight into fundamental \
tenets concerning the modeling of natural phenomena.",
 StyleBox[" ",
  FontFamily->"ArialMT",
  FontColor->RGBColor[0., 0., 0.]],
 "The GoL was created in 1969 by the mathematician John Conway and was \
published in Martin Gardner\[CloseCurlyQuote]s Scientific American column \
(see ",
 ButtonBox["www.maa.org/sites/default/files/pdf/pubs/focus/Gardner_\
GameofLife10-1970.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.maa.org/sites/default/files/pdf/pubs/focus/Gardner_\
GameofLife10-1970.pdf"], None},
  ButtonNote->
   "http://www.maa.org/sites/default/files/pdf/pubs/focus/Gardner_\
GameofLife10-1970.pdf"],
 "). The GoL can be described as follows:"
}], "Text",
 CellChangeTimes->{{3.5839197861461287`*^9, 3.58391978672232*^9}, {
   3.5929006328843927`*^9, 3.592900792508523*^9}, 3.592915801311129*^9, {
   3.592915866799477*^9, 3.592915884696843*^9}, 3.5929273904070387`*^9, {
   3.5929376180593233`*^9, 3.592937713611916*^9}, 3.593004283243411*^9, {
   3.593082688421229*^9, 3.593082770678403*^9}, {3.593082936642099*^9, 
   3.593082987435966*^9}, {3.593083273595868*^9, 3.5930834099802713`*^9}, {
   3.593083503248187*^9, 3.593083550390872*^9}, {3.593083637531147*^9, 
   3.5930836391868153`*^9}, {3.593083979724278*^9, 3.593084031744502*^9}, {
   3.593084062605529*^9, 3.593084072664751*^9}, {3.5930865541535883`*^9, 
   3.593086592957543*^9}, {3.593086629049327*^9, 3.5930866361248083`*^9}, {
   3.593161523678331*^9, 3.5931615550732517`*^9}, {3.5946278301369343`*^9, 
   3.5946278517447853`*^9}, {3.594628055302923*^9, 3.594628224158161*^9}, {
   3.594664787600877*^9, 3.594664849172236*^9}, {3.594708765088235*^9, 
   3.594708853753599*^9}, {3.594708894493927*^9, 3.594708961713604*^9}, {
   3.594709042555409*^9, 3.59470908243819*^9}, {3.594713383394498*^9, 
   3.594713385183483*^9}, {3.594713430142362*^9, 3.594713432398213*^9}, {
   3.594713473271957*^9, 3.594713551903245*^9}, {3.594714039318221*^9, 
   3.594714138744768*^9}, {3.594714183975623*^9, 3.594714193151417*^9}, 
   3.594714251892426*^9, {3.594714309859215*^9, 3.594714344546905*^9}, {
   3.594714450769052*^9, 3.5947144736103287`*^9}, {3.594714641814039*^9, 
   3.594714654315857*^9}, {3.594714694779044*^9, 3.594714704469241*^9}, {
   3.5947150181814947`*^9, 3.594715056171082*^9}, {3.594715442345374*^9, 
   3.59471554153207*^9}, {3.594715577507358*^9, 3.594715578728684*^9}, {
   3.594716554479106*^9, 3.594716562915885*^9}, {3.6151255497437153`*^9, 
   3.615125560158423*^9}}],

Cell["\<\
On an \[OpenCurlyQuote]n by n\[CloseCurlyQuote] two-dimensional square grid \
(aka \[OpenCurlyQuote]checkerboard\[CloseCurlyQuote]), each of the n^2 cells \
(aka \[OpenCurlyQuote]sites\[CloseCurlyQuote]) can have two possible values, \
0 (aka a \[OpenCurlyQuote]dead\[CloseCurlyQuote] cell) or 1 (aka a \
\[OpenCurlyQuote]live\[CloseCurlyQuote] cell). On each time step, the values \
of all of the cells are updated simultaneously, based on the value of a cell \
and the sum of the values of the cells adjacent to (i.e. touching) the cell \
being updated. The neighborhood\[CloseCurlyQuote] of a cell is comprised of \
the 8 nearest-neighbor (nn) cells, lying north, northeast, east, southeast, \
south, southwest, west, and northwest of the cell (these nn cells comprise \
what is known as the Moore neighborhood). The rules governing the updating \
are as follows:\
\>", "Text",
 CellChangeTimes->{{3.592832733354199*^9, 3.592833079547461*^9}, {
   3.5928331388387136`*^9, 3.592833271083305*^9}, {3.592833306281707*^9, 
   3.592833371352126*^9}, {3.5928334445775843`*^9, 3.592833729866879*^9}, {
   3.592833865021173*^9, 3.592833902453424*^9}, {3.592834087716146*^9, 
   3.592834227752385*^9}, {3.592834300706991*^9, 3.592834352630232*^9}, {
   3.5928376785189037`*^9, 3.592837824945373*^9}, 3.592927390408266*^9, {
   3.593004438354672*^9, 3.593004524379828*^9}, {3.593004566059208*^9, 
   3.593004696543633*^9}, {3.593004735543646*^9, 3.5930048888004436`*^9}, {
   3.5930840904943438`*^9, 3.593084137991358*^9}, {3.593084173109105*^9, 
   3.593084231467559*^9}, {3.593084288031577*^9, 3.5930844084433403`*^9}, {
   3.593085586861732*^9, 3.593085611684175*^9}, {3.593085642004807*^9, 
   3.5930856427036552`*^9}, {3.593085689161571*^9, 3.593085801045697*^9}, {
   3.5931602087247477`*^9, 3.5931602091566267`*^9}, {3.593160248040469*^9, 
   3.593160275330768*^9}, {3.5931603058488398`*^9, 3.593160308514429*^9}, {
   3.594628260565424*^9, 3.5946283061660748`*^9}, {3.59471357520229*^9, 
   3.5947136153448277`*^9}, {3.5947147109030733`*^9, 3.594714731927382*^9}, {
   3.594714827001604*^9, 3.594714962963194*^9}, {3.5947156694069633`*^9, 
   3.594715739241893*^9}, {3.594715783494891*^9, 3.5947157929870157`*^9}, {
   3.594715833000944*^9, 3.5947159165230827`*^9}, {3.5947159891424913`*^9, 
   3.5947159929017*^9}, 3.594716624866795*^9, 3.6151256048252897`*^9}],

Cell[CellGroupData[{

Cell["\<\
if a cell is alive and has exactly two living nn cell, the cell remains alive \
(if its value is 1, it remains 1).\
\>", "ItemNumbered",
 CellChangeTimes->{{3.592832733354199*^9, 3.592833079547461*^9}, {
   3.5928331388387136`*^9, 3.592833271083305*^9}, {3.592833306281707*^9, 
   3.592833371352126*^9}, {3.5928334445775843`*^9, 3.592833729866879*^9}, {
   3.592833865021173*^9, 3.592833902453424*^9}, {3.592834087716146*^9, 
   3.592834227752385*^9}, {3.592834300706991*^9, 3.592834352630232*^9}, {
   3.5928376785189037`*^9, 3.592837824945373*^9}, 3.592927390408266*^9, {
   3.593004438354672*^9, 3.593004524379828*^9}, {3.593004566059208*^9, 
   3.593004696543633*^9}, {3.593004735543646*^9, 3.5930048888004436`*^9}, {
   3.5930840904943438`*^9, 3.593084137991358*^9}, {3.593084173109105*^9, 
   3.593084231467559*^9}, {3.593084288031577*^9, 3.5930844084433403`*^9}, {
   3.593085586861732*^9, 3.593085611684175*^9}, {3.593085642004807*^9, 
   3.5930856427036552`*^9}, {3.593085689161571*^9, 3.593085801045697*^9}, {
   3.5931602087247477`*^9, 3.5931602091566267`*^9}, {3.593160248040469*^9, 
   3.593160275330768*^9}, {3.5931603058488398`*^9, 3.593160308514429*^9}, {
   3.594628260565424*^9, 3.5946283061660748`*^9}, {3.59471357520229*^9, 
   3.5947136153448277`*^9}, {3.5947147109030733`*^9, 3.594714731927382*^9}, {
   3.594714827001604*^9, 3.594714962963194*^9}, {3.5947156694069633`*^9, 
   3.594715739241893*^9}, {3.594715783494891*^9, 3.5947157929870157`*^9}, {
   3.594715833000944*^9, 3.5947159165230827`*^9}, {3.5947159891424913`*^9, 
   3.5947159929017*^9}, 3.594716624866795*^9, {3.6151256048252897`*^9, 
   3.615125606057132*^9}, 3.615125639426002*^9}],

Cell["\<\
if a cell has exactly three living nn sites, the cell remains alive (if its \
value is 1, it remains 1) or is 'born' and becomes alive (if its value is 0, \
it changes to 1).\
\>", "ItemNumbered",
 CellChangeTimes->{{3.592832733354199*^9, 3.592833079547461*^9}, {
   3.5928331388387136`*^9, 3.592833271083305*^9}, {3.592833306281707*^9, 
   3.592833371352126*^9}, {3.5928334445775843`*^9, 3.592833729866879*^9}, {
   3.592833865021173*^9, 3.592833902453424*^9}, {3.592834087716146*^9, 
   3.592834227752385*^9}, {3.592834300706991*^9, 3.592834352630232*^9}, {
   3.5928376785189037`*^9, 3.592837824945373*^9}, 3.592927390408266*^9, {
   3.593004438354672*^9, 3.593004524379828*^9}, {3.593004566059208*^9, 
   3.593004696543633*^9}, {3.593004735543646*^9, 3.5930048888004436`*^9}, {
   3.5930840904943438`*^9, 3.593084137991358*^9}, {3.593084173109105*^9, 
   3.593084231467559*^9}, {3.593084288031577*^9, 3.5930844084433403`*^9}, {
   3.593085586861732*^9, 3.593085611684175*^9}, {3.593085642004807*^9, 
   3.5930856427036552`*^9}, {3.593085689161571*^9, 3.593085801045697*^9}, {
   3.5931602087247477`*^9, 3.5931602091566267`*^9}, {3.593160248040469*^9, 
   3.593160275330768*^9}, {3.5931603058488398`*^9, 3.593160308514429*^9}, {
   3.594628260565424*^9, 3.5946283061660748`*^9}, {3.59471357520229*^9, 
   3.5947136153448277`*^9}, {3.5947147109030733`*^9, 3.594714731927382*^9}, {
   3.594714827001604*^9, 3.594714962963194*^9}, {3.5947156694069633`*^9, 
   3.594715739241893*^9}, {3.594715783494891*^9, 3.5947157929870157`*^9}, {
   3.594715833000944*^9, 3.5947159165230827`*^9}, {3.5947159891424913`*^9, 
   3.5947159929017*^9}, 3.594716624866795*^9, {3.6151256048252897`*^9, 
   3.6151256072412443`*^9}, 3.615125642048258*^9, {3.615126805958941*^9, 
   3.615126807229576*^9}, 3.620918083983165*^9}],

Cell["\<\
any other cell either remains dead (if its value is 0, it remains 0) or \
'dies' and becomes dead (if its value is 1, it changes to 0). \
\>", "ItemNumbered",
 CellChangeTimes->{{3.592832733354199*^9, 3.592833079547461*^9}, {
   3.5928331388387136`*^9, 3.592833271083305*^9}, {3.592833306281707*^9, 
   3.592833371352126*^9}, {3.5928334445775843`*^9, 3.592833729866879*^9}, {
   3.592833865021173*^9, 3.592833902453424*^9}, {3.592834087716146*^9, 
   3.592834227752385*^9}, {3.592834300706991*^9, 3.592834352630232*^9}, {
   3.5928376785189037`*^9, 3.592837824945373*^9}, 3.592927390408266*^9, {
   3.593004438354672*^9, 3.593004524379828*^9}, {3.593004566059208*^9, 
   3.593004696543633*^9}, {3.593004735543646*^9, 3.5930048888004436`*^9}, {
   3.5930840904943438`*^9, 3.593084137991358*^9}, {3.593084173109105*^9, 
   3.593084231467559*^9}, {3.593084288031577*^9, 3.5930844084433403`*^9}, {
   3.593085586861732*^9, 3.593085611684175*^9}, {3.593085642004807*^9, 
   3.5930856427036552`*^9}, {3.593085689161571*^9, 3.593085801045697*^9}, {
   3.5931602087247477`*^9, 3.5931602091566267`*^9}, {3.593160248040469*^9, 
   3.593160275330768*^9}, {3.5931603058488398`*^9, 3.593160308514429*^9}, {
   3.594628260565424*^9, 3.5946283061660748`*^9}, {3.59471357520229*^9, 
   3.5947136153448277`*^9}, {3.5947147109030733`*^9, 3.594714731927382*^9}, {
   3.594714827001604*^9, 3.594714962963194*^9}, {3.5947156694069633`*^9, 
   3.594715739241893*^9}, {3.594715783494891*^9, 3.5947157929870157`*^9}, {
   3.594715833000944*^9, 3.5947159165230827`*^9}, {3.5947159891424913`*^9, 
   3.5947159929017*^9}, 3.594716624866795*^9, {3.6151256048252897`*^9, 
   3.6151256072412443`*^9}, 3.615125644088111*^9}]
}, Open  ]],

Cell["\<\
Note: T.H. Huxley\[CloseCurlyQuote]s statement that \
\[OpenCurlyDoubleQuote]The chess-board is the world; the pieces are the \
phenomena of the universe; the rules of the game are what we call the laws of \
Nature\[CloseCurlyDoubleQuote] is often used in conjunction with cellular \
automata; however, this is an incorrect, or at least imprecise, analogy \
because in a CA, it is the values of the cells themselves that we are \
conerned with.  \
\>", "Text",
 CellChangeTimes->{{3.5839197861461287`*^9, 3.58391978672232*^9}, {
   3.5929006328843927`*^9, 3.592900792508523*^9}, 3.592915801311129*^9, {
   3.592915866799477*^9, 3.592915884696843*^9}, 3.5929273904070387`*^9, {
   3.5929376180593233`*^9, 3.592937713611916*^9}, 3.593004283243411*^9, {
   3.593082688421229*^9, 3.593082770678403*^9}, {3.593082936642099*^9, 
   3.593082987435966*^9}, {3.593083273595868*^9, 3.5930834099802713`*^9}, {
   3.593083503248187*^9, 3.593083550390872*^9}, {3.593083637531147*^9, 
   3.5930836391868153`*^9}, {3.593083979724278*^9, 3.593084031744502*^9}, {
   3.593084062605529*^9, 3.593084072664751*^9}, {3.5930865541535883`*^9, 
   3.593086592957543*^9}, {3.593086629049327*^9, 3.5930866361248083`*^9}, {
   3.593161523678331*^9, 3.5931615550732517`*^9}, {3.5946278301369343`*^9, 
   3.5946278517447853`*^9}, {3.594628055302923*^9, 3.594628224158161*^9}, {
   3.594664787600877*^9, 3.594664849172236*^9}, {3.594708765088235*^9, 
   3.594708853753599*^9}, {3.594708894493927*^9, 3.594708961713604*^9}, {
   3.594709042555409*^9, 3.59470908243819*^9}, {3.594713383394498*^9, 
   3.594713385183483*^9}, {3.594713430142362*^9, 3.594713432398213*^9}, {
   3.594713473271957*^9, 3.594713551903245*^9}, {3.594714039318221*^9, 
   3.594714138744768*^9}, {3.594714183975623*^9, 3.594714193151417*^9}, 
   3.594714251892426*^9, {3.594714309859215*^9, 3.594714344546905*^9}, {
   3.594714450769052*^9, 3.5947144736103287`*^9}, {3.594714641814039*^9, 
   3.594714654315857*^9}, {3.594714694779044*^9, 3.594714704469241*^9}, {
   3.5947150181814947`*^9, 3.594715172103539*^9}, {3.594715224719522*^9, 
   3.594715367622705*^9}, {3.594716651624167*^9, 3.594716700507968*^9}, {
   3.594716733740808*^9, 3.594716784111264*^9}, 3.615125673651349*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["\<\
Creating Four Wolfram Language Programs for \[OpenCurlyQuote]The Game of Life\
\[CloseCurlyQuote]\
\>", "Subsection",
 CellChangeTimes->{
  3.593004361237628*^9, {3.5930044069894447`*^9, 3.5930044229856033`*^9}, {
   3.593080436045002*^9, 3.593080448058872*^9}, {3.593080480715946*^9, 
   3.593080485144903*^9}, {3.5931601258453608`*^9, 3.5931601265135317`*^9}, 
   3.5946275677891903`*^9, {3.594628231455304*^9, 3.594628238094173*^9}, {
   3.594716842395503*^9, 3.5947168799490232`*^9}, 3.61505020016953*^9}],

Cell[TextData[{
 "The ",
 StyleBox["LifeGame",
  FontColor->RGBColor[1, 0, 1]],
 " program is basically a straightforward implementation of GoL employing the \
rule-making, array-processing and pattern-matching capabilities of ",
 "Wolfram Language",
 "."
}], "Text",
 CellChangeTimes->{{3.592916324389196*^9, 3.592916465860799*^9}, {
   3.592920213801086*^9, 3.592920275294703*^9}, 3.5929273904102287`*^9, {
   3.5929274996164*^9, 3.59292776354187*^9}, {3.592927801630146*^9, 
   3.592927804654133*^9}, {3.593005340623889*^9, 3.5930053959630337`*^9}, {
   3.5930054805685596`*^9, 3.593005490056114*^9}, {3.5930865346754637`*^9, 
   3.593086539390524*^9}, {3.593087807943323*^9, 3.593087816080563*^9}, {
   3.593087861381205*^9, 3.593087876037385*^9}, {3.593088873991043*^9, 
   3.59308888246996*^9}, 3.593148393014999*^9, {3.5945825660741577`*^9, 
   3.5945825720313873`*^9}, {3.594665067803092*^9, 3.594665068579603*^9}, {
   3.594716935585227*^9, 3.5947169732943373`*^9}, 3.615050201752512*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["LifeGame",
    FontColor->RGBColor[1, 0, 1]], "[", 
   RowBox[{"n_", ",", " ", 
    StyleBox[
     RowBox[{
      StyleBox["steps",
       FontSlant->"Plain"], "_"}]]}], "]"}], " ", ":=", "\[IndentingNewLine]",
   "   ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"gameboard", ",", " ", "liveNeighbors", ",", " ", "update"}], 
     "}"}], ",", "\[IndentingNewLine]", "       ", 
    RowBox[{
     RowBox[{"gameboard", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Random", "[", "Integer", "]"}], ",", 
        RowBox[{"{", "n", "}"}], ",", 
        RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "       ", 
     RowBox[{
      RowBox[{"liveNeighbors", "[", "mat_", "]"}], " ", ":=", " ", 
      RowBox[{"Apply", "[", 
       RowBox[{"Plus", ",", "  ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotateRight", "[", 
            RowBox[{"mat", ",", " ", "#"}], "]"}], "&"}], ",", 
          "\[IndentingNewLine]", "  ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "1"}], "}"}]}], "}"}]}], "]"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", "       ", 
     RowBox[{
      RowBox[{"update", "[", 
       RowBox[{"1", ",", " ", "2"}], "]"}], " ", ":=", "1"}], ";", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{
      RowBox[{"update", "[", 
       RowBox[{"_", ",", " ", "3"}], "]"}], " ", ":=", "1"}], ";", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{
      RowBox[{"update", "[", 
       RowBox[{"_", ",", " ", "_"}], "]"}], " ", ":=", "0"}], ";", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"update", ",", " ", "Listable"}], "]"}], ";", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"update", "[", 
         RowBox[{"#", ",", 
          RowBox[{"liveNeighbors", "[", "#", "]"}]}], "]"}], "&"}], ",", 
       "gameboard", ",", "steps"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.592755441527939*^9, 3.592755786377408*^9}, 
   3.592756022646226*^9, {3.592756499544012*^9, 3.59275650597158*^9}, 
   3.5927567046802673`*^9, 3.592927390409719*^9, {3.592951210825197*^9, 
   3.5929512125479393`*^9}, {3.5929591583676643`*^9, 3.592959174150341*^9}, {
   3.592959342416761*^9, 3.592959370424464*^9}, {3.593005014746395*^9, 
   3.593005053450954*^9}, {3.593072570200335*^9, 3.593072578873446*^9}, 
   3.593072619264956*^9, {3.594554314137157*^9, 3.59455435290683*^9}, {
   3.5945584603976727`*^9, 3.594558461963468*^9}, {3.594705817580407*^9, 
   3.594705828859666*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["bowlOfCherries ",
  FontColor->RGBColor[1, 0, 0]],
 "program is a \[OpenCurlyQuote]one-liner\[CloseCurlyQuote], employing a \
nested anonymous (aka pure) function which uses the shorthand notation (...)& \
and is comprised of three other anonymous functions which are written using \
Function with one formal parameter (Function[x, ...], Function[y, ...] and \
Function[z, ...])."
}], "Text",
 CellChangeTimes->{{3.59292004268255*^9, 3.592920046246204*^9}, {
   3.592927372565711*^9, 3.59292739041472*^9}, 3.593009007720735*^9, {
   3.593088056875661*^9, 3.593088097370967*^9}, {3.593088270479659*^9, 
   3.593088318867684*^9}, {3.593088353208302*^9, 3.593088402894381*^9}, {
   3.593088856131646*^9, 3.593088860411003*^9}, {3.5930889448209352`*^9, 
   3.5930889469636517`*^9}, {3.593088997505341*^9, 3.593088997957757*^9}, {
   3.593089207235773*^9, 3.5930892564720707`*^9}, {3.593148330575244*^9, 
   3.5931483448851833`*^9}, {3.593161091890315*^9, 3.5931611015915833`*^9}, {
   3.593161134959901*^9, 3.593161159179542*^9}, {3.59456925838939*^9, 
   3.594569278413159*^9}, 3.594578803810585*^9, {3.594582618833275*^9, 
   3.594582667820704*^9}, 3.594665120004274*^9, {3.594665163626412*^9, 
   3.594665169874164*^9}, {3.5946655764442577`*^9, 3.594665599884701*^9}, {
   3.5947170638339767`*^9, 3.594717066283167*^9}, {3.5947171104578743`*^9, 
   3.594717262447095*^9}, {3.594717294513381*^9, 3.5947173250985613`*^9}, {
   3.594717358886799*^9, 3.59471736936375*^9}, {3.5947174115544643`*^9, 
   3.5947175199977207`*^9}, {3.594717554721911*^9, 3.5947175987509403`*^9}, 
   3.594717724625963*^9, {3.594717763044793*^9, 3.594717771911365*^9}, {
   3.594717838371085*^9, 3.5947178731174393`*^9}, 3.5947179697928343`*^9, {
   3.594721221707967*^9, 3.594721406002266*^9}, {3.59472676683037*^9, 
   3.59472681281763*^9}, {3.61512571022791*^9, 3.6151257260364027`*^9}}],

Cell["\<\
The behaviors of the three anonymous functions nested within the outermost \
anonymous function, do can be readily discerned by referring to the LifeGame \
program:\
\>", "Text",
 CellChangeTimes->{{3.59292004268255*^9, 3.592920046246204*^9}, {
   3.592927372565711*^9, 3.59292739041472*^9}, 3.593009007720735*^9, {
   3.593088056875661*^9, 3.593088097370967*^9}, {3.593088270479659*^9, 
   3.593088318867684*^9}, {3.593088353208302*^9, 3.593088402894381*^9}, {
   3.593088856131646*^9, 3.593088860411003*^9}, {3.5930889448209352`*^9, 
   3.5930889469636517`*^9}, {3.593088997505341*^9, 3.593088997957757*^9}, {
   3.593089207235773*^9, 3.5930892564720707`*^9}, {3.593148330575244*^9, 
   3.5931483448851833`*^9}, {3.593161091890315*^9, 3.5931611015915833`*^9}, {
   3.593161134959901*^9, 3.593161159179542*^9}, {3.59456925838939*^9, 
   3.594569278413159*^9}, 3.594578803810585*^9, {3.594582618833275*^9, 
   3.594582667820704*^9}, 3.594665120004274*^9, {3.594665163626412*^9, 
   3.594665169874164*^9}, {3.5946655764442577`*^9, 3.594665599884701*^9}, {
   3.5947170638339767`*^9, 3.594717066283167*^9}, {3.5947171104578743`*^9, 
   3.594717262447095*^9}, {3.594717294513381*^9, 3.5947173250985613`*^9}, {
   3.594717358886799*^9, 3.59471736936375*^9}, {3.5947174115544643`*^9, 
   3.5947175199977207`*^9}, {3.594717554721911*^9, 3.5947175987509403`*^9}, 
   3.594717724625963*^9, {3.594717763044793*^9, 3.594717771911365*^9}, {
   3.594717838371085*^9, 3.5947178731174393`*^9}, 3.5947179697928343`*^9, {
   3.594721221707967*^9, 3.594721406002266*^9}, {3.59472676683037*^9, 
   3.59472681281763*^9}, {3.61512571022791*^9, 3.6151257260364027`*^9}}],

Cell["\<\
Values of the sum of each cell's eight nn cells (0 thru 8) are calculated by \
adding together the results of eight rotations of the gameboard matrix (the \
values of the sums are the same as the values determined using liveNeighbors \
in LifeGame). \
\>", "Text",
 CellChangeTimes->{{3.59292004268255*^9, 3.592920046246204*^9}, {
   3.592927372565711*^9, 3.59292739041472*^9}, 3.593009007720735*^9, {
   3.593088056875661*^9, 3.593088097370967*^9}, {3.593088270479659*^9, 
   3.593088318867684*^9}, {3.593088353208302*^9, 3.593088402894381*^9}, {
   3.593088856131646*^9, 3.593088860411003*^9}, {3.5930889448209352`*^9, 
   3.5930889469636517`*^9}, {3.593088997505341*^9, 3.593088997957757*^9}, {
   3.593089207235773*^9, 3.5930892564720707`*^9}, {3.593148330575244*^9, 
   3.5931483448851833`*^9}, {3.593161091890315*^9, 3.5931611015915833`*^9}, {
   3.593161134959901*^9, 3.593161159179542*^9}, {3.59456925838939*^9, 
   3.594569278413159*^9}, 3.594578803810585*^9, {3.594582618833275*^9, 
   3.594582667820704*^9}, 3.594665120004274*^9, {3.594665163626412*^9, 
   3.594665169874164*^9}, {3.5946655764442577`*^9, 3.594665599884701*^9}, {
   3.5947170638339767`*^9, 3.594717066283167*^9}, {3.5947171104578743`*^9, 
   3.594717262447095*^9}, {3.594717294513381*^9, 3.5947173250985613`*^9}, {
   3.594717358886799*^9, 3.59471736936375*^9}, {3.5947174115544643`*^9, 
   3.5947175199977207`*^9}, {3.594717554721911*^9, 3.5947175987509403`*^9}, 
   3.594717724625963*^9, {3.594717763044793*^9, 3.594717771911365*^9}, {
   3.594717838371085*^9, 3.5947178731174393`*^9}, 3.5947179697928343`*^9, {
   3.594721221707967*^9, 3.594721406002266*^9}, {3.59472676683037*^9, 
   3.59472681281763*^9}, {3.61512571022791*^9, 3.615125713660124*^9}}],

Cell["\<\
Ordered pairs are created, in each of which the first element is the value of \
a cell (0 or 1) and the second element is the sum of the values (0 thru 8) of \
the cell's eight nn cells (the two elements in each ordered pair are the same \
as the two arguments used in the update rules of LifeGame). \
\>", "Text",
 CellChangeTimes->{{3.59292004268255*^9, 3.592920046246204*^9}, {
   3.592927372565711*^9, 3.59292739041472*^9}, 3.593009007720735*^9, {
   3.593088056875661*^9, 3.593088097370967*^9}, {3.593088270479659*^9, 
   3.593088318867684*^9}, {3.593088353208302*^9, 3.593088402894381*^9}, {
   3.593088856131646*^9, 3.593088860411003*^9}, {3.5930889448209352`*^9, 
   3.5930889469636517`*^9}, {3.593088997505341*^9, 3.593088997957757*^9}, {
   3.593089207235773*^9, 3.5930892564720707`*^9}, {3.593148330575244*^9, 
   3.5931483448851833`*^9}, {3.593161091890315*^9, 3.5931611015915833`*^9}, {
   3.593161134959901*^9, 3.593161159179542*^9}, {3.59456925838939*^9, 
   3.594569278413159*^9}, 3.594578803810585*^9, {3.594582618833275*^9, 
   3.594582667820704*^9}, 3.594665120004274*^9, {3.594665163626412*^9, 
   3.594665169874164*^9}, {3.5946655764442577`*^9, 3.594665599884701*^9}, {
   3.5947170638339767`*^9, 3.594717066283167*^9}, {3.5947171104578743`*^9, 
   3.594717262447095*^9}, {3.594717294513381*^9, 3.5947173250985613`*^9}, {
   3.594717358886799*^9, 3.59471736936375*^9}, {3.5947174115544643`*^9, 
   3.5947175199977207`*^9}, {3.594717554721911*^9, 3.5947175987509403`*^9}, 
   3.594717724625963*^9, {3.594717763044793*^9, 3.594717771911365*^9}, {
   3.594717838371085*^9, 3.5947178731174393`*^9}, 3.5947179697928343`*^9, {
   3.594721221707967*^9, 3.594721406002266*^9}, {3.59472676683037*^9, 
   3.59472681281763*^9}, {3.61512571022791*^9, 3.6151257376924953`*^9}}],

Cell["\<\
Transformation rules are applied to each of the ordered pairs (the rules are \
analagous to the update rules of LifeGame).\
\>", "Text",
 CellChangeTimes->{{3.59292004268255*^9, 3.592920046246204*^9}, {
   3.592927372565711*^9, 3.59292739041472*^9}, 3.593009007720735*^9, {
   3.593088056875661*^9, 3.593088097370967*^9}, {3.593088270479659*^9, 
   3.593088318867684*^9}, {3.593088353208302*^9, 3.593088402894381*^9}, {
   3.593088856131646*^9, 3.593088860411003*^9}, {3.5930889448209352`*^9, 
   3.5930889469636517`*^9}, {3.593088997505341*^9, 3.593088997957757*^9}, {
   3.593089207235773*^9, 3.5930892564720707`*^9}, {3.593148330575244*^9, 
   3.5931483448851833`*^9}, {3.593161091890315*^9, 3.5931611015915833`*^9}, {
   3.593161134959901*^9, 3.593161159179542*^9}, {3.59456925838939*^9, 
   3.594569278413159*^9}, 3.594578803810585*^9, {3.594582618833275*^9, 
   3.594582667820704*^9}, 3.594665120004274*^9, {3.594665163626412*^9, 
   3.594665169874164*^9}, {3.5946655764442577`*^9, 3.594665599884701*^9}, {
   3.5947170638339767`*^9, 3.594717066283167*^9}, {3.5947171104578743`*^9, 
   3.594717262447095*^9}, {3.594717294513381*^9, 3.5947173250985613`*^9}, {
   3.594717358886799*^9, 3.59471736936375*^9}, {3.5947174115544643`*^9, 
   3.5947175199977207`*^9}, {3.594717554721911*^9, 3.5947175987509403`*^9}, 
   3.594717724625963*^9, {3.594717763044793*^9, 3.594717771911365*^9}, {
   3.594717838371085*^9, 3.5947178731174393`*^9}, 3.5947179697928343`*^9, {
   3.594721221707967*^9, 3.594721406002266*^9}, {3.59472676683037*^9, 
   3.59472681281763*^9}, {3.61512571022791*^9, 3.6151257376924953`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["bowlOfCherries",
    FontColor->RGBColor[1, 0, 0]], "[", 
   RowBox[{"n_", ",", " ", 
    StyleBox[
     RowBox[{
      StyleBox["steps",
       FontSlant->"Plain"], "_"}]]}], "]"}], " ", ":=", " ", 
  RowBox[{"Nest", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", " ", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"x", ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"y", ",", " ", 
                 RowBox[{"Apply", "[", 
                  RowBox[{"Plus", ",", "  ", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"z", ",", " ", 
                    RowBox[{"RotateRight", "[", 
                    RowBox[{"y", ",", " ", "z"}], "]"}]}], "]"}], ",", " ", 
                    "\[IndentingNewLine]", "  ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", " ", 
                    RowBox[{"-", "1"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", 
                    RowBox[{"-", "1"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"-", "1"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "1"}], "}"}]}], "}"}]}], "]"}]}], 
                  "]"}]}], "]"}], "[", "x", "]"}]}], "}"}]}], "]"}], "[", "#",
           "]"}], ",", " ", "2"}], "]"}], " ", "/.", "     ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "2"}], "}"}], " ", "->", " ", "1"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", " ", "3"}], "}"}], " ", "->", " ", "1"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", " ", "_"}], "}"}], " ", "->", " ", "0"}]}], 
        "}"}]}], ")"}], "&"}], ",", " ", "\[IndentingNewLine]", 
    "                                                                ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", "Integer", "]"}], ",", 
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{"{", "n", "}"}]}], "]"}], ",", " ", 
    StyleBox["steps",
     FontSlant->"Plain"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.592951263043418*^9, 3.592951272637694*^9}, {
   3.592951306198867*^9, 3.5929513180615807`*^9}, {3.5929560446265*^9, 
   3.592956053236343*^9}, {3.592959513316743*^9, 3.5929595138615713`*^9}, 
   3.5930727040469017`*^9, {3.593079688379113*^9, 3.593079689436348*^9}, 
   3.5931485595272503`*^9, {3.5932574629857492`*^9, 3.5932575084717293`*^9}, 
   3.594542628643057*^9, {3.594556652431108*^9, 3.5945566820542316`*^9}, {
   3.594556747378702*^9, 3.594556814775807*^9}, {3.594556903075933*^9, 
   3.594556906471389*^9}, {3.594558498968499*^9, 3.5945585004190903`*^9}, {
   3.594664967977511*^9, 3.5946649914540787`*^9}, 3.5947058468576937`*^9, 
   3.594705907343314*^9}],

Cell[TextData[{
 "The ",
 StyleBox["OblaDeOblaDa",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 " program creates and then employs a lookup table comprised of 512 update \
rules, one for each of the 2^9 possible configurations of a cell and its \
eight nearest-neighbor cells."
}], "Text",
 CellChangeTimes->{{3.594578842256369*^9, 3.594578980765502*^9}, {
   3.5945800942816896`*^9, 3.594580388903104*^9}, 3.594582248995722*^9, {
   3.5945827622066717`*^9, 3.59458276735982*^9}, {3.594582797905201*^9, 
   3.594582815557782*^9}, 3.5946651985687723`*^9, 3.594665994429242*^9, {
   3.594718009098118*^9, 3.5947180218776503`*^9}, {3.594718053155446*^9, 
   3.5947180650475893`*^9}, {3.594726848905203*^9, 3.594726849725297*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["OblaDeOblaDa",
    FontColor->RGBColor[0.6, 0.4, 0.2]], "[", 
   RowBox[{"n_", ",", " ", 
    StyleBox[
     RowBox[{
      StyleBox["steps",
       FontSlant->"Plain"], "_"}]]}], "]"}], ":=", "  ", "\n", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gameboard", ",", " ", "Moore", ",", " ", "update", ",", " ", 
      "LiveConfigs", ",", " ", "DieConfigs"}], "}"}], ",", "\n", "     ", 
    RowBox[{
     RowBox[{"gameboard", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Random", "[", "Integer", "]"}], ",", 
        RowBox[{"{", "n", "}"}], ",", 
        RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LiveConfigs", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "0", "}"}], ",", " ", "#"}], "]"}], "&"}], ",", " ", 
          RowBox[{"Permutations", "[", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", " ", "1", ",", " ", "1", ",", " ", "0", ",", " ", "0", 
             ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], "]"}]}], 
         "]"}], ",", " ", "\n", "                                    ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "1", "}"}], ",", " ", "#"}], "]"}], "&"}], ",", " ", 
          RowBox[{"Permutations", "[", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", " ", "1", ",", " ", "1", ",", " ", "0", ",", " ", "0", 
             ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], "]"}]}], 
         "]"}], ",", " ", "\n", "                                    ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "1", "}"}], ",", " ", "#"}], "]"}], "&"}], ",", " ", 
          RowBox[{"Permutations", "[", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", " ", "1", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
             ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], "]"}]}], 
         "]"}]}], " ", "]"}]}], ";", "\n", "    ", 
     RowBox[{"DieConfigs", " ", "=", " ", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"Permutations", ",", " ", "\n", "                 ", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{"1", ",", " ", 
                   RowBox[{"{", "#", "}"}]}], "]"}], ",", " ", 
                 RowBox[{"Table", "[", 
                  RowBox[{"0", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"(", 
                    RowBox[{"9", " ", "-", " ", "#"}], ")"}], "}"}]}], 
                  "]"}]}], " ", "]"}], "&"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "9"}], "]"}]}], "]"}]}], "]"}], ",", 
          " ", "1"}], "]"}], ",", " ", "LiveConfigs"}], "]"}]}], ";", " ", 
     "\n", "    ", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"update", "[", "##", "]"}], " ", "=", " ", "1"}], ")"}], 
        "&"}], ",", " ", "LiveConfigs", ",", " ", "1"}], "]"}], ";", "  ", 
     "\n", "    ", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"update", "[", "##", "]"}], " ", "=", " ", "0"}], ")"}], 
        "&"}], ",", " ", "DieConfigs", ",", " ", "1"}], "]"}], ";", " ", "\n",
      "    ", 
     RowBox[{
      RowBox[{"Moore", "[", 
       RowBox[{"func__", ",", " ", "lat_"}], "]"}], " ", ":=", "   ", "\n", 
      "        ", 
      RowBox[{"MapThread", "[", 
       RowBox[{"func", ",", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotateRight", "[", 
            RowBox[{"lat", ",", " ", "#"}], "]"}], "&"}], ",", " ", "\n", 
          "            ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "  ", 
              RowBox[{"-", "1"}]}], "}"}], ",", "     ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "1"}], "}"}]}], "}"}]}], "]"}], ",", " ", 
        "2"}], "]"}]}], ";", "\n", "   ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Moore", "[", 
         RowBox[{"update", ",", " ", "#"}], "]"}], "&"}], ",", " ", 
       "gameboard", ",", 
       StyleBox["steps",
        FontSlant->"Plain"]}], "]"}]}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.594554028616446*^9, 3.5945540286213703`*^9}, {
   3.594554084143937*^9, 3.594554131709326*^9}, {3.594554228989585*^9, 
   3.594554281268448*^9}, 3.594554527589962*^9, {3.594554574135808*^9, 
   3.594554579828629*^9}, {3.594556864388598*^9, 3.5945568832912827`*^9}, {
   3.594558472192288*^9, 3.594558489312415*^9}, {3.594559031122241*^9, 
   3.59455904698002*^9}, 3.594705850619596*^9, 3.59470591381536*^9, {
   3.5947070126175423`*^9, 3.594707021804599*^9}, {3.594707411953126*^9, 
   3.594707436572772*^9}}],

Cell["\<\
note: A GoL program in Wolfram Language that is very much faster than any of \
the three \[OpenCurlyQuote]home-brewed\[CloseCurlyQuote] programs above, uses \
Wolfram Language\[CloseCurlyQuote]s built-in CellularAutomaton function.\
\>", "Text",
 CellChangeTimes->{{3.594578842256369*^9, 3.594578980765502*^9}, {
   3.5945800942816896`*^9, 3.594580388903104*^9}, 3.594582248995722*^9, {
   3.5945827622066717`*^9, 3.59458276735982*^9}, {3.594582797905201*^9, 
   3.594582815557782*^9}, 3.5946651985687723`*^9, 3.594665994429242*^9, {
   3.594718009098118*^9, 3.5947180218776503`*^9}, {3.594718053155446*^9, 
   3.5947180650475893`*^9}, {3.594718308869568*^9, 3.594718448388423*^9}, {
   3.5947185560027847`*^9, 3.594718579902981*^9}, {3.594718639985222*^9, 
   3.5947189741924973`*^9}, {3.5947190049313707`*^9, 3.594719108322246*^9}, {
   3.594719173528324*^9, 3.594719229566142*^9}, {3.594719278791183*^9, 
   3.5947192814129763`*^9}, {3.594720884165678*^9, 3.59472094070789*^9}, {
   3.59472147265831*^9, 3.594721487738699*^9}, {3.594726874484776*^9, 
   3.5947268763003263`*^9}, {3.596352852606368*^9, 3.5963528629877977`*^9}, {
   3.596353039695963*^9, 3.596353040303916*^9}, {3.5991209506691713`*^9, 
   3.599120951819508*^9}, {3.599125682854144*^9, 3.599125738882401*^9}, 
   3.599125980585369*^9, {3.599126162213859*^9, 3.599126185034543*^9}, {
   3.5991262296637697`*^9, 3.599126240921134*^9}, {3.599165741954289*^9, 
   3.5991657698551598`*^9}, {3.599165997038522*^9, 3.5991660174502277`*^9}, {
   3.599166229721572*^9, 3.599166235312016*^9}, {3.599204581545168*^9, 
   3.599204610693781*^9}, {3.599204689285913*^9, 3.599204689934175*^9}, {
   3.615050203184947*^9, 3.615050204346051*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["WLLife",
    FontColor->RGBColor[0.5, 0, 0.5]], "[", 
   RowBox[{"n_", ",", " ", 
    StyleBox[
     StyleBox[
      RowBox[{
       StyleBox["steps",
        FontSlant->"Plain"], "_"}]],
     FontColor->RGBColor[0, 0, 1]]}], "]"}], " ", ":=", 
  RowBox[{"CellularAutomaton", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"224", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", "Integer", "]"}], ",", 
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{"{", "n", "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       StyleBox["steps",
        FontSlant->"Plain"], "}"}], "}"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5945574525097933`*^9, 3.594557452514682*^9}, 
   3.59455749855803*^9, {3.59455792206483*^9, 3.594557962467525*^9}, {
   3.594558055579303*^9, 3.5945580743188887`*^9}, 3.594558106189736*^9, {
   3.5945581913018303`*^9, 3.594558241680768*^9}, 3.5947058687752447`*^9, 
   3.594705921828732*^9}],

Cell[TextData[{
 "Unfortuntely, it is not clear (to me) what the arguments used in the \
one-liner CellularAutomaton version of GoL represent, what algorithm is being \
used, or if the algorithm is implemented in Wolfram Language or in another \
programming language (such as C). It would be interesting to compare the \
speed of running the GoL in WLLife with the speed of running the GoL in the \
blazingly fast \[OpenCurlyQuote]Golly\[CloseCurlyQuote] app (see ",
 ButtonBox["golly.sourceforge.net",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://golly.sourceforge.net"], None},
  ButtonNote->"http://golly.sourceforge.net"],
 " and also ",
 ButtonBox["www.drdobbs.com/jvm/an-algorithm-for-compressing-space-and-t/\
184406478",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.drdobbs.com/jvm/an-algorithm-for-compressing-space-and-t/\
184406478"], None},
  ButtonNote->
   "http://www.drdobbs.com/jvm/an-algorithm-for-compressing-space-and-t/\
184406478"],
 ")."
}], "Text",
 CellChangeTimes->{{3.594578842256369*^9, 3.594578980765502*^9}, {
   3.5945800942816896`*^9, 3.594580388903104*^9}, 3.594582248995722*^9, {
   3.5945827622066717`*^9, 3.59458276735982*^9}, {3.594582797905201*^9, 
   3.594582815557782*^9}, 3.5946651985687723`*^9, 3.594665994429242*^9, {
   3.594718009098118*^9, 3.5947180218776503`*^9}, {3.594718053155446*^9, 
   3.5947180650475893`*^9}, {3.594718308869568*^9, 3.594718448388423*^9}, {
   3.5947185560027847`*^9, 3.594718579902981*^9}, {3.594718639985222*^9, 
   3.5947189741924973`*^9}, {3.5947190049313707`*^9, 3.594719108322246*^9}, {
   3.594719173528324*^9, 3.594719229566142*^9}, {3.594719292073498*^9, 
   3.5947194934797707`*^9}, {3.594719527218195*^9, 3.5947195543088017`*^9}, {
   3.5947197092374496`*^9, 3.594719725979117*^9}, {3.594720153301605*^9, 
   3.594720333155053*^9}, {3.594720370560763*^9, 3.5947204768881493`*^9}, {
   3.594720534554983*^9, 3.5947205692901707`*^9}, {3.594720620570985*^9, 
   3.594720663073173*^9}, {3.594720723108819*^9, 3.594720776445202*^9}, {
   3.594720807960485*^9, 3.594720873667658*^9}, {3.594720959205873*^9, 
   3.5947209752911158`*^9}, {3.5947210074618464`*^9, 3.594721056915359*^9}, {
   3.594721518164125*^9, 3.5947216081939087`*^9}, {3.5947216561973*^9, 
   3.594721658699642*^9}, {3.5947274585308847`*^9, 3.5947275017856293`*^9}, {
   3.596352639318349*^9, 3.59635279925393*^9}, {3.599125762674177*^9, 
   3.599125836326635*^9}, {3.599165788223175*^9, 3.599165790367975*^9}, {
   3.599165821571383*^9, 3.599165827805448*^9}, {3.5991660426651697`*^9, 
   3.599166045043564*^9}, 3.599166077176319*^9, 3.599166274496149*^9, {
   3.599166443170169*^9, 3.5991664433370037`*^9}, 3.6150502074581347`*^9, 
   3.6151257616691437`*^9, {3.6151257922210703`*^9, 3.615125810614376*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["End notes on GoL: ", "Subsection",
 CellChangeTimes->{{3.5929908087355013`*^9, 3.5929908131936398`*^9}, {
   3.592990900900844*^9, 3.59299098723682*^9}, {3.5929910265506144`*^9, 
   3.5929911671410093`*^9}, {3.592992573832179*^9, 3.592992612032967*^9}, {
   3.593094093856452*^9, 3.5930940998460493`*^9}, {3.593094178964245*^9, 
   3.5930942444090137`*^9}, {3.593094920777274*^9, 3.593094981693488*^9}, {
   3.593095063633442*^9, 3.59309506600522*^9}, {3.593095600891583*^9, 
   3.593095624200231*^9}, 3.59309700663616*^9, 3.5930994370219593`*^9, {
   3.593151168021166*^9, 3.5931511706858387`*^9}, {3.593151207837358*^9, 
   3.593151640566144*^9}, {3.593161270600831*^9, 3.5931613560643682`*^9}, {
   3.593161404261489*^9, 3.593161431218151*^9}, {3.593162409947176*^9, 
   3.5931624231853647`*^9}, {3.593257393533543*^9, 3.593257397209385*^9}, {
   3.5945810119757423`*^9, 3.594581326159971*^9}, {3.594581400825383*^9, 
   3.594581471346148*^9}, 3.594581731126725*^9, {3.5945817749126453`*^9, 
   3.594581801419931*^9}, {3.594581858335133*^9, 3.594581859441855*^9}, {
   3.59458528383687*^9, 3.5945853730400143`*^9}, 3.594585441566947*^9, {
   3.594587684746522*^9, 3.59458791946815*^9}, {3.594587963007662*^9, 
   3.594588001089641*^9}, {3.5945881326344147`*^9, 3.5945881359513893`*^9}, {
   3.5946660161578617`*^9, 3.5946660174064617`*^9}, {3.594707694090784*^9, 
   3.5947077208494787`*^9}, {3.594707766148741*^9, 3.5947077978197613`*^9}, {
   3.5947210820651093`*^9, 3.594721083011587*^9}, {3.594721731737404*^9, 
   3.594721736395492*^9}, 3.615125858199161*^9, 3.615126752614078*^9}],

Cell[TextData[{
 "The use of the built-in Compile function might speed up some of the GoL \
programs (see ",
 ButtonBox["www.cs.berkeley.edu/~fateman/papers/cashort.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.cs.berkeley.edu/~fateman/papers/cashort.pdf"], None},
  ButtonNote->"http://www.cs.berkeley.edu/~fateman/papers/cashort.pdf"],
 " (note: the Lisp version of the forest fire CA program given therein is IMO \
repulsive and speaks to the benefit of programming in Wolfram Language) and \
",
 ButtonBox["mathematica.stackexchange.com/questions/1803/how-to-compile-\
effectively",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/questions/1803/how-to-compile-\
effectively"], None},
  ButtonNote->
   "http://mathematica.stackexchange.com/questions/1803/how-to-compile-\
effectively"],
 " and ",
 ButtonBox["blog.wolfram.com/2011/12/07/10-tips-for-writing-fast-mathematica-\
code/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://blog.wolfram.com/2011/12/07/10-tips-for-writing-fast-\
mathematica-code/"], None},
  ButtonNote->
   "http://blog.wolfram.com/2011/12/07/10-tips-for-writing-fast-mathematica-\
code/"],
 "). "
}], "Text",
 CellChangeTimes->{{3.5929908087355013`*^9, 3.5929908131936398`*^9}, {
   3.592990900900844*^9, 3.59299098723682*^9}, {3.5929910265506144`*^9, 
   3.5929911671410093`*^9}, {3.592992573832179*^9, 3.592992612032967*^9}, {
   3.593094093856452*^9, 3.5930940998460493`*^9}, {3.593094178964245*^9, 
   3.5930942444090137`*^9}, {3.593094920777274*^9, 3.593094981693488*^9}, {
   3.593095063633442*^9, 3.59309506600522*^9}, {3.593095600891583*^9, 
   3.593095624200231*^9}, 3.59309700663616*^9, 3.5930994370219593`*^9, {
   3.593151168021166*^9, 3.5931511706858387`*^9}, {3.593151207837358*^9, 
   3.593151640566144*^9}, {3.593161270600831*^9, 3.5931613560643682`*^9}, {
   3.593161404261489*^9, 3.593161431218151*^9}, {3.593162409947176*^9, 
   3.5931624231853647`*^9}, {3.593257393533543*^9, 3.593257397209385*^9}, {
   3.5945810119757423`*^9, 3.594581326159971*^9}, {3.594581400825383*^9, 
   3.594581471346148*^9}, 3.594581731126725*^9, {3.5945817749126453`*^9, 
   3.594581801419931*^9}, {3.594581858335133*^9, 3.594581859441855*^9}, {
   3.59458528383687*^9, 3.5945853730400143`*^9}, 3.594585441566947*^9, {
   3.594587684746522*^9, 3.59458791946815*^9}, {3.594587963007662*^9, 
   3.594588001089641*^9}, {3.5945881326344147`*^9, 3.5945881359513893`*^9}, {
   3.5946660161578617`*^9, 3.5946660174064617`*^9}, {3.594707694090784*^9, 
   3.5947077208494787`*^9}, {3.594707766148741*^9, 3.594707774849835*^9}, 
   3.594720651739872*^9, 3.594721089707204*^9, {3.594721676224285*^9, 
   3.594721716807946*^9}, {3.594721776762869*^9, 3.594721884957768*^9}, 
   3.594722007871089*^9, 3.594722044584159*^9, {3.594724404148921*^9, 
   3.594724423075304*^9}, {3.5947263872075367`*^9, 3.594726432048995*^9}, {
   3.595836695199993*^9, 3.595836703807282*^9}, {3.59583673679744*^9, 
   3.59583675578249*^9}, 3.59583679951807*^9, 3.599125869835518*^9, {
   3.59912628333457*^9, 3.5991262882893257`*^9}, {3.5991661424245253`*^9, 
   3.599166152870729*^9}, {3.599203766489794*^9, 3.599203774898169*^9}, {
   3.599203865715963*^9, 3.59920386891201*^9}, {3.59920425141397*^9, 
   3.599204341458407*^9}, {3.599204387091138*^9, 3.599204388075747*^9}, {
   3.599204482381233*^9, 3.599204494509387*^9}, {3.5992047214069633`*^9, 
   3.59920476340944*^9}, {3.599204886404426*^9, 3.5992049446399603`*^9}, {
   3.599205125382593*^9, 3.599205170596217*^9}, {3.599205205982965*^9, 
   3.599205216067086*^9}, 3.615050211122212*^9, {3.6151258816000338`*^9, 
   3.615125892469079*^9}, {3.6151259260171213`*^9, 3.615125954899178*^9}}],

Cell[TextData[{
 "GoL programs written in other programming languages can be found at ",
 ButtonBox["rosettacode.org/wiki/Conway\[CloseCurlyQuote]s_Game _of _Life",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://rosettacode.org/wiki/Conway's_Game_of_Life"], None},
  ButtonNote->"http://rosettacode.org/wiki/Conway's_Game_of_Life"],
 "."
}], "Text",
 CellChangeTimes->{{3.5929908087355013`*^9, 3.5929908131936398`*^9}, {
   3.592990900900844*^9, 3.59299098723682*^9}, {3.5929910265506144`*^9, 
   3.5929911671410093`*^9}, {3.592992573832179*^9, 3.592992612032967*^9}, {
   3.593094093856452*^9, 3.5930940998460493`*^9}, {3.593094178964245*^9, 
   3.5930942444090137`*^9}, {3.593094920777274*^9, 3.593094981693488*^9}, {
   3.593095063633442*^9, 3.59309506600522*^9}, {3.593095600891583*^9, 
   3.593095624200231*^9}, 3.59309700663616*^9, 3.5930994370219593`*^9, {
   3.593151168021166*^9, 3.5931511706858387`*^9}, {3.593151207837358*^9, 
   3.593151640566144*^9}, {3.593161270600831*^9, 3.5931613560643682`*^9}, {
   3.593161404261489*^9, 3.593161431218151*^9}, {3.593162409947176*^9, 
   3.5931624231853647`*^9}, {3.593257393533543*^9, 3.593257397209385*^9}, {
   3.5945810119757423`*^9, 3.594581326159971*^9}, {3.594581400825383*^9, 
   3.594581471346148*^9}, 3.594581731126725*^9, {3.5945817749126453`*^9, 
   3.594581801419931*^9}, {3.594581858335133*^9, 3.594581859441855*^9}, {
   3.59458528383687*^9, 3.5945853730400143`*^9}, 3.594585441566947*^9, {
   3.594587684746522*^9, 3.59458791946815*^9}, {3.594587963007662*^9, 
   3.594588001089641*^9}, {3.5945881326344147`*^9, 3.5945881359513893`*^9}, {
   3.5946660161578617`*^9, 3.5946660174064617`*^9}, {3.594707694090784*^9, 
   3.5947077208494787`*^9}, {3.594707766148741*^9, 3.594707774849835*^9}, 
   3.594720651739872*^9, 3.594721089707204*^9, {3.594721676224285*^9, 
   3.594721716807946*^9}, {3.594722010988394*^9, 3.594722120597324*^9}, {
   3.594722174370988*^9, 3.594722529753867*^9}, {3.5947226209306498`*^9, 
   3.594722773791039*^9}, {3.594722923470932*^9, 3.594723045199912*^9}, {
   3.594723185360973*^9, 3.5947234815859528`*^9}, {3.594723740883431*^9, 
   3.5947239640451612`*^9}, {3.594724002523615*^9, 3.594724127937766*^9}, {
   3.5947241945994596`*^9, 3.5947242021775303`*^9}, {3.59472443046493*^9, 
   3.594724440014311*^9}, {3.594724524238098*^9, 3.594724527084176*^9}, {
   3.594724930623905*^9, 3.594724970518659*^9}, {3.5947250017122583`*^9, 
   3.594725015031138*^9}, {3.594725092481423*^9, 3.594725241314106*^9}, {
   3.594725514572608*^9, 3.594725531350493*^9}, {3.594725600623336*^9, 
   3.594725611479129*^9}, {3.594725742240047*^9, 3.59472581791123*^9}, {
   3.5947259263984127`*^9, 3.594725990092453*^9}, {3.5947264721747932`*^9, 
   3.594726546739291*^9}, 3.594727165434895*^9, 3.594727262030817*^9, 
   3.594727294906432*^9, {3.594727394624736*^9, 3.5947274429959383`*^9}, {
   3.595836632498691*^9, 3.595836633323907*^9}, {3.615126006418894*^9, 
   3.615126013293489*^9}}],

Cell[TextData[{
 "Finally, as an philosophical aside, the GoL is relevant to fundamental \
issues in the natural sciences, such as emergent phenomena, theoretical \
modeling of behavior in natural systems, and the nature of reality. For those \
individuals interested in this, see the book: \[OpenCurlyDoubleQuote]The \
Grand Design\[CloseCurlyDoubleQuote] by Stephen Hawking and Leonard Mlodinow \
(the relevant section in this book can also be found at ",
 ButtonBox["aminotes.tumblr.com/post/27848853009/s-hawking-l-mlodinow-on-why-\
is-there-something",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://aminotes.tumblr.com/post/27848853009/s-hawking-l-mlodinow-on-\
why-is-there-something"], None},
  ButtonNote->
   "http://aminotes.tumblr.com/post/27848853009/s-hawking-l-mlodinow-on-why-\
is-there-something"],
 "), and the two articles by Israeli and Goldenfeld: \
\[OpenCurlyDoubleQuote]Computational Irreducibility and the predictability of \
complex physical systems\[CloseCurlyDoubleQuote] in Physical Review Letters, \
92(7), 074105 (2004) (accessible at ",
 ButtonBox["arxiv.org/pdf/nlin/0309047.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://arxiv.org/pdf/nlin/0309047.pdf"], None},
  ButtonNote->"http://arxiv.org/pdf/nlin/0309047.pdf"],
 ") and \[OpenCurlyDoubleQuote]Coarse-graining of cellular automata, \
emergence, and the predictability of complex systems\[CloseCurlyDoubleQuote] \
in Physical Review E, 73, 026203 (2006) (accessible at ",
 ButtonBox["arxiv.org/pdf/nlin/0508033.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://arxiv.org/pdf/nlin/0508033.pdf"], None},
  ButtonNote->"http://arxiv.org/pdf/nlin/0508033.pdf"],
 ")."
}], "Text",
 CellChangeTimes->{{3.5929908087355013`*^9, 3.5929908131936398`*^9}, {
   3.592990900900844*^9, 3.59299098723682*^9}, {3.5929910265506144`*^9, 
   3.5929911671410093`*^9}, {3.592992573832179*^9, 3.592992612032967*^9}, {
   3.593094093856452*^9, 3.5930940998460493`*^9}, {3.593094178964245*^9, 
   3.5930942444090137`*^9}, {3.593094920777274*^9, 3.593094981693488*^9}, {
   3.593095063633442*^9, 3.59309506600522*^9}, {3.593095600891583*^9, 
   3.593095624200231*^9}, 3.59309700663616*^9, 3.5930994370219593`*^9, {
   3.593151168021166*^9, 3.5931511706858387`*^9}, {3.593151207837358*^9, 
   3.593151640566144*^9}, {3.593161270600831*^9, 3.5931613560643682`*^9}, {
   3.593161404261489*^9, 3.593161431218151*^9}, {3.593162409947176*^9, 
   3.5931624231853647`*^9}, {3.593257393533543*^9, 3.593257397209385*^9}, {
   3.5945810119757423`*^9, 3.594581326159971*^9}, {3.594581400825383*^9, 
   3.594581471346148*^9}, 3.594581731126725*^9, {3.5945817749126453`*^9, 
   3.594581801419931*^9}, {3.594581858335133*^9, 3.594581859441855*^9}, {
   3.594585484560073*^9, 3.594585611673135*^9}, {3.594588030841021*^9, 
   3.594588129104855*^9}, {3.594726029446477*^9, 3.5947260310887947`*^9}, {
   3.594726139626422*^9, 3.5947263655275908`*^9}, {3.5947265895306253`*^9, 
   3.594726591054804*^9}, {3.596353241631654*^9, 3.5963532508797007`*^9}, 
   3.596353294593029*^9, 3.596353328332259*^9, {3.599125909130303*^9, 
   3.5991259096627283`*^9}, {3.599205277299161*^9, 3.599205286714555*^9}, {
   3.6151260306521063`*^9, 3.6151260730690203`*^9}, {3.615126104982985*^9, 
   3.615126104991953*^9}}]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{1280, 720},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
TaggingRules->{"SlideShow" -> True},
CellLabelAutoDelete->False,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[579, 22, 4346, 97, 2, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[5378, 138, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[6534, 173, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[7712, 213, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[12655, 376, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[13990, 432, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[16122, 523, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[20757, 684, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[21594, 723, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[24143, 841, 92, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[33008, 1114, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[34848, 1188, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[38431, 1314, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[44786, 1582, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[46480, 1657, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[48127, 1730, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[48743, 1761, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[53336, 1957, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[54938, 2009, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[75663, 2793, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[90670, 3367, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[92347, 3431, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[95129, 3537, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[100949, 3754, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[101933, 3783, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[110873, 4082, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[116274, 4256, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[117168, 4293, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[120036, 4395, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[145774, 5172, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[149290, 5316, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[151840, 5434, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[175262, 6194, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[188436, 6411, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[219060, 7064, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]},
 "Info3615029250-7810207"->{
  Cell[10257, 315, 1612, 27, 146, "Print",
   CellTags->"Info3615029250-7810207"]},
 "Info3615034107-2903092"->{
  Cell[57020, 2099, 118, 2, 61, "Print",
   CellTags->"Info3615034107-2903092"],
  Cell[57141, 2103, 832, 24, 41, "Print",
   CellTags->"Info3615034107-2903092"],
  Cell[58119, 2139, 122, 2, 61, "Print",
   CellTags->"Info3615034107-2903092"],
  Cell[58244, 2143, 853, 24, 41, "Print",
   CellTags->"Info3615034107-2903092"],
  Cell[60346, 2215, 444, 11, 91, "Print",
   CellTags->"Info3615034107-2903092"]},
 "Info3615034108-4922696"->{
  Cell[63422, 2346, 122, 2, 61, "Print",
   CellTags->"Info3615034108-4922696"],
  Cell[63547, 2350, 760, 21, 41, "Print",
   CellTags->"Info3615034108-4922696"],
  Cell[65980, 2433, 122, 2, 61, "Print",
   CellTags->"Info3615034108-4922696"],
  Cell[66105, 2437, 838, 24, 41, "Print",
   CellTags->"Info3615034108-4922696"],
  Cell[67085, 2473, 118, 2, 61, "Print",
   CellTags->"Info3615034108-4922696"],
  Cell[67206, 2477, 832, 24, 41, "Print",
   CellTags->"Info3615034108-4922696"],
  Cell[68424, 2523, 118, 2, 61, "Print",
   CellTags->"Info3615034108-4922696"],
  Cell[68545, 2527, 830, 24, 41, "Print",
   CellTags->"Info3615034108-4922696"],
  Cell[69517, 2563, 120, 2, 61, "Print",
   CellTags->"Info3615034108-4922696"],
  Cell[69640, 2567, 829, 24, 41, "Print",
   CellTags->"Info3615034108-4922696"]},
 "Info3615034108-8845393"->{
  Cell[71833, 2646, 124, 2, 61, "Print",
   CellTags->"Info3615034108-8845393"],
  Cell[71960, 2650, 750, 21, 41, "Print",
   CellTags->"Info3615034108-8845393"]},
 "Info3615034108-5357437"->{
  Cell[73046, 2691, 122, 2, 61, "Print",
   CellTags->"Info3615034108-5357437"],
  Cell[73171, 2695, 750, 21, 41, "Print",
   CellTags->"Info3615034108-5357437"]},
 "Info3615034109-5357437"->{
  Cell[74962, 2765, 118, 2, 61, "Print",
   CellTags->"Info3615034109-5357437"]},
 "Info3615036800-5357437"->{
  Cell[77463, 2860, 118, 2, 61, "Print",
   CellTags->"Info3615036800-5357437"],
  Cell[77584, 2864, 1020, 30, 92, "Print",
   CellTags->"Info3615036800-5357437"],
  Cell[79517, 2934, 435, 11, 91, "Print",
   CellTags->"Info3615036800-5357437"],
  Cell[81271, 3003, 118, 2, 61, "Print",
   CellTags->"Info3615036800-5357437"],
  Cell[81392, 3007, 910, 27, 92, "Print",
   CellTags->"Info3615036800-5357437"],
  Cell[82784, 3066, 118, 2, 61, "Print",
   CellTags->"Info3615036800-5357437"],
  Cell[82905, 3070, 910, 27, 92, "Print",
   CellTags->"Info3615036800-5357437"],
  Cell[84472, 3130, 118, 2, 61, "Print",
   CellTags->"Info3615036800-5357437"],
  Cell[84593, 3134, 778, 22, 41, "Print",
   CellTags->"Info3615036800-5357437"]},
 "Info3615036801-5357437"->{
  Cell[86008, 3194, 118, 2, 61, "Print",
   CellTags->"Info3615036801-5357437"],
  Cell[86129, 3198, 779, 22, 41, "Print",
   CellTags->"Info3615036801-5357437"],
  Cell[88171, 3271, 118, 2, 61, "Print",
   CellTags->"Info3615036801-5357437"],
  Cell[88292, 3275, 904, 26, 44, "Print",
   CellTags->"Info3615036801-5357437"],
  Cell[89316, 3311, 118, 2, 61, "Print",
   CellTags->"Info3615036801-5357437"],
  Cell[89734, 3334, 118, 2, 61, "Print",
   CellTags->"Info3615036801-5357437"],
  Cell[89855, 3338, 742, 21, 41, "Print",
   CellTags->"Info3615036801-5357437"]},
 "Info3615037674-5357437"->{
  Cell[94122, 3496, 118, 2, 61, "Print",
   CellTags->"Info3615037674-5357437"],
  Cell[94521, 3517, 117, 2, 61, "Print",
   CellTags->"Info3615037674-5357437"]},
 "Info3298628331-9832253"->{
  Cell[96628, 3586, 62, 1, 42, "Print",
   CellTags->"Info3298628331-9832253"],
  Cell[96693, 3589, 889, 27, 97, "Print",
   CellTags->"Info3298628331-9832253"]},
 "Info3298628331-7734930"->{
  Cell[99926, 3716, 62, 1, 42, "Print",
   CellTags->"Info3298628331-7734930"],
  Cell[99991, 3719, 885, 27, 92, "Print",
   CellTags->"Info3298628331-7734930"]},
 "Info3615100106-4253237"->{
  Cell[152532, 5461, 1612, 27, 146, "Print",
   CellTags->"Info3615100106-4253237"],
  Cell[155698, 5560, 1231, 22, 119, "Print",
   CellTags->"Info3615100106-4253237"],
  Cell[159476, 5693, 2488, 38, 93, "Print",
   CellTags->"Info3615100106-4253237"],
  Cell[164404, 5840, 700, 15, 65, "Print",
   CellTags->"Info3615100106-4253237"]},
 "Info3615100107-4253237"->{
  Cell[166331, 5908, 676, 14, 65, "Print",
   CellTags->"Info3615100107-4253237"],
  Cell[167952, 5962, 676, 14, 92, "Print",
   CellTags->"Info3615100107-4253237"],
  Cell[168746, 5985, 633, 14, 65, "Print",
   CellTags->"Info3615100107-4253237"],
  Cell[170802, 6065, 1255, 22, 65, "Print",
   CellTags->"Info3615100107-4253237"],
  Cell[172169, 6096, 727, 15, 65, "Print",
   CellTags->"Info3615100107-4253237"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 231168, 7279},
 {"Info3615029250-7810207", 234312, 7350},
 {"Info3615034107-2903092", 234425, 7353},
 {"Info3615034108-4922696", 234863, 7364},
 {"Info3615034108-8845393", 235708, 7385},
 {"Info3615034108-5357437", 235901, 7390},
 {"Info3615034109-5357437", 236094, 7395},
 {"Info3615036800-5357437", 236205, 7398},
 {"Info3615036801-5357437", 236970, 7417},
 {"Info3615037674-5357437", 237570, 7432},
 {"Info3298628331-9832253", 237762, 7437},
 {"Info3298628331-7734930", 237954, 7442},
 {"Info3615100106-4253237", 238146, 7447},
 {"Info3615100107-4253237", 238513, 7456}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 4346, 97, 2, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[4928, 121, 210, 3, 185, "Title"],
Cell[5141, 126, 90, 1, 99, "Subtitle"],
Cell[5234, 129, 107, 4, 158, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5378, 138, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[5467, 143, 123, 2, 112, "Section"],
Cell[5593, 147, 303, 5, 105, "Text"],
Cell[5899, 154, 266, 5, 105, "Text"],
Cell[6168, 161, 317, 6, 105, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6534, 173, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[6623, 178, 192, 2, 83, "Subsection"],
Cell[6818, 182, 276, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[7119, 192, 166, 5, 44, "Input"],
Cell[7288, 199, 93, 2, 44, "Output"]
}, Open  ]],
Cell[7396, 204, 267, 3, 45, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7712, 213, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[7801, 218, 49, 0, 83, "Subsection"],
Cell[7853, 220, 260, 7, 75, "Text"],
Cell[8116, 229, 149, 4, 32, "DisplayFormula"],
Cell[8268, 235, 132, 6, 46, "Text"],
Cell[8403, 243, 338, 8, 107, "Text"],
Cell[CellGroupData[{
Cell[8766, 255, 141, 4, 44, "Input"],
Cell[8910, 261, 291, 10, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9238, 276, 117, 3, 44, "Input"],
Cell[9358, 281, 293, 10, 44, "Output"]
}, Open  ]],
Cell[9666, 294, 60, 0, 45, "Text"],
Cell[9729, 296, 429, 11, 106, "Text"],
Cell[CellGroupData[{
Cell[10183, 311, 71, 2, 44, "Input"],
Cell[10257, 315, 1612, 27, 146, "Print",
 CellTags->"Info3615029250-7810207"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11906, 347, 267, 7, 44, "Input"],
Cell[12176, 356, 418, 13, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12655, 376, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[12744, 381, 48, 0, 83, "Subsection"],
Cell[12795, 383, 134, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[12954, 390, 141, 4, 44, "Input"],
Cell[13098, 396, 150, 4, 44, "Output"]
}, Open  ]],
Cell[13263, 403, 132, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[13420, 410, 141, 4, 44, "Input"],
Cell[13564, 416, 95, 2, 44, "Output"]
}, Open  ]],
Cell[13674, 421, 267, 5, 75, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13990, 432, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[14079, 437, 122, 2, 112, "Section"],
Cell[CellGroupData[{
Cell[14226, 443, 186, 2, 83, "Subsection"],
Cell[14415, 447, 342, 9, 77, "Text"],
Cell[CellGroupData[{
Cell[14782, 460, 162, 5, 44, "Input"],
Cell[14947, 467, 93, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15077, 474, 157, 5, 44, "Input"],
Cell[15237, 481, 96, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15370, 488, 205, 6, 44, "Input"],
Cell[15578, 496, 97, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15712, 503, 183, 6, 44, "Input"],
Cell[15898, 511, 151, 4, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16122, 523, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[16211, 528, 40, 0, 83, "Subsection"],
Cell[16254, 530, 260, 5, 75, "Text"],
Cell[CellGroupData[{
Cell[16539, 539, 185, 5, 46, "ItemNumbered"],
Cell[16727, 546, 112, 1, 45, "ItemNumbered"],
Cell[16842, 549, 393, 12, 119, "ItemParagraph"],
Cell[17238, 563, 403, 9, 72, "ItemNumbered"]
}, Open  ]],
Cell[17656, 575, 94, 2, 45, "Text"],
Cell[17753, 579, 113, 4, 46, "Text"],
Cell[17869, 585, 323, 8, 44, "Input"],
Cell[18195, 595, 611, 22, 44, "Input"],
Cell[18809, 619, 89, 2, 45, "Text"],
Cell[CellGroupData[{
Cell[18923, 625, 404, 11, 44, "Input"],
Cell[19330, 638, 165, 4, 44, "Output"]
}, Open  ]],
Cell[19510, 645, 93, 2, 45, "Text"],
Cell[CellGroupData[{
Cell[19628, 651, 250, 6, 44, "Input"],
Cell[19881, 659, 600, 12, 80, "Message"],
Cell[20484, 673, 212, 4, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20757, 684, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[20846, 689, 42, 0, 83, "Subsection"],
Cell[20891, 691, 192, 7, 77, "Text"],
Cell[21086, 700, 184, 3, 32, "DisplayFormula"],
Cell[CellGroupData[{
Cell[21295, 707, 138, 5, 44, "Input"],
Cell[21436, 714, 97, 2, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21594, 723, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[21683, 728, 44, 0, 83, "Subsection"],
Cell[21730, 730, 225, 4, 75, "Text"],
Cell[CellGroupData[{
Cell[21980, 738, 73, 2, 44, "Input"],
Cell[22056, 742, 97, 2, 44, "Output"]
}, Open  ]],
Cell[22168, 747, 140, 3, 75, "Text"],
Cell[22311, 752, 91, 3, 44, "Input"],
Cell[CellGroupData[{
Cell[22427, 759, 73, 2, 44, "Input"],
Cell[22503, 763, 111, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22651, 771, 52, 1, 44, "Input"],
Cell[22706, 774, 111, 3, 44, "Output"]
}, Open  ]],
Cell[22832, 780, 170, 3, 75, "Text"],
Cell[CellGroupData[{
Cell[23027, 787, 173, 6, 44, "Input"],
Cell[23203, 795, 879, 39, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24143, 841, 92, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[24260, 847, 51, 0, 83, "Subsection"],
Cell[24314, 849, 687, 10, 195, "Text"],
Cell[25004, 861, 187, 4, 45, "Text"],
Cell[25194, 867, 482, 8, 135, "Text"],
Cell[25679, 877, 420, 7, 135, "Text"],
Cell[26102, 886, 385, 11, 82, "DisplayFormula"],
Cell[26490, 899, 568, 17, 79, "DisplayFormula"],
Cell[27061, 918, 435, 12, 72, "DisplayFormula"],
Cell[27499, 932, 514, 15, 79, "DisplayFormula"],
Cell[28016, 949, 410, 11, 72, "DisplayFormula"],
Cell[28429, 962, 354, 7, 85, "Text"],
Cell[28786, 971, 184, 4, 75, "Text"],
Cell[28973, 977, 184, 4, 45, "Text"],
Cell[29160, 983, 388, 7, 105, "Text"],
Cell[29551, 992, 134, 3, 32, "DisplayFormula"],
Cell[29688, 997, 152, 3, 75, "Text"],
Cell[29843, 1002, 116, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[29984, 1009, 147, 2, 45, "ItemNumbered"],
Cell[30134, 1013, 214, 4, 71, "ItemNumbered"],
Cell[30351, 1019, 175, 4, 45, "ItemNumbered"]
}, Open  ]],
Cell[30541, 1026, 59, 0, 45, "Text"],
Cell[30603, 1028, 297, 6, 45, "Text"],
Cell[CellGroupData[{
Cell[30925, 1038, 534, 15, 124, "ItemNumbered"],
Cell[31462, 1055, 283, 5, 71, "ItemNumbered"],
Cell[31748, 1062, 107, 2, 37, "ItemParagraph"]
}, Open  ]],
Cell[31870, 1067, 139, 3, 45, "Text"],
Cell[32012, 1072, 146, 3, 75, "Text"],
Cell[32161, 1077, 110, 3, 45, "Text"],
Cell[32274, 1082, 220, 5, 75, "Text"],
Cell[CellGroupData[{
Cell[32519, 1091, 142, 4, 44, "Input"],
Cell[32664, 1097, 94, 2, 44, "Output"]
}, Open  ]],
Cell[32773, 1102, 186, 6, 76, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33008, 1114, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[33097, 1119, 48, 0, 83, "Subsection"],
Cell[33148, 1121, 759, 28, 137, "Text"],
Cell[33910, 1151, 290, 9, 77, "Text"],
Cell[CellGroupData[{
Cell[34225, 1164, 182, 5, 44, "Input"],
Cell[34410, 1171, 151, 4, 44, "Output"]
}, Open  ]],
Cell[34576, 1178, 223, 4, 75, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34848, 1188, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[34937, 1193, 27, 0, 112, "Section"],
Cell[CellGroupData[{
Cell[34989, 1197, 28, 0, 83, "Subsection"],
Cell[35020, 1199, 172, 5, 76, "Text"],
Cell[35195, 1206, 239, 5, 76, "Text"],
Cell[CellGroupData[{
Cell[35459, 1215, 133, 4, 46, "ItemNumbered"],
Cell[35595, 1221, 136, 4, 46, "ItemNumbered"],
Cell[35734, 1227, 137, 4, 46, "ItemNumbered"],
Cell[35874, 1233, 102, 1, 45, "ItemNumbered"],
Cell[35979, 1236, 109, 1, 45, "ItemNumbered"],
Cell[36091, 1239, 108, 1, 45, "ItemNumbered"],
Cell[36202, 1242, 103, 1, 45, "ItemNumbered"],
Cell[36308, 1245, 110, 1, 45, "ItemNumbered"],
Cell[36421, 1248, 109, 1, 45, "ItemNumbered"],
Cell[36533, 1251, 76, 1, 45, "ItemNumbered"]
}, Open  ]],
Cell[36624, 1255, 580, 11, 166, "Text"],
Cell[37207, 1268, 438, 14, 106, "Text"],
Cell[37648, 1284, 406, 11, 107, "Text"],
Cell[38057, 1297, 313, 10, 77, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38431, 1314, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[38520, 1319, 52, 0, 83, "Subsection"],
Cell[38575, 1321, 249, 6, 76, "Text"],
Cell[CellGroupData[{
Cell[38849, 1331, 154, 5, 44, "Input"],
Cell[39006, 1338, 55, 1, 44, "Output"]
}, Open  ]],
Cell[39076, 1342, 171, 3, 75, "Text"],
Cell[39250, 1347, 397, 10, 107, "Text"],
Cell[39650, 1359, 121, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[39796, 1366, 130, 4, 45, "Input"],
Cell[39929, 1372, 55, 1, 44, "Output"]
}, Open  ]],
Cell[39999, 1376, 172, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[40196, 1385, 154, 5, 45, "Input"],
Cell[40353, 1392, 55, 1, 44, "Output"]
}, Open  ]],
Cell[40423, 1396, 346, 10, 77, "Text"],
Cell[CellGroupData[{
Cell[40794, 1410, 161, 5, 45, "Input"],
Cell[40958, 1417, 55, 1, 44, "Output"]
}, Open  ]],
Cell[41028, 1421, 167, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[41220, 1430, 135, 4, 45, "Input"],
Cell[41358, 1436, 55, 1, 44, "Output"]
}, Open  ]],
Cell[41428, 1440, 207, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[41660, 1450, 160, 5, 45, "Input"],
Cell[41823, 1457, 55, 1, 44, "Output"]
}, Open  ]],
Cell[41893, 1461, 169, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[42087, 1470, 154, 5, 45, "Input"],
Cell[42244, 1477, 55, 1, 44, "Output"]
}, Open  ]],
Cell[42314, 1481, 330, 6, 106, "Text"],
Cell[CellGroupData[{
Cell[42669, 1491, 167, 5, 45, "Input"],
Cell[42839, 1498, 55, 1, 44, "Output"]
}, Open  ]],
Cell[42909, 1502, 160, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[43094, 1510, 154, 5, 45, "Input"],
Cell[43251, 1517, 55, 1, 44, "Output"]
}, Open  ]],
Cell[43321, 1521, 246, 7, 76, "Text"],
Cell[CellGroupData[{
Cell[43592, 1532, 155, 5, 45, "Input"],
Cell[43750, 1539, 55, 1, 44, "Output"]
}, Open  ]],
Cell[43820, 1543, 46, 0, 45, "Text"],
Cell[CellGroupData[{
Cell[43891, 1547, 154, 5, 45, "Input"],
Cell[44048, 1554, 56, 1, 44, "Output"]
}, Open  ]],
Cell[44119, 1558, 618, 18, 77, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44786, 1582, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[44875, 1587, 76, 0, 83, "Subsection"],
Cell[44954, 1589, 301, 8, 107, "Text"],
Cell[45258, 1599, 167, 3, 75, "Text"],
Cell[CellGroupData[{
Cell[45450, 1606, 190, 6, 45, "Input"],
Cell[45643, 1614, 55, 1, 44, "Output"]
}, Open  ]],
Cell[45713, 1618, 122, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[45860, 1625, 150, 5, 45, "Input"],
Cell[46013, 1632, 56, 1, 44, "Output"]
}, Open  ]],
Cell[46084, 1636, 121, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[46230, 1643, 131, 4, 45, "Input"],
Cell[46364, 1649, 55, 1, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46480, 1657, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[46569, 1662, 77, 0, 83, "Subsection"],
Cell[46649, 1664, 301, 7, 107, "Text"],
Cell[CellGroupData[{
Cell[46975, 1675, 151, 5, 45, "Input"],
Cell[47129, 1682, 55, 1, 44, "Output"]
}, Open  ]],
Cell[47199, 1686, 172, 4, 75, "Text"],
Cell[CellGroupData[{
Cell[47396, 1694, 132, 4, 45, "Input"],
Cell[47531, 1700, 55, 1, 44, "Output"]
}, Open  ]],
Cell[47601, 1704, 192, 6, 75, "Text"],
Cell[CellGroupData[{
Cell[47818, 1714, 189, 6, 45, "Input"],
Cell[48010, 1722, 56, 1, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48127, 1730, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[48216, 1735, 50, 0, 83, "Subsection"],
Cell[48269, 1737, 126, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[48420, 1744, 204, 7, 46, "Input"],
Cell[48627, 1753, 55, 1, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48743, 1761, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[48832, 1766, 50, 0, 83, "Subsection"],
Cell[48885, 1768, 250, 4, 105, "Text"],
Cell[49138, 1774, 567, 20, 108, "Text"],
Cell[CellGroupData[{
Cell[49730, 1798, 199, 5, 45, "Input"],
Cell[49932, 1805, 56, 1, 44, "Output"]
}, Open  ]],
Cell[50003, 1809, 160, 5, 38, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[50188, 1818, 203, 7, 45, "Input"],
Cell[50394, 1827, 56, 1, 44, "Output"]
}, Open  ]],
Cell[50465, 1831, 187, 7, 38, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[50677, 1842, 205, 7, 45, "Input"],
Cell[50885, 1851, 55, 1, 44, "Output"]
}, Open  ]],
Cell[50955, 1855, 185, 7, 38, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[51165, 1866, 210, 7, 45, "Input"],
Cell[51378, 1875, 56, 1, 44, "Output"]
}, Open  ]],
Cell[51449, 1879, 208, 7, 38, "SubitemParagraph"],
Cell[51660, 1888, 425, 14, 107, "Text"],
Cell[CellGroupData[{
Cell[52110, 1906, 155, 5, 45, "Input"],
Cell[52268, 1913, 55, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52360, 1919, 255, 9, 45, "Input"],
Cell[52618, 1930, 55, 1, 44, "Output"]
}, Open  ]],
Cell[52688, 1934, 343, 10, 38, "SubitemParagraph"],
Cell[53034, 1946, 253, 5, 75, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53336, 1957, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[53425, 1962, 32, 0, 112, "Section"],
Cell[CellGroupData[{
Cell[53482, 1966, 40, 0, 83, "Subsection"],
Cell[53525, 1968, 616, 10, 165, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54178, 1983, 44, 0, 83, "Subsection"],
Cell[54225, 1985, 350, 6, 135, "Text"],
Cell[54578, 1993, 299, 9, 77, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54938, 2009, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[55027, 2014, 133, 6, 83, "Subsection"],
Cell[55163, 2022, 241, 5, 76, "Text"],
Cell[55407, 2029, 62, 1, 32, "DisplayFormula"],
Cell[55472, 2032, 213, 4, 75, "Text"],
Cell[55688, 2038, 209, 4, 75, "Text"],
Cell[55900, 2044, 117, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[56042, 2052, 140, 5, 44, "Input"],
Cell[56185, 2059, 116, 4, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56338, 2068, 166, 5, 44, "Input"],
Cell[56507, 2075, 52, 1, 44, "Output"]
}, Open  ]],
Cell[56574, 2079, 328, 10, 107, "Text"],
Cell[CellGroupData[{
Cell[56927, 2093, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[57020, 2099, 118, 2, 61, "Print",
 CellTags->"Info3615034107-2903092"],
Cell[57141, 2103, 832, 24, 41, "Print",
 CellTags->"Info3615034107-2903092"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58022, 2133, 72, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[58119, 2139, 122, 2, 61, "Print",
 CellTags->"Info3615034107-2903092"],
Cell[58244, 2143, 853, 24, 41, "Print",
 CellTags->"Info3615034107-2903092"]
}, Open  ]]
}, Open  ]],
Cell[59124, 2171, 852, 23, 169, "Text"],
Cell[CellGroupData[{
Cell[60001, 2198, 89, 2, 44, "Input"],
Cell[60093, 2202, 137, 4, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60267, 2211, 76, 2, 44, "Input"],
Cell[60346, 2215, 444, 11, 91, "Print",
 CellTags->"Info3615034107-2903092"]
}, Open  ]],
Cell[60805, 2229, 256, 8, 77, "Text"],
Cell[CellGroupData[{
Cell[61086, 2241, 103, 3, 44, "Input"],
Cell[61192, 2246, 52, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61281, 2252, 51, 1, 44, "Input"],
Cell[61335, 2255, 52, 1, 44, "Output"]
}, Open  ]],
Cell[61402, 2259, 125, 3, 44, "Input"],
Cell[CellGroupData[{
Cell[61552, 2266, 89, 2, 44, "Input"],
Cell[61644, 2270, 116, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61797, 2278, 103, 3, 44, "Input"],
Cell[61903, 2283, 317, 7, 44, "Message"],
Cell[62223, 2292, 52, 1, 44, "Output"]
}, Open  ]],
Cell[62290, 2296, 123, 3, 44, "Input"],
Cell[CellGroupData[{
Cell[62438, 2303, 89, 2, 44, "Input"],
Cell[62530, 2307, 137, 4, 44, "Output"]
}, Open  ]],
Cell[62682, 2314, 237, 4, 105, "Text"],
Cell[CellGroupData[{
Cell[62944, 2322, 264, 9, 44, "Input"],
Cell[63211, 2333, 77, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63325, 2340, 72, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[63422, 2346, 122, 2, 61, "Print",
 CellTags->"Info3615034108-4922696"],
Cell[63547, 2350, 760, 21, 41, "Print",
 CellTags->"Info3615034108-4922696"]
}, Open  ]]
}, Open  ]],
Cell[64334, 2375, 219, 6, 76, "Text"],
Cell[64556, 2383, 177, 3, 75, "Text"],
Cell[CellGroupData[{
Cell[64758, 2390, 264, 9, 44, "Input"],
Cell[65025, 2401, 396, 8, 68, "Message"],
Cell[65424, 2411, 116, 4, 44, "Output"]
}, Open  ]],
Cell[65555, 2418, 303, 5, 105, "Text"],
Cell[CellGroupData[{
Cell[65883, 2427, 72, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[65980, 2433, 122, 2, 61, "Print",
 CellTags->"Info3615034108-4922696"],
Cell[66105, 2437, 838, 24, 41, "Print",
 CellTags->"Info3615034108-4922696"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66992, 2467, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[67085, 2473, 118, 2, 61, "Print",
 CellTags->"Info3615034108-4922696"],
Cell[67206, 2477, 832, 24, 41, "Print",
 CellTags->"Info3615034108-4922696"]
}, Open  ]]
}, Open  ]],
Cell[68065, 2505, 241, 8, 76, "Text"],
Cell[CellGroupData[{
Cell[68331, 2517, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[68424, 2523, 118, 2, 61, "Print",
 CellTags->"Info3615034108-4922696"],
Cell[68545, 2527, 830, 24, 41, "Print",
 CellTags->"Info3615034108-4922696"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69424, 2557, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[69517, 2563, 120, 2, 61, "Print",
 CellTags->"Info3615034108-4922696"],
Cell[69640, 2567, 829, 24, 41, "Print",
 CellTags->"Info3615034108-4922696"]
}, Open  ]]
}, Open  ]],
Cell[70496, 2595, 303, 6, 106, "Text"],
Cell[CellGroupData[{
Cell[70824, 2605, 84, 2, 44, "Input"],
Cell[70911, 2609, 69, 1, 44, "Output"]
}, Open  ]],
Cell[70995, 2613, 218, 6, 77, "Text"],
Cell[71216, 2621, 305, 7, 76, "Text"],
Cell[71524, 2630, 187, 6, 44, "Input"],
Cell[CellGroupData[{
Cell[71736, 2640, 72, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[71833, 2646, 124, 2, 61, "Print",
 CellTags->"Info3615034108-8845393"],
Cell[71960, 2650, 750, 21, 41, "Print",
 CellTags->"Info3615034108-8845393"]
}, Open  ]]
}, Open  ]],
Cell[72737, 2675, 187, 6, 44, "Input"],
Cell[CellGroupData[{
Cell[72949, 2685, 72, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[73046, 2691, 122, 2, 61, "Print",
 CellTags->"Info3615034108-5357437"],
Cell[73171, 2695, 750, 21, 41, "Print",
 CellTags->"Info3615034108-5357437"]
}, Open  ]]
}, Open  ]],
Cell[73948, 2720, 300, 12, 77, "Text"],
Cell[74251, 2734, 323, 10, 107, "Text"],
Cell[74577, 2746, 204, 7, 77, "Text"],
Cell[74784, 2755, 82, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[74891, 2761, 68, 2, 44, "Input"],
Cell[74962, 2765, 118, 2, 61, "Print",
 CellTags->"Info3615034109-5357437"]
}, Open  ]],
Cell[75095, 2770, 83, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[75203, 2776, 68, 2, 44, "Input"],
Cell[75274, 2780, 328, 6, 44, "Message"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75663, 2793, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[75752, 2798, 143, 6, 83, "Subsection"],
Cell[75898, 2806, 68, 0, 45, "Text"],
Cell[75969, 2808, 260, 6, 32, "DisplayFormula"],
Cell[76232, 2816, 358, 6, 135, "Text"],
Cell[76593, 2824, 61, 0, 45, "Text"],
Cell[76657, 2826, 199, 6, 32, "DisplayFormula"],
Cell[76859, 2834, 57, 0, 45, "Text"],
Cell[76919, 2836, 189, 6, 45, "Input"],
Cell[77111, 2844, 234, 6, 76, "Text"],
Cell[CellGroupData[{
Cell[77370, 2854, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[77463, 2860, 118, 2, 61, "Print",
 CellTags->"Info3615036800-5357437"],
Cell[77584, 2864, 1020, 30, 92, "Print",
 CellTags->"Info3615036800-5357437"]
}, Open  ]]
}, Open  ]],
Cell[78631, 2898, 514, 15, 108, "Text"],
Cell[CellGroupData[{
Cell[79170, 2917, 96, 2, 44, "Input"],
Cell[79269, 2921, 134, 4, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79440, 2930, 74, 2, 44, "Input"],
Cell[79517, 2934, 435, 11, 91, "Print",
 CellTags->"Info3615036800-5357437"]
}, Open  ]],
Cell[79967, 2948, 163, 3, 75, "Text"],
Cell[CellGroupData[{
Cell[80155, 2955, 78, 2, 44, "Input"],
Cell[80236, 2959, 70, 1, 44, "Output"]
}, Open  ]],
Cell[80321, 2963, 197, 4, 75, "Text"],
Cell[CellGroupData[{
Cell[80543, 2971, 78, 2, 44, "Input"],
Cell[80624, 2975, 69, 1, 44, "Output"]
}, Open  ]],
Cell[80708, 2979, 321, 8, 106, "Text"],
Cell[81032, 2989, 121, 4, 45, "Input"],
Cell[CellGroupData[{
Cell[81178, 2997, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[81271, 3003, 118, 2, 61, "Print",
 CellTags->"Info3615036800-5357437"],
Cell[81392, 3007, 910, 27, 92, "Print",
 CellTags->"Info3615036800-5357437"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82351, 3040, 78, 2, 44, "Input"],
Cell[82432, 3044, 52, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82521, 3050, 78, 2, 44, "Input"],
Cell[82602, 3054, 52, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82691, 3060, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[82784, 3066, 118, 2, 61, "Print",
 CellTags->"Info3615036800-5357437"],
Cell[82905, 3070, 910, 27, 92, "Print",
 CellTags->"Info3615036800-5357437"]
}, Open  ]]
}, Open  ]],
Cell[83842, 3101, 294, 8, 77, "Text"],
Cell[84139, 3111, 91, 3, 44, "Input"],
Cell[84233, 3116, 121, 4, 45, "Input"],
Cell[CellGroupData[{
Cell[84379, 3124, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[84472, 3130, 118, 2, 61, "Print",
 CellTags->"Info3615036800-5357437"],
Cell[84593, 3134, 778, 22, 41, "Print",
 CellTags->"Info3615036800-5357437"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85420, 3162, 78, 2, 44, "Input"],
Cell[85501, 3166, 52, 1, 44, "Output"]
}, Open  ]],
Cell[85568, 3170, 122, 4, 46, "Text"],
Cell[85693, 3176, 91, 3, 44, "Input"],
Cell[85787, 3181, 103, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[85915, 3188, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[86008, 3194, 118, 2, 61, "Print",
 CellTags->"Info3615036801-5357437"],
Cell[86129, 3198, 779, 22, 41, "Print",
 CellTags->"Info3615036801-5357437"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86957, 3226, 78, 2, 44, "Input"],
Cell[87038, 3230, 52, 1, 44, "Output"]
}, Open  ]],
Cell[87105, 3234, 277, 8, 77, "Text"],
Cell[87385, 3244, 465, 8, 136, "Text"],
Cell[87853, 3254, 200, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[88078, 3265, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[88171, 3271, 118, 2, 61, "Print",
 CellTags->"Info3615036801-5357437"],
Cell[88292, 3275, 904, 26, 44, "Print",
 CellTags->"Info3615036801-5357437"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89245, 3307, 68, 2, 44, "Input"],
Cell[89316, 3311, 118, 2, 61, "Print",
 CellTags->"Info3615036801-5357437"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89471, 3318, 78, 2, 44, "Input"],
Cell[89552, 3322, 52, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89641, 3328, 68, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[89734, 3334, 118, 2, 61, "Print",
 CellTags->"Info3615036801-5357437"],
Cell[89855, 3338, 742, 21, 41, "Print",
 CellTags->"Info3615036801-5357437"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90670, 3367, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[90759, 3372, 59, 0, 83, "Subsection"],
Cell[90821, 3374, 478, 13, 138, "Text"],
Cell[91302, 3389, 191, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[91518, 3399, 78, 2, 44, "Input"],
Cell[91599, 3403, 69, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91705, 3409, 78, 2, 44, "Input"],
Cell[91786, 3413, 79, 2, 44, "Output"]
}, Open  ]],
Cell[91880, 3418, 418, 7, 63, "SubitemParagraph"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92347, 3431, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[92436, 3436, 56, 0, 83, "Subsection"],
Cell[92495, 3438, 546, 14, 136, "Text"],
Cell[93044, 3454, 339, 6, 105, "Text"],
Cell[93386, 3462, 104, 4, 46, "Text"],
Cell[93493, 3468, 235, 7, 32, "DisplayFormula"],
Cell[93731, 3477, 28, 0, 45, "Text"],
Cell[93762, 3479, 263, 9, 45, "Input"],
Cell[CellGroupData[{
Cell[94050, 3492, 69, 2, 44, "Input"],
Cell[94122, 3496, 118, 2, 61, "Print",
 CellTags->"Info3615037674-5357437"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94277, 3503, 79, 2, 44, "Input"],
Cell[94359, 3507, 53, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94449, 3513, 69, 2, 44, "Input"],
Cell[94521, 3517, 117, 2, 61, "Print",
 CellTags->"Info3615037674-5357437"]
}, Open  ]],
Cell[94653, 3522, 427, 9, 38, "SubitemParagraph"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95129, 3537, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[95218, 3542, 44, 0, 83, "Subsection"],
Cell[95265, 3544, 296, 5, 105, "Text"],
Cell[95564, 3551, 67, 0, 45, "Text"],
Cell[95634, 3553, 149, 3, 75, "Text"],
Cell[95786, 3558, 433, 7, 135, "Text"],
Cell[96222, 3567, 239, 7, 71, "Input"],
Cell[96464, 3576, 45, 0, 45, "Text"],
Cell[CellGroupData[{
Cell[96534, 3580, 69, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[96628, 3586, 62, 1, 42, "Print",
 CellTags->"Info3298628331-9832253"],
Cell[96693, 3589, 889, 27, 97, "Print",
 CellTags->"Info3298628331-9832253"]
}, Open  ]]
}, Open  ]],
Cell[97609, 3620, 100, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[97734, 3628, 80, 2, 44, "Input"],
Cell[97817, 3632, 56, 1, 44, "Output"]
}, Open  ]],
Cell[97888, 3636, 132, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[98045, 3644, 79, 2, 44, "Input"],
Cell[98127, 3648, 55, 1, 44, "Output"]
}, Open  ]],
Cell[98197, 3652, 334, 10, 107, "Text"],
Cell[98534, 3664, 236, 4, 75, "Text"],
Cell[98773, 3670, 288, 7, 105, "Text"],
Cell[99064, 3679, 302, 5, 105, "Text"],
Cell[99369, 3686, 127, 4, 45, "Input"],
Cell[99499, 3692, 135, 4, 45, "Input"],
Cell[CellGroupData[{
Cell[99659, 3700, 79, 2, 44, "Input"],
Cell[99741, 3704, 54, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99832, 3710, 69, 2, 44, "Input"],
Cell[CellGroupData[{
Cell[99926, 3716, 62, 1, 42, "Print",
 CellTags->"Info3298628331-7734930"],
Cell[99991, 3719, 885, 27, 92, "Print",
 CellTags->"Info3298628331-7734930"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100949, 3754, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[101038, 3759, 39, 0, 112, "Section"],
Cell[101080, 3761, 804, 16, 227, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101933, 3783, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[102022, 3788, 117, 6, 83, "Subsection"],
Cell[102142, 3796, 116, 4, 46, "Text"],
Cell[102261, 3802, 101, 2, 32, "DisplayFormula"],
Cell[102365, 3806, 91, 2, 45, "Text"],
Cell[102459, 3810, 420, 11, 107, "Text"],
Cell[102882, 3823, 83, 2, 44, "Input"],
Cell[102968, 3827, 617, 11, 38, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[103610, 3842, 297, 9, 44, "Input"],
Cell[103910, 3853, 118, 3, 44, "Output"]
}, Open  ]],
Cell[104043, 3859, 453, 9, 38, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[104521, 3872, 297, 9, 44, "Input"],
Cell[104821, 3883, 118, 3, 44, "Output"]
}, Open  ]],
Cell[104954, 3889, 453, 9, 38, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[105432, 3902, 516, 16, 44, "Input"],
Cell[105951, 3920, 118, 3, 44, "Output"]
}, Open  ]],
Cell[106084, 3926, 505, 10, 38, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[106614, 3940, 516, 16, 44, "Input"],
Cell[107133, 3958, 118, 3, 44, "Output"]
}, Open  ]],
Cell[107266, 3964, 502, 10, 38, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[107793, 3978, 516, 16, 44, "Input"],
Cell[108312, 3996, 118, 3, 44, "Output"]
}, Open  ]],
Cell[108445, 4002, 533, 10, 38, "SubitemParagraph"],
Cell[108981, 4014, 69, 0, 45, "Text"],
Cell[109053, 4016, 213, 6, 32, "DisplayFormula"],
Cell[109269, 4024, 28, 0, 45, "Text"],
Cell[109300, 4026, 241, 8, 44, "Input"],
Cell[109544, 4036, 754, 24, 38, "SubitemParagraph"],
Cell[110301, 4062, 108, 3, 44, "Output"],
Cell[110412, 4067, 412, 9, 135, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110873, 4082, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[110962, 4087, 124, 6, 83, "Subsection"],
Cell[111089, 4095, 123, 4, 46, "Text"],
Cell[111215, 4101, 108, 2, 32, "DisplayFormula"],
Cell[111326, 4105, 39, 0, 45, "Text"],
Cell[111368, 4107, 227, 6, 32, "DisplayFormula"],
Cell[111598, 4115, 91, 2, 45, "Text"],
Cell[111692, 4119, 478, 12, 136, "Text"],
Cell[112173, 4133, 28, 0, 45, "Text"],
Cell[CellGroupData[{
Cell[112226, 4137, 523, 16, 44, "Input"],
Cell[112752, 4155, 118, 3, 44, "Output"]
}, Open  ]],
Cell[112885, 4161, 866, 15, 65, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[113776, 4180, 523, 16, 44, "Input"],
Cell[114302, 4198, 118, 3, 44, "Output"]
}, Open  ]],
Cell[114435, 4204, 1109, 20, 119, "SubitemParagraph"],
Cell[CellGroupData[{
Cell[115569, 4228, 523, 16, 44, "Input"],
Cell[116095, 4246, 118, 3, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116274, 4256, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[116363, 4261, 66, 0, 83, "Subsection"],
Cell[116432, 4263, 368, 12, 107, "Text"],
Cell[116803, 4277, 316, 10, 76, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117168, 4293, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[117257, 4298, 63, 0, 83, "Subsection"],
Cell[117323, 4300, 219, 5, 76, "Text"],
Cell[CellGroupData[{
Cell[117567, 4309, 242, 8, 44, "Input"],
Cell[117812, 4319, 108, 3, 44, "Output"]
}, Open  ]],
Cell[117935, 4325, 820, 25, 38, "SubitemParagraph"],
Cell[118758, 4352, 302, 7, 106, "Text"],
Cell[119063, 4361, 924, 28, 154, "DisplayFormula"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[120036, 4395, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[120125, 4400, 47, 0, 112, "Section"],
Cell[120175, 4402, 262, 5, 75, "Text"],
Cell[CellGroupData[{
Cell[120462, 4411, 43, 0, 83, "Subsection"],
Cell[120508, 4413, 64, 0, 45, "Text"],
Cell[CellGroupData[{
Cell[120597, 4417, 83, 2, 44, "Input"],
Cell[120683, 4421, 71, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120791, 4427, 81, 2, 44, "Input"],
Cell[120875, 4431, 71, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120983, 4437, 81, 2, 44, "Input"],
Cell[121067, 4441, 71, 1, 44, "Output"]
}, Open  ]],
Cell[121153, 4445, 138, 5, 45, "Text"],
Cell[CellGroupData[{
Cell[121316, 4454, 144, 4, 44, "Input"],
Cell[121463, 4460, 71, 1, 44, "Output"]
}, Open  ]],
Cell[121549, 4464, 164, 3, 75, "Text"],
Cell[121716, 4469, 323, 5, 105, "Text"],
Cell[122042, 4476, 107, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[122174, 4483, 107, 3, 44, "Input"],
Cell[122284, 4488, 176, 5, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122497, 4498, 249, 7, 44, "Input"],
Cell[122749, 4507, 284, 6, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123070, 4518, 244, 7, 44, "Input"],
Cell[123317, 4527, 4366, 118, 145, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127720, 4650, 108, 3, 44, "Input"],
Cell[127831, 4655, 3994, 108, 145, "Output"]
}, Open  ]],
Cell[131840, 4766, 111, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[131976, 4773, 651, 19, 44, "Input"],
Cell[132630, 4794, 3994, 108, 145, "Output"]
}, Open  ]],
Cell[136639, 4905, 41, 0, 45, "Text"],
Cell[CellGroupData[{
Cell[136705, 4909, 428, 13, 44, "Input"],
Cell[137136, 4924, 3994, 108, 145, "Output"]
}, Open  ]],
Cell[141145, 5035, 94, 2, 45, "Text"],
Cell[CellGroupData[{
Cell[141264, 5041, 443, 14, 45, "Input"],
Cell[141710, 5057, 3991, 107, 145, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145774, 5172, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[145863, 5177, 41, 0, 83, "Subsection"],
Cell[145907, 5179, 231, 6, 75, "Text"],
Cell[146141, 5187, 321, 10, 76, "Text"],
Cell[146465, 5199, 185, 4, 75, "Text"],
Cell[146653, 5205, 132, 4, 45, "Input"],
Cell[146788, 5211, 112, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[146925, 5218, 146, 5, 44, "Input"],
Cell[147074, 5225, 54, 1, 44, "Output"]
}, Open  ]],
Cell[147143, 5229, 144, 3, 75, "Text"],
Cell[CellGroupData[{
Cell[147312, 5236, 171, 6, 44, "Input"],
Cell[147486, 5244, 55, 1, 44, "Output"]
}, Open  ]],
Cell[147556, 5248, 204, 4, 75, "Text"],
Cell[147763, 5254, 133, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[147921, 5261, 195, 7, 44, "Input"],
Cell[148119, 5270, 415, 8, 51, "Message"],
Cell[148537, 5280, 150, 5, 53, "Output"]
}, Open  ]],
Cell[148702, 5288, 137, 3, 75, "Text"],
Cell[CellGroupData[{
Cell[148864, 5295, 309, 11, 44, "Input"],
Cell[149176, 5308, 53, 1, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149290, 5316, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[149379, 5321, 49, 0, 83, "Subsection"],
Cell[149431, 5323, 116, 3, 45, "Text"],
Cell[149550, 5328, 96, 2, 32, "DisplayFormula"],
Cell[149649, 5332, 168, 5, 32, "DisplayFormula"],
Cell[149820, 5339, 179, 5, 76, "Text"],
Cell[CellGroupData[{
Cell[150024, 5348, 244, 9, 44, "Input"],
Cell[150271, 5359, 55, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150363, 5365, 278, 9, 44, "Input"],
Cell[150644, 5376, 55, 1, 44, "Output"]
}, Open  ]],
Cell[150714, 5380, 56, 0, 45, "Text"],
Cell[CellGroupData[{
Cell[150795, 5384, 261, 9, 44, "Input"],
Cell[151059, 5395, 55, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151151, 5401, 261, 9, 44, "Input"],
Cell[151415, 5412, 55, 1, 44, "Output"]
}, Open  ]],
Cell[151485, 5416, 120, 3, 45, "Text"],
Cell[151608, 5421, 183, 7, 46, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[151840, 5434, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[151929, 5439, 44, 0, 83, "Subsection"],
Cell[151976, 5441, 374, 8, 105, "Text"],
Cell[CellGroupData[{
Cell[152375, 5453, 56, 0, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[152456, 5457, 73, 2, 44, "Input"],
Cell[152532, 5461, 1612, 27, 146, "Print",
 CellTags->"Info3615100106-4253237"]
}, Open  ]],
Cell[154159, 5491, 330, 10, 107, "Text"],
Cell[CellGroupData[{
Cell[154514, 5505, 261, 9, 44, "Input"],
Cell[154778, 5516, 201, 7, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155016, 5528, 271, 9, 44, "Input"],
Cell[155290, 5539, 206, 7, 44, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155545, 5552, 54, 0, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[155624, 5556, 71, 2, 44, "Input"],
Cell[155698, 5560, 1231, 22, 119, "Print",
 CellTags->"Info3615100106-4253237"]
}, Open  ]],
Cell[156944, 5585, 102, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[157071, 5593, 173, 5, 44, "Input"],
Cell[157247, 5600, 234, 7, 44, "Output"]
}, Open  ]],
Cell[157496, 5610, 331, 8, 46, "Text"],
Cell[157830, 5620, 234, 7, 77, "Text"],
Cell[CellGroupData[{
Cell[158089, 5631, 259, 9, 44, "Input"],
Cell[158351, 5642, 258, 9, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158646, 5656, 293, 10, 44, "Input"],
Cell[158942, 5668, 320, 11, 44, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159311, 5685, 60, 0, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[159396, 5689, 77, 2, 44, "Input"],
Cell[159476, 5693, 2488, 38, 93, "Print",
 CellTags->"Info3615100106-4253237"]
}, Open  ]],
Cell[161979, 5734, 102, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[162106, 5742, 285, 9, 44, "Input"],
Cell[162394, 5753, 270, 9, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162701, 5767, 288, 9, 44, "Input"],
Cell[162992, 5778, 255, 9, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163284, 5792, 288, 9, 44, "Input"],
Cell[163575, 5803, 180, 6, 44, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163804, 5815, 99, 4, 51, "Subsubsection"],
Cell[163906, 5821, 128, 3, 46, "Text"],
Cell[164037, 5826, 263, 6, 76, "Text"],
Cell[CellGroupData[{
Cell[164325, 5836, 76, 2, 44, "Input"],
Cell[164404, 5840, 700, 15, 65, "Print",
 CellTags->"Info3615100106-4253237"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165141, 5860, 315, 9, 44, "Input"],
Cell[165459, 5871, 181, 5, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165677, 5881, 123, 3, 44, "Input"],
Cell[165803, 5886, 181, 5, 44, "Output"]
}, Open  ]],
Cell[165999, 5894, 232, 6, 76, "Text"],
Cell[CellGroupData[{
Cell[166256, 5904, 72, 2, 44, "Input"],
Cell[166331, 5908, 676, 14, 65, "Print",
 CellTags->"Info3615100107-4253237"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167044, 5927, 119, 3, 44, "Input"],
Cell[167166, 5932, 71, 1, 44, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167286, 5939, 111, 4, 51, "Subsubsection"],
Cell[167400, 5945, 442, 9, 137, "Text"],
Cell[CellGroupData[{
Cell[167867, 5958, 82, 2, 44, "Input"],
Cell[167952, 5962, 676, 14, 92, "Print",
 CellTags->"Info3615100107-4253237"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168665, 5981, 78, 2, 44, "Input"],
Cell[168746, 5985, 633, 14, 65, "Print",
 CellTags->"Info3615100107-4253237"]
}, Open  ]],
Cell[169394, 6002, 30, 0, 45, "Text"],
Cell[CellGroupData[{
Cell[169449, 6006, 253, 7, 44, "Input"],
Cell[169705, 6015, 118, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169860, 6023, 315, 10, 44, "Input"],
Cell[170178, 6035, 149, 4, 44, "Output"]
}, Open  ]],
Cell[170342, 6042, 220, 6, 76, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170599, 6053, 99, 4, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[170723, 6061, 76, 2, 44, "Input"],
Cell[170802, 6065, 1255, 22, 65, "Print",
 CellTags->"Info3615100107-4253237"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172094, 6092, 72, 2, 44, "Input"],
Cell[172169, 6096, 727, 15, 65, "Print",
 CellTags->"Info3615100107-4253237"]
}, Open  ]],
Cell[172911, 6114, 336, 7, 106, "Text"],
Cell[CellGroupData[{
Cell[173272, 6125, 187, 5, 44, "Input"],
Cell[173462, 6132, 95, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173594, 6139, 191, 5, 44, "Input"],
Cell[173788, 6146, 230, 6, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174055, 6157, 241, 7, 44, "Input"],
Cell[174299, 6166, 141, 4, 44, "Output"]
}, Open  ]],
Cell[174455, 6173, 746, 14, 38, "SubitemParagraph"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175262, 6194, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[175351, 6199, 528, 7, 112, "Section"],
Cell[175882, 6208, 2654, 45, 197, "Text"],
Cell[178539, 6255, 2373, 33, 225, "Text"],
Cell[CellGroupData[{
Cell[180937, 6292, 1679, 24, 45, "ItemNumbered"],
Cell[182619, 6318, 1813, 26, 71, "ItemNumbered"],
Cell[184435, 6346, 1703, 24, 71, "ItemNumbered"]
}, Open  ]],
Cell[186153, 6373, 2234, 32, 135, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188436, 6411, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[188525, 6416, 519, 9, 83, "Subsection"],
Cell[189047, 6427, 997, 18, 75, "Text"],
Cell[190047, 6447, 3524, 89, 276, "Input"],
Cell[193574, 6538, 1899, 29, 105, "Text"],
Cell[195476, 6569, 1659, 24, 75, "Text"],
Cell[197138, 6595, 1743, 25, 105, "Text"],
Cell[198884, 6622, 1795, 25, 105, "Text"],
Cell[200682, 6649, 1617, 23, 75, "Text"],
Cell[202302, 6674, 3824, 91, 148, "Input"],
Cell[206129, 6767, 721, 13, 75, "Text"],
Cell[206853, 6782, 6203, 157, 423, "Input"],
Cell[213059, 6941, 1708, 24, 75, "Text"],
Cell[214770, 6967, 1456, 42, 96, "Input"],
Cell[216229, 7011, 2782, 47, 195, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219060, 7064, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[219149, 7069, 1595, 21, 83, "Subsection"],
Cell[220747, 7092, 3714, 65, 165, "Text"],
Cell[224464, 7159, 2973, 44, 75, "Text"],
Cell[227440, 7205, 3288, 56, 285, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
